1 News
******

This lists user-visible changes, and which releases they occurred
between. For more detailed information see the `ChangeLog' file in the
Sawfish source tree, or git log.  (See the Wiki on how to access git
repository.)

Each release lists incompatible changes at its top.

1.9.0 "Next Dimensional World"
=========================

   * Updated or New dependencies
        - librep 0.92.0 -> 0.92.1

        - rep-gtk 0.90.4 -> 0.90.7

        - ssd 0.30 [optional, for built-in poweroff-menu]

   * Bug Fixes
        - When cursor-warping was enabled and user switched to a shaded
          window, the cursor warped to the position of the unshaded
          window. This is fixed now.  [Christopher Bratusek]

        - When switching between tabbed themes from SawfishConfig, it
          could happens that there were `gaps' in the frame. This is
          fixed now. [Christopher Bratusek]

        - In SawfishConfig one could only grab key-bindings, but not
          mouse- or mixed mouse-key-bindings. This is fixed now. (Move
          mouse 20 pixels to grab a `Move' event).  [Christopher
          Bratusek]

        - SawfishConfig became useless when Sawfish restarted. This is
          now worked-around by simply restarting SawfishConfig when
          Sawfish does. A new `before-restart-hook' has been added for
          this purpose. [Christopher Bratusek]

        - In EdgeActions `HotSpot', `HotMove' and `EdgeFlip', it was
          possible to trigger the same event multiple times at a time.
          This is fixed now.  [Jeremy Hankins]

        - Fixed a bug in apps-menu, failing to generate the menu, if a
          desktop-file contains both Categories and the (errorneous)
          Category key, or only the later. [Matthew Love]

        - Fixed a bug in window-manager selection handling. Set all
          fields of the client message event. This prevents bugs, where
          Sawfish sometimes isn't able to replace another
          window-manager or aquiring the screen if no other WM is
          running. [Timo Korvola]

        - When making X request, we might receive and `select' will
          stuck. This is fixed now [Michal Maruska]

        - Avoid calling Xmap for gone windows. [Michal Maruska]

        - Fixed a possible segmentation fault in `leave_notify' [Michal
          Maruska]

        - In SawfishConfig the `choice' widget didn't work when the
          choices were numerical values. This is fixed now.
          [Christopher Bratusek]

   * Sawfish-MMC [Michal Maruska]

     Sawfish-MMC was a fork of Sawfish active, while the original
     Sawfish was inactive (2004-2007). Next follows a list of changes
     merged from Sawfish-MMC.
        - Only apply property changes if window as `refresh' property.

        - In the pixmap-cache append pixmaps to the age list, rather
          than prepending.

        - Extend `pixmap-cache-control' to reset and return more
          informations.

        - `pixmap-cache-images' returns all images in cache.

        - When initializing Sawfish, try to initialize XKB, too.

        - Misc: Drop unused `prog_name' from `display.c'. Call
          `XAddToSaveSet' from a better position in the code. Mar
          `mapped_not_override_p' static. Simplified `property_notify'.

   * EdgeAction changes [Christopher Bratusek]
        - New EdgeActions:
             x `HotMove'. Calls an EdgeAction when dragging a window
               over the edge.

             x `Expose'. Simple expose (one-shot tiling) EdgeAction
               (can also be used stand-alone).  Original code by Mark
               Triggs.

             x `Expand'. Drag a window over the edge and it expand to
               the half-screen size.

             x `Show-Desktop'. Toggles between `show-desktop' and
               `hide-desktop'.

             x `Maximize'. Just for competitive reasons choosable from
               configurator.

        - `before-edge-action-hook' and `after-edge-action-hook'. While
          `enter-flipper-hook' and `leave-flipper-hook' simply respond
          to the mouse entering or leaving the flipper-window, the new
          hooks respond only when an EdgeAction was invoked. The two
          hooks pass the invoked EdgeAction, activated edge and a
          boolean `while-moving' value to the child-function (in that
          order).

        - Simplified, more robust EdgeFlip (flip-viewport and
          flip-workspace are now split).

        - Improved logic of blocking an action while another is already
          running. On one hand, see `Bug Fixes' above, on the other
          hand it's now ensured that we dont' activate an edge twice
          when dragging a window over it or when the pointer hits the
          edge via mouse-trapping.

        - New `move-window-to-corner' and `move-window-to-edge' helpers.

        - Updated EdgeAction documentation

   * SawfishConfig changes [Christopher Bratusek]
        - Updated and Improved widgets in SawfishConfig:
             x `file'. The file(-chooser) widget now uses
               GtkFileChooserButton in favour of the ancient
               GtkFileSelectionDialog. The GtkEntry and GtkVBox used as
               helpers became useless and are removed.

             x `font'. The font(-chooser) widget now uses
               GtkFontChooserButton in favour of the ancient
               GtkFontSelectionDialog. The GtkEntry used as helper
               became useless and is removed.

             x `choice', `symbol', `keymap', `frame-style'. Those
               widgets now use GtkComboBoxText in favour of ancient
               GtkCombo/GtkComboEntry.

             x `scheme-boolean'. This widget is now properly
               implemented.

               Old: two checkboxes. First for activating setting,
               second for choosing yes or no.  New: only one checkbox,
               yes or no as usual, shows minus when unset.

             x `number'. The number-widget now has a `stepping'
               property, allowing to change the increment of a
               button-press on the spin-button.

        - New widgets in SawfishConfig:
             x `range'. The range widget represents an integer with a
               given range.  Basically it uses a GtkScale instead of a
               GtkSpinButton, which results in a better user-experience
               for those values.

             x `image'. The image widget contains a preview and
               image-selector.  The file-browser openend is setup to
               display previews, too. Original code by Lucas Pandolfo.

        - Removed widgets in SawfishConfig:
             x `program'. Just an alias to `file'.

             x All `gtk-only' widgets. Since Sawfish 1.5.0 those have
               been dummies, we don't use `libgnome', `libgnomeui' or
               `libgnomecanvas' anymore anyway.

        - New buttons. SawfishConfig now offers buttons to access Wiki,
          Help, ResourceFile and About. Additionally there's now a
          file-chooser for installing themes from `*.tar.*' files.

        - Widgets that depend on an disabled setting are now hidden
          instead of greyed-out.

        - Merged sawfish.cfg.widgets into sawfish.gtk.widgets. Old
          widgets aren't loaded anymore, even if present from an old
          installation.

        - All defcustoms do now have a property to change the position
          of the label.  To change it, append on of the following to
          the doc-string: \\left \\right \\top \\bottom.

          Example:

               (defcustom test-var 'eclipse
                 "This is just a test with label on top. \\top"
                 :type (choice eclipse crosshair none)
                 :group appearance)

          Of course that only works, if the label is a GtkLabel widget
          on it's own.

   * Theme/Theming changes [Christopher Bratusek]
          === spoiler === : StyleTab in Sawfish 1.9 add lots of new
          fancyness for the price of beeing slow.  So if you experience
          a long startup-time of Sawfish, it's a feature, not a bug. :
          == /spoiler ===

        - StyleTab changes [fuchur]:
             x The theme is now fully re-colorable. You can choose
               different colors for each button and the frame.
               Furthermore you can choose how much to dimm inactive
               frames (compared to active).

             x Majorly improved the grouping of options in StyleTab.

             x Added corners to frames (allowing resize with mouse at
               window-corners).

             x Available styles: Default (former Dark), WixDa (former
               Silver), Reduce, Smoothly and Glass (New).

             x Added hash-tables for images.

        - New themes:
             x Candido

             x Zami-like

        - Improved themes:
             x Gradient has been replaced by Gradient-tabbed.

        - Removed themes [still available from Wiki]:
             x get-S-tabbed

             x brushed-metal

             x simple

             x smaker

             x mono

             x gtk

        - New theme-related configuration-options [theme independent]:
             x Added an option to control the titlebar text position.
               If a theme draws something additional in the titlebar
               (eg. StyleTab draws an icon), refer to the functions
               `update-title-x-offsets', `update-title-y-offsets'.

             x Added an option to control the cursor-shape when
               hovering frame-buttons.

             x Added an option to change the font, depending on the
               window state.

        - Moved definitons for `previous-workspace-button' and
          `next-workspace-button' from StyleTab into Sawfish.

   * New Features
        - Added `cabinet' application-switcher. `cabinet' is an
          advanced application switcher for Sawfish. For more
          information please visit:
          http://sawfish.wikia.com/wiki/Cabinet [Wang HongQin]

        - Added `tab-group' window-matcher. It allows window to be
          auto-tabbed together, if they got the same `tab-group'
          property [fuchur]

        - Added `single-window-mode'. Basically this feature is known
          from OS-X, though it's implemented in a more strict way. The
          `single-window-mode' window should get all of the users
          attention.

          This is ensured by auto-iconifying any up-popping window,
          which is not in the same group. To additionally not annoy the
          user this is done without animation. Avoided or ignored
          windows are lowered. When `single-window-mode' is quit, the
          opposite happens.

          Also `single-window-mode' hooks into unmap-notify-hook to
          check whether the user wants to stop `single-window-mode' (by
          either closing or iconifying the window). Besides each
          workspace can hold it's own `single-window-mode'.

        - Added `mouse-trap' feature. It provides a method for moving
          the mouse to any place of the screen by zooming with just a
          few keystrokes. The mouse is warped to the center of the
          screen screen and a outline is drawn dividing the screen in 4
          squares (like trapping the mouse on it).  [Fernando Carmano
          Varo] [Christopher Bratusek]

        - Added `shade-stack' feature. It provides an alternative to
          `iconify-window'.  Instead of iconifying a window or minizing
          it to a tray, the windows get shaded and sorted in a stack
          starting from the top-left corner (the number of columns can
          be changed). Combined with auto-unshade this offers -
          possibly - a better way of interacting with windows which
          aren't required at the moment. Original code by Luke Gorrie.
          [Christopher Bratusek]

        - Integrated settings for selecting wallpaper using an external
          command (eg: hsetroot).  Applying settings to GNOME2 or XFCE4
          is also supported. Original code by Lucas Pandolfo.
          [Christopher Bratusek]

        - Added `toggle-desktop' function. Toggles between
          `show-desktop' and `hide-desktop' - always logically correct.
          [Christopher Bratusek]

   * Miscellaneous Changes
        - Improved desktop-integration modules [Christopher Bratusek]
             x KDE integration: added entries for user-switch,
               hibernate, suspend, lock-screen, menu-editor.

             x XFCE integration: added entries for hibernate, suspend,
               lock-screen, menu-editor.

             x GNOME integration: added entry for lock-screen,
               menu-editor.

             x MATE integration: full integration module for MATE
               Desktop has been added.

             x Razor-Qt integration: full integration module for
               Razor-Qt has been added.

             x LXDE integration: basic integration module for LXDE has
               been added.

        - The fallback poweroff-menu now uses SSD
          `Sawfish-Session-Dialog', a companion to Sawfish, by default.
          Support for logout and lockdown has been added. [Christopher
          Bratusek]

        - Added a `filemanager' launcher. If set the Sawfish root-menu
          will show an `Open Home' entry. The KDE, GNOME, MATE, XFCE
          and LXDE integration modules will set the program
          accordingly, unless it's already user-defined.

1.8.1 "Sharp As A Knife"
========================

   * Updated or New dependencies
        - librep 0.91.0 -> 0.92.0

   * Bug Fixes
        - Fixed jump-or-exec failing when a window without WM_CLASS
          exists [Christopher Bratusek]

        - Fixed failing to uninstall Sawfish [Christopher Bratusek]

   * Miscellaneous Changes
        - EdgeActions changes [Christopher Bratusek]:
             + Load from `user.jl', rather than `wm.jl'

             + Add `edge-actions-enabled' variable in order to be able
               to completely disable EdgeActions (also via .sawfishrc)

             + Move all options into new `sawfish.wm.edge.conf' module
               (so they appear in the correct order now)

             + Updated documentation for EdgeActions

        - Fixed documentation for function `insert-workspace'
          [Christopher Bratusek]

        - Removed unused or unneeded 'default, 'viewort and 'advanced
          classes from command definitions [Christopher Bratusek]

        - Fixed two strings in mxflat theme [Christopher Bratusek]

        - Improved Requires in sawfish.pc [Christopher Bratusek]

        - Improved debian packaging-scripts [Ian Zimmermann,
          Christopher Bratusek]

        - Improved .desktop-files [Kim B. Heino]

        - Updated translations:
             + Spanish [gnome-es team]

             + German [gnome-de team]

             + Czech [gnome-cz team]

             + Malay [gnome-ms team]

             + Slovenian [gnome-sl team]

        - Updated OPTIONS file [Christopher Bratusek]

1.8.0 "思いやり (Omoiyari)"
===============================

   * Incompatible changes
        - Infinite-desktop and edge-flip needs updates.

          Open the configurator -> "Edge Actions". Changes will be
          easy. (Set 4 pull-downs, and you're done mostly.
          "Infinite-desktop" is renamed to "viewport-drag".) For more
          options, see "Edge Actions" below.

          If your `~/.sawfish/rc' opens related modules, delete those
          references.  These modules are renamed, and you don't have to
          manually load them any more.

        - Renamed functions [Teika kazura]
             * Popup of operations-menu on a window, renamed from
               `popup-window-menu' to `popup-window-ops-menu' (both the
               function and command). Old names are still available.

             * Renamed window rename, from `rename-window-func' to
               `rename-window'. (Old name is still avialable.) The
               function `rename-window-interactive' is deleted. Use
               `(call-command 'rename-window)' instead.

          Even if the old names still remain, it is highly recommended
          to update.

        - Syntax-change in `jump-or-exec' [Christopher Bratusek]

          The previous `class' and `onfocused' parameters are now keys,
          and pass them as "#:match-class t/nil" or "#:onfocused
          value". Note that `match-class' is _boolean_; To pass a
          class, set `#:match-class t' and pass the class name to the
          argument `regex'. (*note Application Invocation::)

        - Apps-menu options `apps-menu-show-all' is deleted. See below
          for more.

        - User option `focus-ignore-pointer-events' is deleted. [Teika
          kazura]
          In fact, it's for internal use, and should not have been a
          user option. Use your favorite focus mode instead.

        - Animation related modules are renamed [Teika kazura]

          All are collected under `sawfish/wm/animation'.
          `window-anim.jl' -> `setup.jl', `outline.jl' -> `main.jl',
          `util/window-outline.jl' -> `modes.jl'.


   * Build and Installation
        - Fixed installation for non-root users [Stefano Sabatini]

          Previously when installing to a private directory as an
          ordinary user, the installation failed, because some files
          were forced to be installed in /usr. This is fixed now.

        - Session files installation [Christopher Bratusek]

          Now you can choose which session files (default: all) to
          install with these configure-options:

             * `--with/out-kde4session': enable or disable the
               installation of session files for KDE4.

             * `--with/out-gnome2session': enable or disable the
               installation of session files for GNOME2.

             * `--with/out-xdmsession': enable or disable the
               installation of session files for XDM (or other
               display-managers).

        - Spec-File compatibility for RHEL 6 beta [Kim B. Heino]

        - Debian-Scripts (mostly) updated to the new specification
          [Christopher Bratusek]

   * Bug fixes
        - Poweroff-menu fix [Teika Kazura, Christopher Bratusek]

          In Sawfish-1.7.0, poweroff related items in the popup menu
          couldn't be invoked, if run without any desktop environment.
          Fixed it.

        - Correctly build SawfishPager [Christopher Bratusek]

          It is ensured that SawfishPager builds correctly, by
          improving `sawfish.pc' file.

        - At focus in/out, correctly reports the mode [Timo Korvola]

          When `focus-in-hook' / `focus-out-hook' are called, Sawfish
          wrongly reported a focus change during a grab as "ungrabbed".
          Now it's reported as `while-grabbed'.

        - Window cycle among groups [Teika Kazura]

          Some windows were skipped in window cycles among groups. This
          is fixed.

        - No more crash at loading wrong theme code [Teika Kazura]

          From Sawfish-1.7.0, Sawfish used to crash when a theme with
          wrong code is loaded, but it's fixed. It's not complete, and
          for example some mxflat options make Sawfish crash.

        - Cancellation of `call-command' [Teika kazura]

          It used to print an error message when you cancel an
          interactive call of `call-command' with the escape key, but
          it doesn't any more.

        - KDE *.desktop files location [Teika Kazura]

          Previously, user's change of the variable
          `kde-desktop-directories' was ignored, but this is fixed.

   * New Features
        - Edge Actions [Christopher Bratusek]

          "Edge Actions" is a centralized way to invoke an action when
          the mouse pointer hits a screen-edge. It includes former
          "edge-flip" and "infinite-desktop" (now renamed to
          "viewport-drag"), and a new feature "hot-spot".

          Edge-flip and viewport-drag can be configured from the
          configurator "Edge Actions" group. Options are easy to
          understand.

          "Hot-spot" lets you assign an action to each screen-edge and
          -corner. An action has to be a lisp function, and can be set
          in `~/.sawfish/rc', like this:

               (defvar-setq top-left-corner-function
                 (lambda () (display-message "hello world")))

          Hot-spot variable names consist of position (e.g. top-left or
          bottom) + "edge"/"corner" + "function".

          Other related changes are:
             * Viewport-drag and edge-flip (of course hot-spot, too)
               can be chosen per direction, top-bottom and left-right.
               It's also possible to enable / disable dragging of a
               window for each of them.

             * It means a window can be dragged during viewport-drag,
               which was not possible.

             * There're two delay timers now, for edge-flip and
               hot-spot.

          Internal changes:
             * Codes are found in `sawfish.wm.edge.*'. You don't have
               to import them for ordinary use.

             * Low-level functions now have API in
               `sawfish.wm.edge.util' written in Lisp.

        - Replace running window manager with Sawfish [Timo Korvola]
          New command line option `--replace' is added. With it, Sawfish
          will replace the currently running window manager. It's done
          by "manager selection" defined in ICCCM secs 2.8 and 4.3.

        - Toggle-Or-Exec wrapper added to Jump-Or-Exec [Christopher
          Bratusek]

          `toggle-or-exec' is similar to jump-or-exec, but turns windows
          into quake-like drop-down/pop-up-windows. That means, when
          you have the toggle-window focused and press its keybinding
          again, it will be hidden.

          See the file `jump-or-exec.jl' for more detailed examples.

        - `iconify-on-leave' window-matcher [Christopher Bratusek]

          This new window-matcher is a companion to `toggle-or-exec'.
          When a window matched loses the focus, it gets hidden. Use
          this together with `toggle-or-exec' for greater toggle-window
          experience.

        - Error printing during initialization [Teika Kazura]

          When an error occurs during initialization, and if you don't
          customize the option `error-handler', then the error is
          reported to both the screen and standard-error. After Sawfish
          starts, it's printed to the standard-error only.

        - New function `report-commands' [Teika kazura]
          It returns the list of all commands. (*note Operations on
          Commands::).

   * Misc Changes
        - Tabs and themes [fuchur]

          A new, tab-capable, highly configurable theme "StyleTab" is
          added. It allows the tab-bar to appear in top, left, right,
          and bottom. Use a new window rule `title-position' for it.
          "StyleTab" is now the default theme.

          Many improvements in tab system are done. For example,
          stickiness change on a window applies to all other windows in
          the same tab group, though maybe not yet complete. (Please
          tell us things you noticed.)

          When you used a tab capable theme (Elberg-Tabbed or
          Get-S-Tabbed), you had to manually adjust positions by pixel,
          but it's not necessary any more.

          When a lot of windows are open, they should now be more
          responsive.

        - Application menu is fully customizable [Matthew Love]

          With the new option `apps-menu-filter', you can fully
          customize the application menu. For the full description, see
          *Note Applications Menu::.

          It replaces former options like `apps-menu-show-all' or
          `apps-menu-ignore-no-display'.

        - Per-window animation mode [Teika kazura]

          From the configurator "Window Rules" you can set the animation
          mode when iconified. (*note Animating Windows::)

        - Behavior modification at focus-in [Harald van Dijk]

          In order to support "gnome2-globalmenu", the reaction policy
          to `XFocusInEvent' is slightly modified. Sawfish doesn't emit
          `_NET_ACTIVE_WINDOW' if it's done by (un)grabbing the pointer.

        - Revised `get-window-by-*' functions [Christopher Bratusek]

          For the details, see *Note Window Attributes::, and *Note
          Getting Windows::.
             * Added functions `window-role' and `get-window-by-role'
               (return NET_WM_ROLE)

             * Deleted `get-window-by-name-re' and
               `get-window-by-class-re'. Use instead
               `get-window-by-name' or `get-window-by-class' with the
               new boolean option `#:regex'. (The old name is still
               supported.)

             * added `#:icon' switch to `get-window-by-name' to get a
               window via NET_WM_ICON_NAME (can be used with #:regex
               switch, too)

             * Commands to resize a window [Christopher Bratusek, Teika
               kazura]

               Four new commands to resize a window where you can
               specify the size by pixels are there. You're either
               prompted to type in the new size, or you can preset it
               in the configurator.

               For the new command `resize-window-to-preset-size',
               first you specify a size in the configurator. The
               focused window will be resized to that preset size on
               invocation. There're also commands to change only one of
               the height and width.

               `resize-window-prompt' prompts you to enter the new size.

        - Window-operation menu improvements [Christopher Bratusek]

             + The window-operation menu now honours window rules
               better.  For example, if you have a window with
               `fixed-size' flag, the window-operations menu-entry
               `Resize' becomes unclickable.

             + The entries for moving and copying windows to another
               workspace are now bundled in the new `Workspace'
               sub-menu.

        - Translation related changes [Teika Kazura]
             + Added translator instructions in `po/README' file.

             + Before you run `po/make-pot' to generate `sawfish.pot',
               you now have to do `make all' at the top directory.
               Previously it was possible to produce wrong
               `sawfish.pot'.

             + Translation updates: Spanish [gnome-es team], German
               [gnome-de team], Simplified-Chinese [gnome-zh_CN team,
               Wang Lei], Norwegian/bokmål [gnome-no team] French
               [gnome-fr team], Czech [gnome-cs team] and Slovenian
               [gnome-sl team].

             + Updated `sawfish.pot' and subsequently all `*.po'.
               Banished some bogus items in `sawfish.pot'.
               (Developer's personal extensions had sneaked in.)

        - Emacs sawfish-mode now indents `let-fluids' and let-loop
          correctly, provided by `sawfish.el' [Teika Kazura]

        - Turn `focus-ignore-pointer-events' into an internal variable
          (has wrongly been a user-option before) [Teika Kazura]

        - Documentations [Teika kazura]
             * Section on popup menus is rewritten. (*note Popup
               Menus::)

             * Functions which return window geometry are now clarified
               in the point of frames.

             * Correction: The function `commandp' can only take
               symbols as its argument. (*note Operations on Commands::)

        - SawfishConfig "Window rules" section changes [Teika Kazura]

          Category `Placement' is renamed to `Geometry'.  The item
          `shade-hover' is moved to `appearance' category, and
          `fixed-size' to `geometry'.

        - Deletion of outdated features in command definition [Teika
          Kazura]

          Function `define-command-args' is deleted. In `define-command'
          function, the keyword argument `doc-key' is dropped.

1.7.0 "Frozen Flame"
====================

   * Update dependencies
        - librep 0.90.5 -> 0.91.0

        - rep-gtk 0.90.2 -> 0.90.4

   * Notes
        - When you report a crash, please add the backtrace, by
          invoking Sawfish with the command line option "--interp".

          Read the file `CONTRIBUTING' for more infos.

        - Prompt API change [Jeremy Hankins]

          If you have code which utilizes prompt, it is affected. When
          you call the function `prompt', directly pass helper functions
          as function arguments. They used to be set as global
          variables.

          This change is straightforward, so it's not difficult to
          update your code. See `sawfish.wm.util.prompt' for details.

        - Mouse-button support state

          Sawfish claimed to support mouse-buttons 1 - 9, but it is
          known that drag of buttons 6 - 8 may not work. The button 9
          doesn't work at all, so we withdraw it.

        - Functions `maybe-raise-window' and `maybe-lower-window' are
          now obsolete. [Teika Kazura]

          Replace them with `raise-window*' and `lower-window*' defined
          in `sawfish.wm.util.stacking'. Only difference is that the
          obsolete version supports a feature of Nautilus (GNOME file
          manager) which was dropped long ago.

   * Build and Installation
        - Configure-option `--with-nine-mousebuttons' is dropped.
          See the item "Keyboard layout switching support" below.

   * Bug Fixes
        - Maximized windows wrongly covering other windows on startup
          [Jeremy Hankins]

          Sometimes maximized windows would overlap "avoided" windows
          (e.g., the gnome-panel, or a trayer) on startup. Sawfish now
          defers maximization until the initialization is complete,
          preventing this problem.

        - Viewport initialization bugfix [Jeremy Hankins]

          Under certain circumstances viewport slots were wrongly
          shifted when Sawfish was restarted, ending up with some
          windows outside of the virtual desktop. This has been fixed.

        - Keyboard-layout switching support [Teika Kazura]

          Previously, when you switched the keyboard-layout, or more
          correctly the keyboard-"group" (which is mainly for
          multilinguals) keyboard- and mouse-bindings got messed-up.

          Now, this can be prevented by invoking Sawfish with the new
          commandline-option `--5-buttons'. It is assumed that modifiers
          are common among keyboard groups.

          More precisely, what's supported is switching by
          `ISO_Next_Group' or similar, bound to a key (for example ctrl
          + alt). It appears as "option" in X keyboard configuration,
          like "grp:ctrl_alt_toggle".  If you use some utility to
          switch the layout and it confuses Sawfish keybindings, please
          restart Sawfish.

          With that commandline-option, you won't be able to bind
          Sawfish commands to mouse buttons 6 - 8. This may be fixed in
          future.

        - Atom handling fix on 32-bit architecture (Java fix). [Teika
          Kazura]

          Function `x-atom-name' now accepts all 32 bits. Previously
          only 30 bits were treated if the architecture was 32-bit.
          64-bit systems hadn't had this bug.

          It used to cause "Bad argument" error, most notably on Java
          applications. (In theory, an atom is set by X server, not a
          client.  But Java applications seem to be affected often by
          this bug.)

        - Applications menu bugfix [Matthew Love]

          Correct alphabetic ordering of menu-entries is done.
          Previously they were sorted [A-Z][a-z] (first all upper- then
          all loser-case entries).

          Also the function for detecting the language has been
          improved. It now better follows the freedesktop.org
          specification.

        - Edge-flip and infinite-desktop now work after
          screen-resolution change. [Christopher Bratusek]

        - Sawfish now starts up correctly when receiving a session-id or
          session-prefix from GNOME-Session [Clinton Ebadi, Christopher
          Bratusek]

        - Draft animator bugfix. [Christopher Bratusek]

          The "draft" animator had two issues: on one hand the drawn
          numbers were always black (therefore possibly invisible), on
          the other hand those numbers weren't erased from the screen.
          Both have been fixed. Internally, it's done by the new
          `x-draw-text' function described below.

        - Resurrection of two variables [Teika Kazura]

          User options `workspace-boundary-mode' and
          `workspace-send-boundary-mode' couldn't be set from the
          configurator, but this is fixed.

        - Command `xterm' fix [Teika kazura]
          It couldn't be invoked as a key binging if the optional
          "command" argument was unset by the configurator, i.e. an
          empty string.

   * New Features
        - Desktop-environment integration [Christopher Bratusek]

          Support for XFCE integration was added. It's just like
          GNOME/KDE4 integration: it sets `xterm-program' and
          `browser-program' (unless already set by user), and adds XFCE
          logout/help/customization menu-entries to the Sawfish
          root-menu.

          Improvements: All menu-entries for GNOME/KDE4 do now have
          accelerators. Entries for invoking `gnome-control-center' or
          KDE `systemsettings' have been added. The KDE4 detection has
          been improved. See also the item "Applications menu
          improvements" below.

          A new variable `desktop-environment' tells which desktop
          environment is running (*note External Applications::).

        - Applications menu improvements [Matthew Love]

          Applications menu now looks more like that of GNOME / KDE /
          XFCE if one is running. (further improvements are planned)

          The user option `apps-menu-ignore-no-display' is now gone and
          replaced by `apps-menu-show-all'. [Note: After Sawfish-1.8.0,
          this option is superseded by `apps-menu-filter'.]

          If `apps-menu-show-all' is `nil' (default), the menu looks
          much like that of GNOME / KDE / Xfce, by hiding some
          applications. If it's `t', then all installed applications are
          shown. An intermediate option, the symbol `maybe' is
          possible, as described below.

          Technically, fields `NotShowIn' and `OnlyShowIn' in files
          `/usr/share/applications/*.desktop' tell under which desktop
          environment that application wants to be shown. If
          `apps-menu-show-all' is `nil' or `maybe', they are respected.

          Items with field `Hidden' or `NoDisplay' are usually not to
          be shown. They are respected if `apps-menu-show-all' is `nil'.

          The KDE specific directory is now searched, too while menu
          generation.

        - New window rules [Christopher Bratusek]

             * `fixed-size': this disables resizing, or more precisely,
               functions `resize-window-interactively',
               `halve-window-size' and `double-window-size'.
               (Maximization is still possible.  Use `never-maximize'
               to prevent maximization.)

             * `never-delete': this disables closing. Only interactive
               closing is prevented, and you can delete windows with
               `never-delete' property from a lisp program.

        - Update of emacs major mode `sawfish.el' [Teika kazura]

          It is now distributed with Sawfish window manager.
          Improvements are:

             * Evaluation used to choke when it encountered `#f' or
               `#t'. This is fixed.

             * Highlighting of the keywords like `define' works again.

             * `describe-function' have been broken, but it works again.

             * In `describe-variable', the value of the variable is
               pretty-printed.

             * `sawfish-load-symbols' can be called interactively to
               update the cached symbols.

             * Better introductory part.

        - New frame-parts `border-width' and `border-color' [Alexey I.
          Froloff]

          A "border" of a window surrounds the window and all other
          frame parts. (*note Frame Part Definition::)

        - New commandline-option `--5-buttons'
          See the item "Keyboard-layout switching support" above.

        - `x-draw-text' function [Christopher Bratusek]

          It is similar to `x-draw-string'. Generally, if you use a
          `display-message' like message, call `x-draw-string'.  If you
          want to draw on the screen directly use `x-draw-text' (*note
          X Drawing::.)

   * Translation updates

     Updated translations since 1.6.0 are Danish (da), British English
     (en_GB), German (de), Spanish (es), Slovenian (sl), and Swedish
     (sv).

     All translation files are now in UTF-8. Changed languages are
     Galician (gl), Italian (it), Romanian (ro), and Turkish (tr). The
     rest were already UTF-8. [Teika Kazura]

   * Miscellaneous Changes
        - More error and backtrace printing [Teika Kazura]

          Due to librep >= 0.91.0, the backtrace is printed by default
          when an error was signaled. It is printed for sawfish-client,
          too, but it's sent to Sawfish's standard error, not to
          sawfish-client's, sorry.

          Phrase "Sawfish error:" is prepended to error messages which
          are printed to standard error.

          Sawfish-pager's errors are printed to Sawfish's output. More
          precisely, when you connected to Sawfish as a server
          asynchronously, then the error was not printed. But now it is
          printed, to Sawfish's output. (In contrast, a client which
          connects synchronously receives the error message itself.)

        - Pointer warping in window cycling [Teika Kazura]

          In window cycling, some unnecessary pointer warping is
          avoided.  Previously, the necessity of a warp was judged by
          the geometry before the raise was done. Now the updated one
          is used.

        - Configurator changes (user visible parts) [Christopher
          Bratusek]

          Icon is now provided. (If it doesn't show up, first run
          `gtk-update-icon-cache'.)

          If you run the configurator but the Sawfish window manager is
          not running, then an alert window is displayed before
          abortion. [Teika Kazura, Christopher Bratusek]

          Two obsolete features are deleted. One is the command line
          option `--socket-id', which was for "capplets", part of very
          early GNOME 2.x. The other is the command line option
          `--single-level' which has been broken.

        - Doc improvements

          FAQ items, on how to hide the mouse-pointer, and on
          application execution.
          Manuals (1) describe all options. KEYBINDINGS file was revised

          Newly described functions are: `grab-keymap' and
          `ungrab-keymap' (*note Keymaps::), `x-raise-window' and
          `x-lower-window' (*note Raising and Lowering Windows::),
          `frame-state-mutex' (*note Frame Functions::).

        - Root-Menu improvements [Christopher Bratusek]

          All menu-entries do now have accelerators. Labels for help
          entries have been improved.

        - Configurator internals [Christopher Bratusek]

          The module `widget-test' is deleted. It provided testing
          function of widgets in modules `sawfish.gtk.*'. But allegedly
          it is broken and crashed Sawfish.

          `widget-dialog.jl' was merged into `simple-dialog.jl'

          Previously the functions `remove-newlines' and
          `beautify-symbol-name' were defined in several modules, with
          the same contents. Now they are defined (only once) in a new
          module `sawfish.cfg.utils'.

          The `stock-button' function was defined in Sawfish, but now
          it's replaced by directly using `gtk-button-new-from-stock'.
          Same for the `about-dialog' function, replaced (in version
          1.6.0) by `gtk-about-dialog'.

          `/usr/bin/sawfish-config' is now minimal, moving most of it's
          content to `sawfish.cfg.shell' [Teika Kazura]

        - Module `3d-hack' is deleted. [Christopher Bratusek]

          The `3d-hack' module was an animation demo, not a feature. It
          provided two functions similar to `glxgears', rendered in 2d.
          If you want it, it can be downloaded from the Sawfish Wiki,
          from the page "3d-hack".


1.6.3 "Hava Nagila"
===================

   * Bugfixes
        - In tabbed-windows the left/right end is no longer outside the
          window, if that is too small [Fuchur]

        - Unsupported option `ignore-window-input-hint' is deleted
          which has been invalid for long. [Teika kazura]

        - Honor the user option `maximize-raises' in
          `maximize-window-fullscreen' and
          `maximize-window-fullxinerama', too, not just in
          maximize-window [Nolan Leake]

        - More robustness in applications menu [Teika Kazura, Matthew
          Love]

          Before it broke for 'R' (statistics software), and whitespace
          handling didn't follow the specification.

          Some *.desktop files are not ignored any more either, i.e.,
          leading empty lines and comments are allowed.

        - Allow compilation with -DDEBUG flag passed [Alexey I. Froloff]

   * New Features
        - XRandR events (eg resolution changes) call the new hook
          `randr-changed-notify-hook' [Daniel M. German]
          See *Note RandR and Xinerama::.

        - Tabbed windowing system improvements [Fuchur]
             + Support for transient tab-frames

             + New frame classes:
                  x tab-s (side tab)

                  x tab-ls (side tab, left/bottom end)

                  x tab-rs (side tab, right/top end)

             + Tabgroups now support a set of new properties and
               actions: `type', `set-frame-style', `fixed-position',
               `iconify'. In addition, new tabs gain those properties
               from their parent window.

        - New command `display-window-position' [Teika kazura]

          User chooses a window by cursor and click, and it prints its
          position and size in a popup. Also available as a function,
          defined in `sawfish.wm.util.display-wininfo'.

        - New function `window-pid' [Teika kazura]

          It returns the process ID of a window. (*note Window
          Attributes::

        - Window instance name is now accessible [Teika kazura]

          Technically, the window class consists of "instance" and
          "class", but only the latter was returned previously by the
          function `window-class'. Now with the new optional argument,
          the instance is returned too. (*note Window Attributes::)

        - Customizable lisp directory [Teika kazura]

          User can add lisp directories to be read with the
          environmental variable `SAWFISH_USER_LISP_DIR'. Its value is
          directories separated by colon, like `PATH', and prepended to
          `load-path'. If not set, `~/.sawfish/lisp' is assumed.  For
          example, if you define a module `sawfish.wm.super-hack', then
          it can be read from
          `~/.sawfish/lisp/sawfish/wm/super-hack.jl'.

          User can override system lisp files, too. For example, if
          there is `~/.sawfish/lisp/sawfish/wm/windows.jl', then it
          defines `sawfish.wm.windows', instead of the installed one.
          (But this can easily break your Sawfish startup.) In fact, it
          was possible for some lisp files, but now it's guaranteed for
          all files.

   * Other Changes
        - Info improvements [Teika kazura]
             + "Windows" chapter is partly revised. Function
               `display-window' is documented. Difference between
               `window-wants-input-p' and `window-really-wants-input-p'
               is described. Short description on the root window.

             + In past few versions we made more changes which were not
               described in the news, including clarification in
               viewport, workspace and event, and window matching lisp
               functions.

             + Added a faq item on multi-head and workspace.

             + Edition number and the date of last change are dropped
               from the info.  We now edit the info often, so they are
               not so much meaningful.

        - Pressing the lock-button does the state-change of the window
          accordingly. [Fuchur]
          No theme shipped with Sawfish does have the lock-button yet,
          though.

        - Make xinerama an optional dependency [original patch from
          Gentoo]

1.6.2 "Mighty Disco King"
=========================

   * The 1.6.2 release has some improvements.

   * Bugfixes
        - Application menu is more robust now.  [Matthew Love,
          Christopher Bratusek]

          Application menu, introduced in 1.6.0, made Sawfish crash if
          `*.desktop' file had a malformed key value (say ; as first
          character or # somewhere inside), or it was unreadable. It is
          fixed.

        - Minor fix of window placement by direction [Teika kazura]

          When the window placement mode is for example `east' and the
          window is wider than the screen, then the window was put
          wrongly. It is fixed.

   * New features
        - New command `maximize-discard' [Teika kazura]

          The command `maximize-discard' stops a maximized window to be
          treated as maximized any more, so that you can move and
          resize the window.

          The functinon `maximize-discard' has existed, and now it's
          exported.

        - New command `jump-or-exec' [Christopher Bratusek]

          The user uploaded module "jump-or-exec" has been merged. It
          provides `jump-or-exec', a command which may be used to focus
          a window, or if it does not exist, start the application.

          Unlike the original version this one also supports matching a
          window by its class (returned by `window-class' function),
          which makes it more flexible for applications like music
          player or browsers, which tend to change their WM_NAME
          relatively often.

          For usage, see `lisp/sawfish/wm/commands/jump-or-exec.jl'
          file.

   * Misc
        - Improved ebuild and specfile [Christopher Bratusek] [Kim B.
          Heino]

        - Updated documentation [Christopher Bratusek] [Teika Kazura]

        - Removed `frame-style-editable-p' and all other remaining
          sawfish-themer fragments, as it's dead. [Christopher Bratusek]

1.6.1 "Astral"
==============

   * The 1.6.1 release brings several bugfixes and improvements

   * Build and Installation
        - New/Updated requirements:
             + librep 0.90.4 -> 0.90.5

             + rep-gtk 0.90.0 -> 0.90.2

        - The configure option `--without-nine-mouse-buttons' is not
          allowed to have 4 hyphens, therefore it's renamed to
          `--without-nine-mousebuttons'.  [Christopher Bratusek]

        - Reworked configures help-message for better readability.
          [Kim B. Heino]

        - Configure now uses `kde4-config --install data' rather than
          `kde4-config --path data', so no sed-kludge is needed anymore.

          Make $datadir/kde4/apps/ the fallback path, if KDE4 is not
          installed.  [Kim B. Heino]

        - Majorly improved debian and rpm packaging scripts.
          [Christopher Bratusek] [Kim B. Heino]

        - The spec has been reworked to detect kde4/librep directories
          while runtime, instead of hardcoding those paths from
          configure, which makes it more portable.  [Kim B. Heino]

        - Our own implementation of dlmalloc is disabled since 2002, as
          it breaks sawfish on several architectures. From this version
          on, we don't ship it anymore.  [Kim B. Heino]

        - Export the imageloader beeing used by sawfish in the .pc file.
          [Christopher Bratusek]

        - Don't remove the .pot file upon `make distclean'.
          [Christopher Bratusek]

        - Install Sawfishs header files to $includedir/sawfish/.
          [Christopher Bratusek]

        - Autotools improvements (Makefile, autogen.sh & Co.)
          [Christopher Bratusek]

   * Bugfixes
        - Fixed a bug where the gnome-panels pager gets confused about
          the current viewport when displaying all workspaces.  [Jeremy
          Hankins]

        - Fixed minor bugs in viewport.jl.  [Jeremy Hankins]

   * Doc
        - Fixed a small doc misstake (refered to window-set instead of
          window-put).  [Christopher Bratusek]

        - Fixed the docstrings of shrink and yank.  [Timo Korvola]

   * Misc
        - Last 3 instances of "sawmill" replaced by "sawfish".  [Kim B.
          Heino]

1.6.0 "Sound Of Thunder"
========================

   * The 1.6.0 release has new features and bugfixes

   * Build and installation changes
        - New/Updated requirements:
             + librep 0.90.0 -> 0.90.4

             + rep-gtk 0.18.4 -> 0.90.0

        - Removed requirements: LibAudioFile and ESounD

        - Mouse buttons 6 - 9 support is now optional

          (This item is no longer valid from 1.7.0.)  Support for 6 - 9
          mouse buttons is now optional. X.Org/XFree86 headers only
          define up to 5 buttons, and we use a working but somewhat
          hackish workaround for getting buttons 6 - 9 which is
          suspected to cause some problems with modifiers. Support for
          them is enabled by default. If you want to disable it, add
          the following flag to configure:

          `--without-nine-mousebuttons'

          If you drop it, then you can't use mouse button 8 to, for
          example, drag windows.

        - Installation directory change

          Directory `libexec' is not used anymore for library files
          installation. Instead, they go into `lib' by default.

   * Incompatible user visible changes:
        - Configurator's binary, `sawfish-ui', is renamed to
          `sawfish-config' [Christopher Bratusek]

          Its window class is changed to `sawfish-configurator' /
          `Sawfish-Configurator', too. The lisp module is renamed from
          `sawfish.ui' to `sawfish.cfg'.

        - Infinite Desktop boundary behavior and option

          In `infinite-desktop', the option to specify the boundary
          behavior has changed. If `viewport-boundary-mode' is
          `dynamic', then you can go as far as you like. Otherwise, it
          stops at the workspace boundary of which size is specified by
          `viewport-dimensions'. Now the latter is the default. See also
          "dynamic viewport" described below.

          The previous variable,
          `infinite-desktop.stop-at-workspace-borders', which is used
          for this purpose, no longer exists.

        - User config file changes

          In Sawfish < 1.6, `sawfish.wm.defaults' is loaded by default,
          only if the `~/.sawfishrc' lacks. Now, it is always read, so
          you don't have to `require' it. It sets up GNOME or KDE
          support if found running, and does load the error-handling
          module.

          Since Sawfish 1.5 `~/.sawmillrc' is no longer a valid
          configuration- file. From this version on, Sawfish will
          rename `~/.sawmillrc' to `~/.sawfishrc', if the former does
          exist on your system, but the latter doesn't.

        - In configurator, the "Matched Windows" group has been renamed
          to "Window Rules"

        - Sound support has changed. [Christopher Bratusek]

          Sawfish used to rely on ESounD and LibAudioFile to play
          sound, but we dropped that. If you want sound, set the
          variable `play-sample-program' to the path of the program
          capable of playing *.wav file. You can set the variable from
          the Configurator, too. By default `paplay' is beeing used.

          You can't set any arguments to pass from this variable. If
          you want to give arguments or redirect output, write a wrapper
          program. (*note FAQ::, "Sound support" section.)

        - GNOME integration updates [Christopher Bratusek]

          GNOME support is trimmed down. All we offer now is as follows:

          If GNOME runs, in `session' submenu under Sawfish root menu,
          logout and shutdown from GNOME are added. Don't remove `quit'
          and `restart' from menu now. GNOME help is available in menu.

          Unless set by user, gnome-terminal.wrapper and
          gnome-www-browser are used for user options `xterm-program'
          and `browser-program'.

          Most of dropped GNOME integrationcode is ancient, mainly for
          1.x and early 2.x. Files `lisp/sawfish/wm/commands/gnome.jl'
          and `lisp/sawfish/wm/state/gnome.jl' are deleted.

          GNOME-Detection has been updated for recent versions. [Alexey
          I. Froloff]

        - xterm and browser changes

          Module `sawfish.wm.commands.xterm' is renamed to
          `sawfish.wm.commands.launcher'. Option `xterm-args' is
          dropped. If you use it, simply append its value to
          `xterm-program'.

          Customization-group is changed from `misc' to `External
          Applications'.

          The functinon `display-url' is renamed to `browser', now
          defined in the module cited above. Variable
          `display-url-command' is renamed to `browser-program'.

        - Sawfish pager

          If you've been using Sawfish-pager, then you have to
          recompile it, due to library files location change.

        - Deletion of `user-level' property

          (This affects almost none.) There has been a defcustom
          property `user-level'. It has been deprecated for years, and
          it's now deleted.

   * Bugs fixed:
        - Prevents crashes for quick window destructions, especially
          under high load

          There have been crashes if a window is destroyed soon after
          its creation.  It happens in `add_window' function, and the
          cause is guessed to be garbage collection following window
          destruction before the object access.

          Now most parts of `add_window' are protected from garbage
          collection with `rep_PUSHGC' / `rep_POPGC'. It also prevents
          `add_window_hook' from being called with uninitialised
          argument.  [Timo Korvola, Janek Kozicki]

        - Random window disapperance prevention

          There're reports of sudden, random window disapperance, under
          Xinerama and some other drivers. It is partly prevented, but
          not completely, as this may also be caused by other libraries
          or buggy video drivers.

          Now in error_handler() in src/display.c, when a window sends
          request_code 12 (X_ConfigureWindow), don't auto-assume it to
          be unmapped. [Janek Kozicki]

        - Build and Installation:
             + Library check: Fix in `SMlib' and `libICE' check on
               x11r7 [Christopher Bratusek]

             + `.desktop' files fixes: typos fixed and unneeded entries
               removal [Christopher Bratusek]

             + In spec file, repexecdir definition is fixed
               [Christopher Bratusek]

             + In `po/Makefile.in', a wrong call of make-pot is fixed
               [Christopher Bratusek]

             + Always build the FAQ upon make [Christopher Bratusek]

             + Expand REP_ENVIRON in scripts/Makefile.in [Luis Rodrigo
               Gallardo Cruz]

             + Add `--tag=CC' to libtool where necessary. It unbrakes
               compilation on some arches [Gentoo Linux]

             + Use $prefix/lib instead of $prefix/libexecdir, to
               satisfy the FHS [Christopher Bratusek]

        - In configurator,

          Strings are now fully translatable [Alexey I. Froloff]

          SpinButton listens to manual value change. (It's now
          connected to the correct signal.)  [Christoper Bratusek]

          Position parameters can be negative [Christopher Bratusek,
          Teika Kazura]

        - Fixed Focus issues with KDE4 Menu/Run-Dialog [Timo Korvola]

        - Fix cursor-warping in conjuction with Infinite-Desktop
          [Jeremy Hankins]

        - Fixed group of the stagger options [Christopher Bratusek]

        - Fixed a call of `select-workspace-from-first' [Michal Maruška]

        - In `Simple' theme, windows are now resizable from the right
          border [Christopher Bratusek]

        - Missing exports are now supplied, for shrink-yank functions
          and `send-to-workspace'. [Christopher Bratusek]

        - Commands `maximize-window-fullscreen' and
          `maximize-window-fullxinerame' work. [Teika kazura]

        - Variable `this-command' is `nil' outside of command call.

        - Customization option `uniconify-to-current-viewport' has been
          undeprecated. [Teika kazura]

   * New features:
        - New application menu [Matthew Love, Timo Korvola]

          Sawfish now generates application menu automatically, by
          reading `/usr/share/applications/*.desktop' files. If you
          manually set `apps-menu', then it won't be. If you like to
          have both your own applications menu and auto the generated
          one, then refer back to `user-apps-menu' rather than
          `apps-menu'. In addition you can use the variable
          `desktop-directory' to specify a different directory to look
          for *.desktop files, or a set of directories, if desired.

          Root, and Window-Operations menus are revamped, too.
          [Christopher Bratusek]

        - Added options to change the font color of window title,
          independent of the theme in use [Matthew Love, Christopher
          Bratusek, Timo Korvola]

          Internally, a new function `remove-frame-part-value' which
          allows to change/remove values from frame-parts is used.
          [Timo Korvola]

        - Sawfish does now support theme-tarballs compressed with XZ
          (aka LZMA2) and LZMA [Christopher Bratusek]

        - Xinerama support for Grow/Pack [Nolan Leake]

          Make grow/pack Xinerama aware. The support still remains
          basic, as shrink/yank still lacks it.

        - Window rules can be set by lisp

          Window rules (former "matched windows") can easily be set from
          configurator, but it can now be set by lisp, too, with
          `add-window-matcher' function. For the details, *Note Window
          Rules by Matching::. An example usage is like this:

               (add-window-matcher '((WM_NAME . "^root$")
                                     (WM_CLASS . "^XTerm/xterm$"))
                                   '((ignore-program-position . t)
                                     (maximize . vertical)))

          In fact, this function has already existed, but now it can
          now specify both windowname and -class, also the grammar has
          changed. The old syntax is still allowed, but deprecated.

        - Keymap translation [Scott Scriven]

          Sawfish can "translate" keymaps for each window. Suppose you
          have the following lines in your `~/.sawfish/rc':

               (add-window-matcher
                       '((WM_NAME . "^Terminal$"))
                       '(keymap-trans . (("C-n" "C-S-t")
                                         ("C-w" "C-S-w"))))

          Then, when you press `C-n', any windows with name "Terminal"
          receive `C-S-t', and so on.

          This is part of window rules, but it cannot be exposed in the
          configurator yet.

        - New window rules
             + Maximizations `fullscreen' and `full-xinerama' are
               available now (*note Maximizing Without Borders::)
               [Jeremy Hankins]

             + Window position can also be specified by the direction,
               like north or east, instead of the coordinates. [Jeremy
               Hankins]

             + New window rules `new-workspace' and `new-viewport',
               which place a window on the first empty Workspace or
               Viewport (if there's none, one will be generated), have
               been introduced [Jeremy Hankins]

               If `new-workspace' is chosen, then the window is put in
               an empty workspace, or a new workspace is created if
               none. A workspace with sticky windows only are
               considered empty. `new-viewport' is the same but an
               empty viewport is chosen. If none is, the workspace is
               enlarged, and the window is put in a new viewport.

             + `window-name' can change the window's name. [Christopher
               Bratusek]

        - New commands [Christopher Bratusek]

          5 new move-cursor commands, 4 diagonals and 1 to center.
          (*note Pointer Functions::

          Three window manipulation commands, `double-window-size',
          `halve-window-size', and `move-window-center'.  The former
          two are based on the `resize-by-factor' metafunction.

          `browser' invokes a browser instance.

        - New functions `rename-window' changes the window name. [from
          "mmc" fork, Christopher Bratusek]

          In practice, it works, but technically speaking, the window
          name is not supposed to be changed in ICCCM, by the
          Window-Manager.

          `viewport-windows' returns windows in a viewport. [Jeremy
          Hankins]

          `get-window-by-class' and `get-window-by-class-re'
          [Christopher Bratusek]

        - Dynamic Viewport-Boundary-Mode [Jeremy Hankins]

          When you set `viewport-boundary-mode' to `dynamic', then the
          workspace grows and shrinks dynamically so that it contains
          all windows and the current viewport. For the details, *Note
          Dynamic Viewport::.

        - KDE4 integration module [Christopher Bratusek]

          KDE4 is automatically detected. KDE help, and KDE logout,
          shutdown, and reboot are provided in the menu. In KDE4 WM
          Selector, Sawfish is added.

          Unless set by user, konsole and konqueror are used for user
          options `xterm-program' and `browser-program'.

        - Poweroff from menu

          Added poweroff commands in menu for non KDE/GNOME users.
          There are reboot, halt, suspend and hibernate. The used shell
          commands can be set from configurator, under "Misc" ->
          "External Applications". If you don't want it, set
          `want-poweroff-menu' to nil.

          User needs the appropriate privilege. For a way to do so, see
          *Note FAQ::, "Shutdown privilege" section.

          Reboot and halt call `before-exit-hook' and do
          `delete-window' to each window before actually rebooting or
          halting, to ensure everything is fine on the next startup.

        - New Frame Classes [Christopher Bratusek]
          A "frame class" defines frame component and are used by
          themers to add buttons or frames to their theme in charge.
          There are no user visible changes.

             + `sticky-button', a button to toggle window `sticky' or
               `viewport-sticky'

             + `lock-button', a button to toggle window position `fixed'

             + `rename-button', a button to rename the window-title and
               window-icon properties (not ICCCM compliant)

             + `move-resize-button', a button to perform various move
               and resize actions on a window

             + `raise-lower-button', a button to perform various
               raising and lowering actions on a window

   * Widget Transistion [Christopher Bratusek]
        - Custom make-url-widget replaced by GtkLinkButton

        - Custom about-dialog replaced by GtkAboutDialog

        - GtkButton + GtkPreview + GtkColorSelection trio replaced by
          single GtkColorButton

   * Other Changes:
        - Startup window placement improvement [Jeremy Hankins]

          (Later this item was found wrong. The true fix was done in
          1.7.0.)  At Sawfish startup including restart, maximized
          windows and position specified windows used to mess up
          viewport, appearing in wrong viewports. It's fixed now.

        - Renamed `after-add-window' to `maxmize-after-add-window'
          This function is only used in a hook [Teika Kazura]

        - Don't let `cycle-class' and `cycle-class-backwards' ignore
          WINDOW-ORDER [Daniel M. German]

        - Docks/panels are unframed, and window type is set to `dock'
          by default [Timo Korvola]

        - You can exit from sawfish-client with `,quit' (also `C-d'),
          unlike `C-c' it won't kill the WM [Teika Kazura, Timo Korvola]

        - Number widget (GtkSpinButton) can take optional initial value
          [Teika Kazura]

        - Changing `raise-tabs-on-hover' takes effect immediately now
          [Christopher Bratusek]

        - Inactive windows in Crux theme do now have black text for
          better readability [Christopher Bratusek]

        - With new option `customize-redirect', configurator's output
          can be redirected. [Teika Kazura]

        - Grow/Pack and Shrink/Yank options are in the same group now
          [Christopher Bratusek]

          These commands are now available from window operation menu,
          too.

        - When moving a window the cursor shape is now `hand2', when
          resizing `crosshair' [Christopher Bratusek]

        - In the theme document in the configurator, the cursor is
          invisible and the wrap mode is set to word-char [Christopher
          Bratusek]

        - Build, installation and source
             + Improved ebuild [Christopher Bratusek]

             + Encoding is unified to utf-8 for all distributed files
               [Teika Kazura]

             + Squashed all bytecompiler warnings [Matthew Love]
               Some warnings were superfluous, though.

             + To info file `dir' the section `sawfish' has been added
               [Luis Rodrigo Gallardo Cruz]

             + Distclean rule for po/Makefile.in [Christopher Bratusek]

             + Removed ancient sawmill removal fragments from Makefile
               [Christopher Bratusek]

             + Block comments in lisp files are now semicolons
               Sorry, without reason. Block comment remains allowed.

        - Docs
             + Added man-pages for `sawfish', `sawfish-client' and
               `sawfish-config' [Debian]

             + News items for 1.5.0 are rewritten in a more readable
               fashion [Teika Kazura]

             + Info manual updates [Christopher Bratusek, Jeremy
               Hankins, Teika Kazura]

             + Added new contributors to `THANKS' section of
               `CONTRIBUTING' [Christopher Bratusek]

             + Updated OPTIONS and KEYBINDINGS [Christopher Bratusek]

             + Fixed the license header of tabbed-windowing files
               [Christopher Bratusek]


1.5.0 "The Hardstyle Factory"
=============================

The new release is Sawfish-1.5.0. We don't release 1.4 series for
historical reason. The next will be 1.6, and 1.5.x are for bugfix
branches.

   * The 1.5.0 release has new features and bugfixes

   * New/Updated requirements:
        - librep 0.17 -> 0.90.0

        - rep-gtk 0.18.3 -> 0.18.4

   * User visible changes:
        - Fully renamed from "sawmill" to "sawfish"

          If your `.sawfishrc' has a line `(require 'sawmill-defaults)',
          then change it to `(require 'sawfish-defaults)'.

          If your configuration file is named `~/.sawmillrc', then
          rename it to `~/.sawfish/rc' or `~/.sawfishrc'.

        - Configurator GUI's default style is tree view of categories.

          Configurator GUI (sawfish-ui) used to display categories in
          flat row, but now arranges them in tree diagram.

          To use the old style, put `(define-special-variable
          customize-program "sawfish-ui --flatten")' in your
          configuration file.

   * Bugs fixed:
        - Fixed an compilation-error caused by glib [Michal Jaegermann]

        - Make building with imlib1 instead of gdk-pixbuf work again
          [Michal Jaegermann]

        - Create src/build.h, since it has been missing before
          [Christopher Bratusek]

        - Fixed an "unknown remote error" that might appear [Alexey I.
          Froloff]

        - Make "make uninstall" work again [Christopher Bratusek]

        - Fixed the issue that apps did not start iconified, even if
          requested [Ian Zimmerman, Teika Kazura]

        - First create $datadir/applications, then install the desktop
          file [Christopher Bratusek]

        - Fixed default animation outline coordinates [Christopher
          Bratusek]

        - Don't ignore datarootdir setting [Christopher Bratusek]

        - Make Sawfish more error-tolerant if an app has an icomplete
          WM_CLASS [Martin Mares]

        - Make sure we don't mix Super and Hyper [Denis Barbier]

        - Fixup the last incomplete AC_DEFINE [Christopher Bratusek]

        - Fixed a speed-issue with "microGUI" theme [Christopher
          Bratusek]

        - Make properly use of WM_NAME in "Elberg-tabbed" theme
          [Christopher Bratusek]

        - UTF-8 Support in window menus [Wang Diancheng]

        - UTF-8 Support in GTK Widgets [Christopher Bratusek]

   * New features:
        - Tabbed Windowing Support [Yann Hodique, Scott Scriven, Nathan
          Froyd, Christopher Bratusek], Raise Tabs on hover
          [Christopher Bratusek]

          Windows can be "tabbed", or multiple windows bound to one,
          sharing size and frames. It's still under development
          (sorry). For instructions, see our wiki site
          `http://sawfish.wikia.com/Tabs'.

        - Focus enhancements [Timo Korvola]

          Improvements in focus are done from which KDE users will
          benefit.  Some new windows can receive focus. Some undesired
          focus transitions to desktop windows are suppressed.

          In enter-exit and enter-only focus modes, enter-notify events
          caused by grab/ungrab are ignored. This has a bad side
          effect, too.

          In lisp, replaced hardcoded focus logic by `focus-revert'
          function. Previously, action when the focused transient
          window is unmapped was not handled by focus modes, but coded
          elsewhere. Now `focus-revert' event is invoked, and passed to
          focus modes. (For detail, *note Input Focus::.) This makes
          the modes' policy clear, and programmable.

        - cursor warp enhancements. [Christopher Bratusek]

          During window cycling, cursor is warped to the current top
          window if `warp-to-window-enabled' and `cycle-raise-windows'
          are non-nil.

          When the window gets unmaximized, the cursor is retained in
          that window when `warp-to-window-enabled' is non-nil.

        - 3 New Window-Animators for moving and resizing: cross,
          elliptical and draft [Christopher Bratusek, Teika Kazura
          (draft fixups)]

        - Shrinking/Yanking Support [Timo Korvola]

          Shrink and yank are commands to reduce overlap with other
          windows "by one", with a motion in direction
          left/right/up/down. "Shrink" commands move one edge of the
          window to shrink, and "yank" commands move the window.

          To use them, put `(require 'sawfish.wm.commands.shrink-yank)'
          in your configuration file, and use the configurator GUI to
          bind commands to keys.

        - "Infinite Desktop" Feature [David T. McWherter]

          It makes the virtual desktop bigger than the screen, actually
          so big that there's no limit. You can scroll it with mouse
          continuously in natural manner.

          This is in contrast to the coventional viewport; it scrolls
          by a step of one screen size. Thus it may not work so well
          with viewports.

          To use it, put `(require 'sawfish.wm.ext.infinite-desktop)' in
          your configuration file, and use configurator GUI.

        - In configurator GUI, viewport commands and history appear.
          Under matched-window, fixed-position, never-iconify,
          never-maximize are available. [Christopher Bratusek]

        - Added cycle-among-groups(,-backwards) commands (cycle among
          the most recently used window of groups) [Fernando Carmano
          Varo]

        - Interactive placement-mode now also for transients
          [Christopher Bratusek]

        - Improved prompt.jl (allows changing font, fg and bg color)
          [Sergey I. Sharybin]


   * Other changes:
        - To build with XFree86/X.Org < 7.0 add -without-xorg-x11r7
          flag [Christopher Bratusek]

        - To build without Pango add -without-pango flag [Christopher
          Bratusek]

        - To prevent installing translations add -without-nls flag
          [Christopher Bratusek]

        - Set RestartStyleHint to 2 [Christian Marillat]

        - When matching window to alist try WM_NAME if WM_CLASS is
          unset [Christian Marillat]

        - Major Documentation update [Derek Upham, Teika Kazura]

        - New Sound Theme [glh Pimenta]

        - Added ebuild [Harald van Dijk]

        - Added session desktop file [Christopher Bratusek]

        - rep.m4 has been dropped use librep.pc/rep-gtk.pc instead
          [Christopher Bratusek]

        - Added sawfish.pc [Christopher Bratusek]

        - Improved Makefile's distclean rule [Christopher Bratusek]

        - Updated .desktop files for gnome-session >=2.23 [Christopher
          Bratusek]

        - Fixed autogen for libtool >2.2 [Christopher Bratusek]

        - Major configure script rework [Christopher Bratusek]

        - Don't ship config.sub config.guess and install-sh in
          $srcdir/etc [Christopher Bratusek]

        - Reworked Sawfish-UI [Christopher Bratusek]

        - Dropped libgnome|gnomeui|gnomecanvas widgets, use pure gtk
          instead [Christopher Bratusek]

        - Merged changes from sawfish-pager [Christopher Bratusek]

        - Major update of the spec file [Christopher Bratusek, Michal
          Jaegermann, Ritz]

        - Print usefull stuff at the end of configure [Christopher
          Bratusek]

        - Add distclean rule to all Makefiles [Christopher Bratusek]

        - Add KEYBINDINGS file, containing a list of all default
          keybindings [Christopher Bratusek]

        - Updated OPTIONS for all new options [Christopher Bratusek]

        - Cleaned Up Makedefs.in [Christopher Bratusek]

        - Move 'avoid' window-matcher from placement to state [Teika
          Kazura]

        - Updated compat.jl [Teika Kazura]

        - Removed all old ChangeLog files [Christohper Bratusek]

        - Make move-cursor.jl export all functions described in the doc
          [Christopher Bratusek]

1.3.5
=====

   * The 1.3.5 version has new features and bugfixes

   * New/Updated requirements:
        - librep 0.14 -> 0.17

        - rep-gtk 0.18 -> 0.18.3

   * New features:
        - Support _NET_WM_USER_TIME by Hellmut Eller

        - Added ATK-A11Y Support by Shobbit Marthur

        - Added Viewport-Boundary by Christopher Bratusek

        - Added Error-Handler "both" by Christopher Bratusek

        - Added 2 new Buttonlayouts to Crux "complete" and "complete
          inverse" by Christopher Bratusek

        - Honour ICCCM Aspect Ratio by Andrea Vettorello

        - Expose all Keybindings in SawfishUI by Christopher Bratusek

        - Added Animated Viewport Scrolling by Fernando Carmona Varo

        - Also expose the "Stagger" and "Off-Center" placement-modes

        - Add a new hook: "before-slide-hook" by Andrea Vettorello

        - Expose all smart placement-modes, "Best-Fit",
          "Best-Fit-Group", "First-Fit-Or-Interactively" by Christopher
          Bratusek

        - Better GNOME Integration by Christian Marillat

   * Bugfixes:
        - Minimum pango version is 1.8.0 not 1.16.0 by Christopher
          Bratusek

        - Fix Installation of mxflat by Michal Jaegermann

   * Other Changes:
        - Remove all ^L in the source by Teika Kazura

        - Small Code-cleanup to make build with "-Wall -ansi -pedantic"
          possible again (also requires recent librep for this to work)

        - Major Documentation Update by Derek Upham

        - updated the shipped config.sub and config.guess by
          Christopher Bratusek

1.3.4
=====

   * The 1.3.4 version has new features and bugfixes

   * New features:
        - "Enter-Click focus mode" by Dagfinn I. Mannsake, Christopher
          Bratusek and Timo Korvola: windows get focus only when mouse
          enters it or if it is clicked and was unfocused.

        - "Parallel make" by Harald van Dijk: allows building using
          more processors.

        - Improved window property handling by Teika Kazura.

        - Added new themes: mxflat, get-S-tabbed and elberg-tabbed.

        - Added new binding to maximize window fullscreen on all
          xinerama screens, by Jonathan Sambrook.


   * Bug fixes:
        - Fixed raise-lower window bug when using transparent windows
          with xcomposite extension, by Timo Korvola.

        - "Refresh icons" by Timo Korvola: when window changes its
          icon, the frame gets updated.

        - Major C part cleanup, removing compilation warnings, by
          Christopher Bratusek.

        - "Keep Focus on move-window-'direction'" by Mark Schreiber:
          allows moving windows around viewports without losing focus.

        - "Selfdefine xterm command" by Dagfinn I. Mannsaker: allow
          using custom xterm instead of hardcoded one.

        - "Update the Spec-file" by Ian Dall: update deprecated
          keywords.

        - "Fix make-pot" by Christopher Bratusek: the make-pot script
          works again.

        - Themer was removed, because rep-glade is not yet ported to
          glade2.

        - Added missing keyboard accelerators in window menu and Move
          and Resize entries, issue reported by Fernando Carmona Varo.


1.3.3
=====

   * The followup 1.3.3 version is released with bugfixes' fixes

   * Bug fixes:
        - "Utf 8 names fix" by Timo Korvola: window titles with UTF-8
          working and no openoffice crashes

        - "Pango draw() ignores font" by Yuuki Harano and Rodrigo
          Gallardo: allows using pango fonts correctly.

        - "Titlebar updates" by Harald van Dijk and Timo Korvola: don't
          forget to tell the running theme that window title length has
          changed.

        - "KDE tray fix 2" by Timo Korvola: KDE is not always using
          freedesktop.org protocol so we need to adjust a few glitches.


1.3.2
=====

   * The 1.3.2 version is released with bugfixes submitted by sawfish
     community

   * Strings are re-encoded in UTF-8. Window titles will be set
     correctly regardless of title encoding (Rodrigo Gallardo)

   * updated documentation to v0.12 (Derek Upham)

   * added Occitan Lanaguage (Yannig Marchegay)

   * Bug fixes:

        - Nautilus desktop window can now restore its size properly
          (Rodrigo Gallardo)

        - Sawfish.desktop file now complies with freedesktop.org
          standard (Rodrigo Gallardo)

        - Fix select workspace to make sure it calls with right
          arguments (GSR)

        - Fix 64 bit client messages (Thadeu Lima de Souza Cascardo)

        - Don't display unneeded blank lines when window is opened by
          prompt function (Sven Schoenung)

        - KDE system tray no longer fighs with sawfish to reparent a
          tray icon (Timo Korvola)

        - Add bounds checking on _NET_CURRENT_DESKTOP requests (Timo
          Korvola)

        - QT applications no longer lose focus when menu is active
          (Harald van Dijk)

        - Corrected window placement in xinerama/dualhead when using
          centered/centered-on-parent (Fuchur, with comments by Andrea
          Vettorello)


1.3.1
=====

   * The 1.3.1 version is released to let people know that Sawfish is
     being revived by the community, and we are awaiting patches to be
     submitted for incoming 1.3.2 release

   * John Harper resigns from Sawfish maintainership and Sawfish
     community takes over. Janek Kozicki has SVN access, applies
     patches and makes releases.

   * new official Sawfish website `http://sawfish.wikia.com/'

   * updated documentation to v0.11 from Derek Upham

   * updated FAQ from Sawfish wiki

   * added tool for automatic screenshot generation for huge number of
     themes (Scott Scriven)

   * Add detection for Xrandr extension (Philip Langdale)

   * added Punjabi Lanaguage (Amanpreet Alam)

   * Makefile.in: install Sawfish.desktop unconditionally (John Harper)

   * generate sawfish.gtk.widgets.font from font.jl.in, define
     have_pango_xft in the substitutions (John Harper)

   * Bug fixes:

        - fixed possible buffer overflow in src/fonts.c (Yoshiaki
          Kasahara)

        - Updated Swedish translation (Daniel Nylander)

        - check for pango libs and flags (optional dependency)


1.3
===

   * Implemented EMWH "show desktop" mode

   * Set client window gravity to `StaticGravity' while reparenting
     windows (Michal Maruška)

   * Support EWMH `SKIP_TASKBAR' state (Chris Boyle, me)

   * Window history keys may have multiple properties (not enabled by
     default for backwards compatibility, see `window-history-key'
     variable)

   * More placement modes are now multihead-aware (Steve Hill)

   * Translation updates: el (Simos Xenitellis, Kostas Papadimas), de
     (Christian Neumair), no (Kjartan Maraas), pt_BR (Alexandre Folle de
     Menezes), am (Daniel Yacob), es (German Poo Caaman~o), uk (Maxim
     Dzumanenko), sk (Stanislav Visnovsky)

   * Bug fixes:

        - compile with Gtk 2.2

        - don't try to unfocus windows within the X error handler

        - don't cache frame objects while clicking in windows, they may
          get garbage collected - fixes "crash on shading" bug

        - set `_NET_WM_NAME' as `UTF8_STRING' type (Christian Krause)

        - `save-session' is now called `gnome-session-save'; fallback
          to looking in `/usr/gnome' for menus

        - fixed typo in `adjust-position-for-gravity/y'

1.2
===

   * Added an `OPTIONS' file describing the variables that may be
     customized

   * Some drawing optimizations: don't reinstall frame shape at each
     redraw, turn off graphics exposures in all contexts

   * Added a cache for X properties to minimize server round-trips

   * Added support for Xft fonts

   * Color objects now store alpha as well as rgb data

   * Support useful parts of 1.1 NET WM spec; also fixed some bugs /
     omissions in support for 1.0 spec (e.g. `_NET_WORKAREA')

   * Support for two dimensional workspace layouts and edge flipping
     (Michael Toomin)

   * Translation updates (Dmitry G. Mastrukov, Jordi Mallach, Vincent
     van Adrighem, Christian Rose, Stanislav Visnovsky, Daniel Yacob,
     Andras Timar, Sava Chankov, Christian Neumair, Peteris Krisjanis,
     Gustavo Noronha Silva, Christian Meyer, Fatih Demir, Hasbullah Bin
     Pit, Christophe Fergeau)

   * Bug fixes:

        - Don't pass null pointers to `accept ()'

        - Stacking list assertions no longer abort execution, they just
          print an error message

        - Handle minimum-size hints that are zero

        - Understand the Pango font names that the Gtk2 font selector
          uses

        - Fixed bugs when iconifying sticky windows

        - When servicing configure-window requests, respect the window's
          locked dimensions. Also handle moving in only one direction

        - `grow-pack' bug fixes (Daniel Pfeiffer)

        - Fixed some problems with fullscreen mode

        - Fixed some problems in the Gtk2 config tool

        - Other bug fixes (Greg Morris, Claudio Bley)


1.1
===

   * Reorganized the customization options. Removed user levels.
     Removed many obscure options (most are still available as lisp
     variables, just not from the UI). Viewports are no longer
     available in the UI

   * Updates to the `grow-pack' module (Kai Großjohann, Daniel Pfeiffer)

   * In matched windows, boolean options can be turned off as well as
     on (me, merlin)

   * New full screen maximization mode

   * Bug fixes:

        - Miscellaneous focus fixes

        - Be more selective about which X errors imply window deletion

        - Don't trigger a stacking-list assertion on logout

        - Check for window-ness in window-visibility (Michal Maru¹ka)

        - Reread WM_WINDOW_PROTOCOLS when it changes

        - Fixed bug of nautilus windows not being focused in focus
          follows mouse modes

        - Recover "lost" windows when selecting windows (merlin)

        - Show correct size when resizing windows (merlin)

        - Most placement modes now respect workarea (Federico Mena
          Quintero, me)

        - Miscellaneous fixes to wm-spec implementation. Includes code
          to support _NET_WM_STRUT

        - Call `bindtextdomaincodeset' function if rep implements it
          (Christophe Fergeau)

        - Make the current-directory stored in the session a valid
          filename

        - Don't put windows below the default depth just because their
          parent is

        - Miscellaneous viewport fixes (Federico Mena Quintero)

        - Don't let "transients above" and "layer" stacking constraints
          conflict with one another


1.0.1
=====

   * Translation updates: pt (Carlos Perelló Marín), it (Michele
     Campeotto), pl (Zbigniew Chyla), zh_CN (Wang Jian), zh_TW (Abel
     Cheung), es (Eneko Lacunza), tr (Ömer Fadýl USTA), sv (Göran
     Uddeborg, Christian Rose), da (Ole Laursen), gl (Jesus Bravo
     Alvarez)

   * Bug fixes:

        - Fixed typo in `apply-command-keys' function (David Bustos)

        - Fixed bug in `wm-spec' module causing nautilus desktop window
          to cover panel

        - Adopt windows with a maximized hint correctly

        - Fixed bug in `display-window' function that can prevent the
          window getting focused

        - Don't allow windows to be moved or resized by third-parties
          when they're maximized (and the necessary option is set)

        - Fixed problem with localizing property names in the
          matched-windows configuration widget

        - Handle window gravity more correctly (Owen Taylor)

        - Forget everything about withdrawn windows - better ICCCM
          compliance

        - Fixed root-window event proxying (the infamous gmc bug)

        - Don't use dlmalloc on sparcs (Brian Nitz)


0.99
====

   * Requires `librep' 0.14 or newer

   * Translation updates: ja (Sato Satoru), no (Kjartan Maraas), es
     (Carlos Perelló Marín), fi (Antti Ahvensalmi), cs (Jiri Cerny), fr
     (Christian Marillat), de (Matthias Warkus, Christian Meyer), da
     (Ole Laursen), sk (Stanislav Visnovsky), tr (Özgür), sv (Christian
     Rose, Peter Winnberg), gl (Jesus Bravo Alvarez)

   * Do i18n on more text strings (Vlad Harchev, me)

   * Broken support for multiple-screen displays. Supplying the new
     `--multihead' option will fork extra copies of sawfish for each
     extra screen. This has some fundamental problems, but some people
     seem to want it (Michael Vogt, Mahmood Ali, me)

   * Window manager virtual modifier once again defaults to `M-'
     instead of `C-'

   * Added support for `Off2' and `Off3' events

   * `menu-program-stays-running' variable now defaults to true by
     popular demand

   * New command `focus-desktop'

   * Switch viewports more efficiently (by choosing the best order to
     move windows, to minimize the exposed area)

   * Monitor the `_WIN_WORKSPACE' property of each window

   * Bug fixes:

        - Check for X SHAPE extension, exit if it's not available

        - Wait for the focus-in event before changing sawfish's
          knowledge of the focused window when moving focus from one
          window to another

        - Be more ICCCM-compliant, don't send synthetic configure notify
          events when the window was resized

        - Fixed locale font handling

        - Don't leave grid traces when trying to move/resize a window
          that's locked in place

        - Fixed bug where the pointer being over the message window
          could confuse focus after window cycling

        - `decorate-transients' option works again with shaded windows

        - Documentation appears in tooltips again

        - Handle sticky properties better in the `window-history' module

        - Maximization fixes for multi-headed displays (Florent
          Guillaume)

        - Cancelling a resize of a maximized window no longer discards
          the window's maximized state


0.38
====

   * Translation updates: gl (Jesus Bravo Alvarez), sv (Martin
     Norbäck), de (Matthias Warkus, Christian Meyer), ru (Vlad
     Harchev), es (Joseba García Etxebarria), pl (Daniel Koc), fi
     (Antti Ahvensalmi), sk (Stanislav Visnovsky), az (Pablo
     Saratxaga), cz (Stanislav Brabec), no (Kjartan Maraas), el (Simos
     Xenitellis), it (Michele Campeotto), fr (Christian Marillat), ro
     (Marius Andreiana), ko (?)

     Extract some more translatable strings (Vlad Harchev)

   * `Crux' theme now has an extra button mode: `Default', like Mac OS
     Platinum but also has an iconify button. Used by default

   * The `grow-pack' module now works with windows which specify
     increments (Kai Großjohann)

   * New command `kill-client'

   * Fixed bugs:

        - Don't return a null pointer when no default cursor has been
          set, return `nil' instead

        - Avoid triggering assertions in the stacking list code when
          raising or lowering windows and the given sibling has been
          destroyed

        - Turned off the annoying code that beeps and prints a message
          when unfocusable windows are detected

        - The GNOME hints now listen for the `_WIN_WORKSPACE' property
          changing and will move the window in response

        - Don't forget maximized state of windows when they're moved,
          only if they're resized

        - Don't show special cursors when moving or resizing windows, or
          when hovering over the title bar

        - Corrected off-by-one error in `smart' placement modes

        - Identified and fixed some problems in the new GNOME/KDE window
          manager hints implementation (Rob Hodges, me)


0.37
====

   * New command line option `--window-history-file=FILE'

   * Search for user's rc file in this order: `~/.sawfishrc',
     `~/.sawfish/rc', `~/.sawmillrc'

   * New option `configure-ignore-stacking-requests' and a
     similarly-named window property. When set stacking requests from
     windows are ignored (Matt Tucker)

   * When restarting sawfish, reselect the previously selected workspace

   * Added a function that can recolour multiple image channels
     simultaneously

   * New function `exit-type' - returns the type of exit in progress

   * Translation updates: ja (Sato Satoru), sk (Stanislav Visnovsky),
     es (Iñaki García Etxebarria), hu (Robert Vanyi), tr (Fatih Demir),
     ro (Tutu Valentin), no (Kjartan Maraas), it (Michele Campeotto), pl
     (Daniel Koc)

   * Fixed bugs:

        - Fixed focus-handling in enter-only mode on window close and
          viewport switch

        - Fixed overflow error in the image recolouring module (Simon
          Budig)

        - Session management always uses a unique session file (Timo
          Korvola, me)

        - Fixed bug in random placement mode where windows could
          sometimes be placed off-screen

        - Fixed some auto-raise problems by reverting a misguided bug
          fix

        - Fixed bugs with aborted session saves

        - Cache stacking order of windows locally - this allows us to
          keep the order consistent, especially after window
          reparenting operations

        - Don't call `XParseColor' unless we actually _have_ a display
          connection (merlin)

        - Merged two calls to `setlocale' to avoid trashing the locale
          preferences

        - Check for presence of Xinerama extension before trying to use
          it - removes the annoying error message at startup

        - Added some more X server timestamp logic to correct for the
          timestamp discontinuities after APM resume


0.36
====

   * Added a new default theme: `Crux'. By default it recolours itself
     to match the current GTK+ selection colour. (Arlo Rose, me)

   * Updated translations: it (Michele Campeotto), fr (Christian
     Marillat)

   * Added a `shade-button' button class (many themes created it anyway)

   * Added a `sawfish.wm.util.recolor-image' module, currently contains
     a single function for recolouring parts of images based on a given
     colour gradient

   * Added new command `delete-group'. Deletes a whole group of
     windows. With default bindings, shift-click on the close button to
     invoke this command

   * Added support for KDE-style mini-icons. If the window has no
     normal icon, then `window-icon-image' will return the mini-icon

   * Fixed bugs:

        - Themes that use the module for reading the user's gtk
          preferences will once again get updated when the gtk theme
          changes

        - Fix another of the null-string translation bugs (Christian
          Marillat)

        - Work around `XUrgencyHint' not being defined before X11R6

        - Fixed some long-standing bugs when decorating windows (use the
          correct mask when creating the overall window shape; for
          frame parts with no mask, set the local shape to the
          appropriate rectangle; be sure to generate at least one
          Expose event when reconfiguring frame parts)

        - Fixed crashing bug when `bind-keys' is called with zero
          arguments

        - Fixed typo in `crop-image' function when checking validity of
          HEIGHT parameter (martin@whoever.com)


0.35
====

   * Translation updates: ja (SATO Satoru), it (Michele Campeotto),
     zh_TW.Big5 (Chun-Chung Chen), pl (Daniel Koc), sk (Stanislav
     Visnovsky)

   * Items in `choice' widgets may now contain descriptive names,
     syntax is `(SYMBOL "DESCRIPTION")'

   * Changed `focus-windows-when-mapped' option to only apply to
     non-transient windows (this option is now enabled by default)

   * New placement modes `top-left' and `off-center'.  `top-left' is
     now the default mode for non-transients

   * Enabled the module supporting the newly standardized GNOME/KDE
     window manager hints. Also made random changes to support KDE2 a
     lot better

   * Added WM_PROTOCOLS `_SAWFISH_WM_RAISE_WINDOW' and
     `_SAWFISH_WM_LOWER_WINDOW'. Used by `maybe-raise-window' and
     `maybe-lower-window' functions.

     These are similar to `WM_TAKE_FOCUS', in that if the window
     supports the protocol, it's up to it whether or not it raises (or
     lowers) the window in question. These functions should only be used
     where the user hasn't explicitly requested the restacking

     An example usage is an application that doesn't want its window to
     be raised due to a button-press event that initiates a drag
     operation

   * New option `menus-include-shortcuts', disabled by default (Unai
     Uribarri)

   * Don't interpret windows with `WM_TRANSIENT_FOR' set to the root
     window as children of all windows in the group (it causes too many
     annoying effects), instead just decorate these windows as
     transients

   * Handle `group' and `transient' iconification modes better, don't
     use a recursive method, instead use one pass to identify the
     windows to change, then another to make the changes. In
     `transients' mode, only change the state of shared transients if
     they will have no visible parents afterwards

   * In the (old) GNOME hints code, support a `_WIN_HINTS' client
     message (with a similar format to the `_WIN_STATE' message)

   * New module `sawfish.wm.commands.viewport-extras', some commands
     for viewport for viewport navigation (Dams Nadé)

   * Check for `never-iconify' and `never-maximize' window properties
     when appropriate

   * Support sixth and seventh mouse buttons (Steve Haslam)

   * Bug fixes:

        - Fixed problems with reverting changes to list-based options

        - Don't allow the empty list as a valid modifier list

        - Fixed bug where restarting the wm with
          `focus-windows-when-mapped' set would cause any shaded
          windows to be deleted

        - Ignore iconified windows in the grow-pack code

        - Added `font-ascent' and `font-descent' functions to the gaol

        - Catch errors when loading site-init and rep-defaults files

        - Don't use `""' to denote a null doc string (which has bad
          side effects when internationalized)

        - Don't need to run `sawfish-client -' to get a repl anymore,
          just `sawfish-client'

        - Fixed bugs in `composite-images' function

        - Fixed ordering of states output by `gtk-style' program
          (michaelj@maine.rr.com)

        - Fixed grabbing mono window icons in gdk-pixbuf mode

        - Reject button event descriptions that don't specify at least
          one mouse button

        - Accept `()' as a valid image modifier color component

        - Now grabs translatable strings from `defgroup' forms correctly


0.34
====

   * Added a virtual modifier key, the `W-' modifier. This modifier is
     used for all standard window-manager key bindings, it may be set
     to any of the standard X modifiers using the configuration tool

   * Optionally show window-icons when cycling through windows (Unai
     Uribarri Rodríguez, me)

   * Event handlers for low-level X windows now get passed the window
     as their second argument (Unai Uribarri Rodríguez)

   * Translation updates: fr (Christian Marillat), sv (Richard Hult),
     pt_BR (Flávio Bruno Leitner), it (Michele Campeotto)

   * Error handler module (`sawfish.wm.ext.error-handler'). When loaded
     it records the most recent errors, and the time at which they
     occurred. Use the `display-errors' command to display all recorded
     errors.

   * Added an option to not save window-history data for transient
     windows. Also added a `window-history-clear' command to forget
     history for all windows.

   * Rearranged window operations menu to hopefully be clearer

   * Attempt to catch and handle errors while loading custom options

   * Labels in menu items can now be functions, they should return the
     label text when called (with any menu arguments)

   * Moved installed message catalogues to $datadir/locale

   * `defcustom' forms may now a `:widget-flags' keyword, a constant
     list of symbols passed to the configuration tool. Current flags
     include: `expand-vertically' and `expand-horizontally'

   * Added a `sawfish.wm.util.ping' module, it implements the
     `_NET_WM_PING' protocol of the new window manager spec.

   * `destroy-notify-hook' is no longer called asynchronously

   * Bug fixes:

        - Fixed various bugs when dragging/resizing windows

        - Reverted the changes to make the click-to-focus click-through
          setting apply to window decorations

        - Fixed bug when handling 32-bit data in client messages and X
          properties

        - Fixed window-focus problems when switching viewports

        - Many bug-fixes to handling of maximized window state.
          Maximized state should now be preserved across wm and session
          restarts. It's also saved in the window-history attributes

        - Support the function hints of the MWM window manager
          properties

        - Updated the `sawfish.wm.state.wm-spec' module to match the
          current (almost final) draft of the new GNOME/KDE window
          manager spec

        - Fixed sporadic stacking bugs when unmapped windows exist

        - Fixed miscellaneous click-to-focus and focus-click-through
          related bugs


0.33
====

   * Added support for user-levels associated with individual commands

   * The GNOME hints code now understands that the do-not-cover flag is
     the same as sawfish's `avoid' property

   * Swap properties of sticky windows when entering and leaving
     workspaces as for normal windows (fixes the old problem where
     sticky windows can grab focus when a workspace is entered)

   * Changed the default settings of some customization options,
     hopefully to give a more "conventional" feel for new users

   * Better support for Xinerama (Geoff Reedy)

   * Added a new set of window stacking commands: `raise-window',
     `lower-window', `raise-lower-window'. The set of windows affected
     by these commands is determined by the `user-raise-type' (either
     the individual window, the window and any transients, or the
     entire group). The old commands of these names are now called
     `FOO-single-window'.

     Most modules now use these commands when raising or lowering
     windows, allowing the stacking model to be configured globally.

   * Translation updates: no (Kjartan Maraas), fi (Antti Ahvensalmi),
     it (Christopher R. Gabriel), pt_BR (Douglas Moura Ferreira), uk
     (Yuri Syrota), de (Matthias Warkus)

   * Fixed bugs:

        - If committing changes in the configurator causes new
          customization options or groups to be added, update the UI to
          reflect this

        - Added code to detect and correct the sporadic bug where
          windows become unfocusable in click-to-focus mode

        - Sanitized how the focus gets passed to and from transient
          windows (when passing focus back from a transient, give it to
          the most recently focused window in the group, not the
          transient's parent)

          Also, try to avoid displaying maximize buttons in windows
          whose hints prevent them from being maximized

        - Many fixes to how maximized windows are handled across session
          and window manager restarts. Also support GNOME window
          maximized hints when windows are created

        - Fixed some bugs in the `wm-spec' module

        - Don't trigger auto-raise hooks on leave/enter events
          generated by pointer grabs

        - The `edge-flip-delay' option now applies when dragging windows

        - Fixed the preview command in `sawfish-themer'

        - Miscellaneous fixes to the "smart" window placement modes

        - Fixed type description of `persisitent-group-ids' option

        - In `enter-exit' focus mode, focus isn't removed due to
          enter/leave events due to pointer grabs (fixes the bug with
          Mozilla URL completion)

        - Fixed (again) the `focus-click-through' behaviour with
          respect to frame decorations

        - Re-added hack to make GMC icons unfocusable

        - Fixed interactive placement to check for window destruction
          (merlin)

        - Fixed bug with tiled images with shapes (the shape mask would
          always be applied an integer number of times, ignoring the
          size of the frame part it's associated with)

        - Fixed `window-wants-input-p' to check if the `InputHint' is
          set before reading the value


0.32
====

   * `M-TAB' window cycling now works in both directions, bind keys to
     `CYCLE-COMMAND-backwards', e.g.  `cycle-windows-backwards'
     (Merlin, me)

   * Added support for X `Urgency' hint: `window-urgent-p' and
     `window-state-change-hook' is called with `urgency' state when it
     changes

   * Some improvements to `shade-hover' mode (adapted from Eli Barzilay)

   * Functions that raise/lower groups of windows now generate the
     minimum number of expose events (Rob Hodges, me)

   * New window property `window-list-skip'. Unified with GNOME
     skip-winlist hint

   * Custom options may have tooltips, use `:tooltip' tag

   * Catch errors when applying custom changes and revert to previous
     state

   * Translation updates: uk (Yuri Syrota), pt_BR (Douglas Moura
     Ferreira), hu (Róbert Ványi), de (Christian Meyer), ja (SATO
     Satoru), da (Keld Jørn Simonsen), es (Iñaki García Etxebarria), fr
     (Christian Marillat)

   * Fixed bugs:

        - With click-to-focus in non-click-through mode, don't
          click-through into window decorations

        - `dimensions' property in window matching was called `size' by
          mistake

        - Export the various `sp-cost:' functions from the
          `sawfish.wm.placement.smart' module

        - Don't allow cycles in the transient-for relationship

        - Fixed some maximize bugs

        - GNOME skip-focus property no longer causes the window to be
          unfocusable, just uncyclable-to

        - Coerce auto-raise timeout to be at least one millisecond;
          support `disable-auto-raise' correctly

        - Window input hints defaults to true not false

        - Fixed typo when loading the defaults file (Ronald Wahl)

        - Fixed command spec of `move-window-FOO' commands (Yoshiki
          Hayashi)

        - When sending `WM_TAKE_FOCUS' message, only focus the window
          if its `Input' hint is set


0.31.1
======

   * Translation updates: da (Kenneth Christiansen), de (Christian
     Meyer), no (Kjartan Maraas), pt_BR (Rui Miguel Silva Seabra), sv
     (Johan Dahlin), uk (Yuri Syrota)

   * Bug fixes:

        - Fixed typos in `sawfish.wm.gnome.integration' and
          `sawfish-themer' (Christian Marillat)

        - Fixed bug when building on Tru64 (John H. Palmieri)

        - Remember to check return value when initializing Imlib


0.31
====

   * Requires librep version `0.13'

   * Organized all lisp code into a hierarchy of modules. Root points
     are `sawfish.wm' for window manager code, `sawfish.ui' for
     configurator and `sawfish.gtk' for GTK+ utilities

     Compatibility should have been preserved as far as possible,
     through the use of module aliases. The `user' module that
     unmodularized user code is loaded in should look very similar to
     the old environment.  However, code using private functions,
     probably will not work

     New features written as modules can either import modules
     individually, or just open `sawfish.wm' to get the core
     functionality

   * All command handling is now written in Lisp. It's fully compatible
     except for how commands are defined. Since there is no longer a
     unified namespace the mapping from names to command definitions is
     maintained separately.

     `define-command' and `autoload-command' add entries to this
     mapping. `define-command' takes a name and a function (and some
     other optional arguments). The old style of defining commands still
     works, but only in the user module

   * `sawfish-client' now provides the same repl as the normal `rep'
     program. E.g. this allows the module system to be easily inspected

     Also, the module of each loaded theme is available for inspection
     under `themes.THEME-NAME'. (With themes using top-level defines
     instead of a single `let*' block, this is useful for debugging)

   * `sawfish.client' module provides lisp functions for communicating
     with a running window manager. Also, the protocol has been
     modified to support proper communication of errors, which are then
     re-raised on the client-side. This should make debugging
     client-server code more obvious

   * `Action' parts of menu items may now be lisp objects that don't
     have a read syntax. (E.g. this allows closures to be used,
     avoiding the problems arising from modularization)

   * Support for checked and radio-group menu items. Also a new
     function `add-window-menu-toggle' to add items to the `Toggle'
     sub-menu of each window

   * Handle `ConfigureRequest' events in a way that is compliant with
     the ICCCM--honour the window's `win_gravity' setting (defaulting
     to `NorthWest' gravity), instead of assuming `Static' gravity

   * Support more GC attributes in the `sawfish.wm.util.x' plugin (Ryan
     Pavlik)

   * Support for handling arbitrary windows as extra "root" windows.
     Used, e.g., to support Nautilus' desktop window. Allows the focus
     modes to work correctly

     To support this, new window property `desktop' denoting a
     "desktop" window; new function `desktop-window-p' recognizing one
     of these things (or the symbol `root')

   * Added `pointer-motion-threshold' option. Pointer motion events are
     only generated when the pointer moves at this many pixes away from
     the position it had when the button was pressed

   * New functions: `scale-image', `composite-images', and `crop-image'.

   * New option `maximize-avoid-avoided' (Jonas Linde)

   * New functions exported by `sawfish.wm.ext.tooltips' module:
     `display-tooltip', `remove-tooltip'

   * New function exported from `sawfish.wm.viewports' module:
     `select-workspace-and-viewport'. Renamed some workspace functions:

     `ws-move-window' => `move-window-to-workspace', `ws-copy-window'
     => `copy-window-to-workspace', `ws-insert-workspace' =>
     `insert-workspace', `ws-move-workspace' => `move-workspace',
     `ws-remove-window' => `remove-workspace'.

   * Changed interface of `get-visible-window-edges' function to use
     proper keyword parameters, and added some new keywords

   * New commands `help:about' and `gnome-about'. Added a
     `sawfish-about' script to implement the first of these. Added
     associate menu items to the `Help' menu

   * New window property `cycle-skip', defines whether the window is
     included when cycling the focused window. (Dave Dribin, me)

   * Translation additions and updates: es (Iñaki García Etxebarria),
     tr (Fatih Demir), zh_CN.GB2312 (zw@zhaoway.com), fr (Christian
     Marillat), ja (SATO Satoru), de (Kai Lahmann), el (Simos
     Xenitellis), ga (Seán Ó Ceallaigh), ru (Valek Filippov), sl
     (Andraz Tori)

   * Bug fixes:

        - Don't let errors in `.sawfishrc' prevent customization
          settings being loaded

        - initialize event handler when creating X window proxies (Matt
          Tucker)

        - No longer able to `throw' out the top of the program by
          mistake

        - Fixed `find-head' function, to allow Xinerama support to work

        - When exiting, leave window configurations exactly as they were
          found (E. Jay Berkenbilt)

        - Fixed `synthesize-event' to scan the window tree for a child
          window accepting button events (E. Jay Berkenbilt)

        - Removed "yow! ..." debugging messages

        - `image-set' and related functions will add an alpha channel
          to the image when necessary (when using gdk-pixbuf)

        - Canonify `S-x' as `X' where possible

        - Catch and handle errors when matching properties in the
          `sawfish.wm.ext.match-window'

        - Escape underscores in menu items where they shouldn't
          introduce accelerators. (Added `quote-menu-item' function to
          help with this)

        - Fixed race-condition when exiting configurator embedded into
          the GNOME control center (Havoc Pennington, me)

        - Fixed bug in `set' method of the `icon' widget

        - Fixed shading behaviour of included themes (Daniel Lundell)

        - Compute the shape of the frame window each time the
          background of one of its parts changes

0.30.3
======

   * If a frame part has a non-nil `hidden' attribute, ignore it

   * When reframing windows, keep the absolute position of the client
     window constant

   * Support `FIXED_POSITION' GNOME hint (renamed old `fixed-position'
     property as `client-set-position'; `fixed-position' now means
     don't allow the window to be moved by the user)

   * `transients-above' option can now be set per-window

   * Translation updates: fr (Christian Marillat), en_GB (Robert
     Brady), de (Kai Lahmann), da (Keld Simonsen), ru (Valek Filippov),
     sl (Andraz Tori), no (Kjartan Maraas), gl (Jesus Bravo Alvarez), it
     (Michele Campeotto)

   * Fixed bugs when converting option values

   * Fixed `:require' keyword in `defcustom' always causing the module
     to be loaded, not just when the option is non-nil

   * Fixed bug when adding windows that are shaded

   * Fixed some minor bugs in the configurator


0.30.2
======

   * Window cycling now forwards terminating events to external
     applications as well as internal bindings (e.g. `M-TAB M-w' closes
     an activated Netscape window)

   * `quote-event' command now works with applications that ignore
     synthetic events (adapted from code by Timo Korvola)

   * Reorganized frame style and window type management. New function
     `define-frame-type-mapper' allows modules to affect the mapping
     from window type to frame type. E.g. the shading module uses this.
     (fixes the bug that changing the frame type of a shaded window
     didn't work)

   * Added function `variable-customized-p'; use this to avoid
     redefining user-modified options

   * Do type-directed deep conversion of values when converting to/from
     readable representations. This fixes the bug that options with
     `:type (optional color)' weren't being converted when passed
     between the wm and the configurator, leading to reader errors

     A side-effect of this is that updated custom files will not be
     compatible with previous versions of the wm (though old custom
     files will work with new versions)

   * Translation updates: no (Kjartan Maraas), de (Kai Lahmann), nl
     (Dennis Smit), sl (Andraz Tori)

   * Added primitives `map-windows' and `filter-windows'

   * Fixed bug of not retaining focus on startup when originally in
     PointerRoot mode and moving to click-to-focus mode (Brad Thompson)

   * Ensure that apps get sent a synthetic ConfigureNotify event after
     ConfigureRequest events are handled (fixes bug where menus in Java
     apps can appear at wrong position until window is moved)

   * When referencing known variables from subroutines, make sure that
     restricted environment doesn't prevent the variable being accessed
     (fixes bug where `default-bevel-percent' was being ignored)

   * When creating transient groups, don't compare null group ids
     (fixes xfmail related bugs)

   * Fixed `move-window-to-viewport' command to correct for 1...
     indexing

   * Fixed non-gnome workspace widget in configurator


0.30
====

   * New commands `activate-viewport-column', `activate-viewport-row'

   * New commands `raise-window-and-transients',
     `lower-window-and-transients' and
     `raise-lower-window-and-transients',
     `raise-transients-and-pass-through-click'.

     As the normal window stacking commands, but restacks the
     "transient-group" of the window. This includes the window itself
     and any transients it has, and any windows that it itself is a
     transient of.

     These commands are used in the default keymaps

   * Functions that deal with transient windows now understand the de
     facto standard of setting the `WM_TRANSIENT_FOR' property to the
     root window denotes that the window is a transient for the whole
     group

   * New image manipulation functions: `image-ref', `image-set',
     `image-fill', `image-map'. New color accessor function
     `color-rgb-8'. New function `root-window-id'

   * Improvements to `sawfish-ui': optionally use some GNOME widgets,
     more lisp widget types, some bug fixes

   * New command `command-sequence'. Allows individual bindings to
     invoke a sequence of commands

   * Options `iconify-group-mode' and `uniconify-group-mode' replace
     `iconify-whole-group' and `uniconify-whole-group'.  New commands
     `iconify-transient-group', and `uniconify-transient-group'

   * Added `:type*' key to `defcustom', like `:type', but value is left
     unquoted

   * Translation updates: pl (Daniel Koc), ru (Valek Filippov), uk
     (Yuri Syrota), es (Iñaki García Etxebarria)

   * Fixed handling of `WM_NORMAL_HINTS' (was using base-size instead
     of min-size in places)

   * Fixed further locale / FontSet bug (Tomohiro KUBOTA)

   * `window-history' module won't resize a window to a size that
     violates its size constraints


0.29
====

   * Rewrote the configuration user interface. Improvements include:

        - Key bindings may now include parameters. E.g. this finally
          allows shell commands to be bound to keys using the GUI (use
          the new `run-shell-command' command)

        - Nautilus-like user-levels to tailor the options shown to the
          expertise of the user

        - Options may have much richer type descriptions (including
          `match-window' options). Also, extra widget types and
          containers may be added as extra Lisp modules

        - By default the stand-alone configurator commits changes to the
          window manager as they are made, instead of waiting for the
          `Try' button to be pressed

        - Added dependences--options with dependences are only editable
          when the value of their dependence is non-`nil'

   * Rewrote window stacking code to be based on "stacking
     predicates"--functions that accept or reject a possible stacking
     configuration. This allows the "stack-transients-above-parents"
     option to work correctly, only keeping transient windows above
     their _own_ parent windows

   * The configure-event handler now understands and handles the full
     complexity of stacking requests (Brad Thompson)

   * New frame-part attribute: `scale-foreground'. The `cursor'
     attribute may now be a function

   * Made the `centered', `centered-on-parent' and `under-pointer'
     placement modes clamp the window into the current work area (i.e.
     without overlapping windows that shouldn't be covered).  Added a
     `stagger' placement mode

   * When grabbing window icons to images, preserve their shape masks

   * Moved `window-history' options to `placement' group.  Fixed some
     more bugs and sub-optimal default option values

   * Don't set cursors for button classes, use the default value

   * GNOME `SKIP_FOCUS' window hint sets `never-focus' property on
     window, as well as the `ignored' property

   * Translation updates: de (Karl Eichwalder), ru (Valek Filippov), da
     (Kenneth Christiansen)

   * Added mostly-complete support for using gdk-pixbuf instead of
     Imlib (requires an experimental Xlib version of the gdk-pixbuf
     library)

   * Various bug fixes and other minor changes...


0.28.1
======

   * New options `--visual=TYPE' and `--depth=DEPTH'. These tell the
     window manager to use a different visual than the default

   * Made the `window-history' module behave more sanely (don't save
     iconified or shaded state; include window name when generating
     keys for transient windows)

   * Made `beos-window-module' the standard window menu (require
     `old-window-menu' to get the original version). Also made this
     display the windows' class names

   * Updated translations: es (Iñaki García Etxebarria), tr (Fatih
     Demir)


0.28
====

   * New module `window-history'--automatically saves window attributes
     when they are explicitly set by the user, then copies these
     attributes to windows with the same `WM_CLASS' as they are
     created. This is loaded automatically if you have no `.sawfishrc'

   * New method of allowing themes to implement only some of the
     (currently) four frame types. The variable
     `frame-type-fallback-alist' maps each frame type to the type to
     try if the original type isn't available in the chosen frame style.

     Note that for this to work, themes must return `nil' when they
     don't support the requested frame type, until now, the convention
     had been to return the default frame definition, so most if not
     all themes will need changing. (This doesn't include themes
     created using the `make-theme' module.)

   * Made the metrics used by the `best-fit' placement mode
     user-controllable. Set the `sp-cost-components' variable to a list
     of cost functions and the weight to apply to that metric. E.g. by
     default it gives 50% importance to the distance from the placement
     to the focused window, and 25% each to the distance to the pointer
     and to the "future-unusefulness" of the area being covered

   * New module `beos-window-menu' to redefine the window menu to group
     items by the window group that they are a member of (in the
     absence of actual group information, it will heuristically build
     groups by matching window titles)

   * New option `edge-flip-warp-pointer', whether or not to warp the
     pointer after edge-flipping (Paul Warren)

   * New option `display-window:uniconify-to-current-workspace',
     controls whether windows uniconified by `display-window' should be
     moved to the current workspace (John N S Gill)

   * Changed method of selecting when to use multi-byte aware rendering
     functions (except when initializing the locale fails, or returns a
     7-bit locale); also, when creating a fontset fails, try to
     intelligently fall back to a similar group of fonts (Tomohiro
     Kubota)

   * The `x' library now supports creating and then drawing to pixmaps.
     The pixmaps can then be grabbed to images using the
     `make-image-from-x-drawable' function

   * Added a `Help' item to the root menu

   * Translation updates: fi (Antti Ahvensalmi), gl (Jesus Bravo
     Alvarez), de (Karl Eichwalder), nl (Jan Nieuwenhuizen), pl (Daniel
     Koc), tr (Fatih Demir)

   * Now supports the `Super' modifier

   * Fixed bug of sometimes ignoring pending X events

   * Fixed bug of calling focus change hooks too many times (only when
     our view of the focused window has actually changed)

   * Avoid problems when windows set weird size hints structures

   * Raise windows _after_ possibly moving them to a different layer,
     when they have been mapped

   * When the `cycle-windows' sequence is terminated by an unknown
     event, re-handle that event after exiting (so that e.g.  `M-TAB'
     can be followed by another `M-' qualified event without releasing
     Meta)


0.27.2
======

   * Translation updates: da (Kenneth Christiansen), de (Karl
     Eichwalder), es (Iñaki García Etxebarria), ja (SATO Satoru)

   * Attempt to destructure the language code when parsing GNOME
     desktop items (e.g. if `LANG=de_DE' look for both `de_DE' and `de'
     translations)

   * New focus handler events `enter-root' and `leave-root'

   * Removed `raise-groups-on-focus' option, it caused unstable window
     flickering in certain cases

   * Fixed bug When transferring focus after a window is unmapped
     (inverted choice of when to look under pointer, and when to look in
     focus history)


0.27
====

   * Changed the name from `sawmill' to `sawfish'; all user-visible
     binaries have been renamed appropriately, the old programs will
     still work for now...

   * Added support for accelerators in menu definitions (this requires
     a new rep-gtk package) (Richard Kilgore). Added accelerators to
     many of the standard menu items

   * Added some (untested) support for Xinerama: `current-head',
     `current-head-dimensions', `current-head-offset'. Some placement
     modes should handle multiple heads sensibly, as should window
     maximization and edge snapping.

   * Added icons for GNOME control center applets (all icons by Tigert,
     except for the saw-blade logo by Glyph Lefkowitz)

   * New functions `map-window-properties' (me), `window-icon-image'
     (Bruce Miller)

   * Changed behaviour of `raise-group' and `lower-group' to preserve
     the stacking of the group, then change the selected window.  Added
     new command `raise-lower-group'

   * New option `raise-groups-on-focus'

   * Updated translations: de (Hubert Nachbaur), es (Iñaki García
     Etxebarria), gl (Jesus Bravo Alvarez), ko (Man-Yong Lee), tr
     (Fatih Demir)

   * Try to handle errors more gracefully when creating window frames

   * Better handling of errors in the control center applet

   * Fixed the `below-client' frame-part attribute

   * Fixed the disappearing items in the match-windows dialog

   * Fixed the non-beautified entries in the keymaps dialog

   * Fixed interactive placement mode (Timo Korvola)

   * Invoke audio playing program asynchronously, may avoid deadlocks

   * Fixed `workspace-menu' to add the focus-marking asterisk (John N S
     Gill)

   * Fixed menu-obscuring bug after auto-raising windows

   * Ensure that `WM_STATE' property is set each time a window is
     mapped, not just the first time

   * Fixed bug when discarding grab in click-to-focus mode, even though
     successive events may be in the window's keymap

   * Only focus windows when they're mapped when they're visible

   * Fixed click-to-focus problems when unmapping transient windows


0.26
====

   * Added plugin `selection', adds functions `x-selection-active-p'
     and `x-get-selection' for retrieving X selections (Mark Probst)

   * New functions `prompt-for-window', `prompt-for-workspace' and
     `select-workspace-interactively' (Dave Pearson)

   * `window-anim' module enabling asynchronous animations after window
     events. Currently only two animation styles `wireframe' and
     `solid', and they only animate window iconification

   * `audio-events' module; maps window manager events to audio samples
     (played using esd by default, but can be configured to use any
     program)

   * When running programs in terminals from the GNOME apps menu, use
     the value of `xterm-program' to decide which terminal program to
     use (James Antill)

   * Translation updates: gl (Jesus Bravo Alvarez), pl (Daniel Koc)

   * New command `toggle-window-iconified' (Jens-Ulrik Petersen)

   * New option `raise-windows-when-unshaded'

   * Customization options for tooltip colors (Erik Assum)

   * Removed default binding to `A-x'

   * Added support for librep-with-module-system (cvs version)

   * Note that `ko' and `zh' languages need FontSets

   * When sticking a window not on the current viewport, move it to the
     current viewport (Merlin)

   * Fixed bug (?) of placing over avoided windows in `random' mode;
     also increased `sp-avoided-windows-weight' by an order of
     magnitude (Dan Winship)

   * Fixed bug of maximizing a window changing its viewport

   * Fixed window cycling losing grab if originally focused window is
     unmapped

   * Fixed `get-cursor' to use the correct background color when
     creating cursors from vectors (Alexander Barinov)

   * Fixed `get-font' to set `descent' property correctly

   * Changed double-buffering semantics in `x' plugin, also only
     support this if configure finds the correct header files

   * Fixed `synthesize-event' to generate correct relative pointer
     positions

   * Don't focus on non-visible windows (crashes GNOME control center)

   * Fixed bug of using `cp' to install GNOME desktop files


0.25.2
======

   * If no user customization file when saving options, inherit from
     the custom-defaults file

   * Rewrote window stacking (fixes bugs, more efficient)

   * Added `input-focus' to theme-callable functions

   * When focused window is unmapped, don't try to focus non-visible
     windows

   * Fixed `display-window' when it's applied to iconified windows

   * New variables `fonts-are-fontsets' and `fontset-languages-re' to
     work around broken X servers

   * Update edges for snapping to when dragging windows across
     workspaces or viewports

   * When passing keymaps to customization system, filter out, then
     later restore, bindings that aren't symbols

   * Most commands to move/copy windows between workspaces can now be
     told whether to select the destination workspace or not

   * In GNOME hints, never place windows on workspaces that don't exist
     (from the pager's POV). (Rob Hodges)

   * Fixed `ws-move-window' to not remove the window if source and dest
     are the same (Rob Hodges)

   * Fixed `sp-prune-points' function (Dan Winship)

   * Fixed `move-viewport-to-window' to only flip viewports if window
     isn't already on the current viewport (Merlin)

   * Try to detect and handle system clock being rewound

   * Optional second arg to `x-raise-window'; added symmetrical
     function `x-lower-window'

   * Fixed unix-domain server code assuming atomic writes to sockets

   * Added double buffering support to `x' module

   * Fixed grabs during multi-key sequences; also, print the current
     prefix keys if idle during a multi-key sequence


0.25.1
======

   * Only force windows onto the visible screen if they didn't
     explicitly set their position

   * Redefine `/' in themes to be the `quotient' function (integer
     division), which is what they expect. The `divide' function can be
     used for real division

0.25
====

   * New plugin `x', a basic Xlib binding for creating and drawing in
     windows (Merlin, me)

   * Added a method of reading textual input from the user from
     completion. Provision for completing functions, variables,
     commands, files, directories, etc.... Also supports reading
     passwords. (Topi Paavola, me)

   * Re-enabled the following interactive codes: `a' (function), `C'
     (command), `D' (directory), `f' (existing file), `F' (file), `k'
     (event), `n' (number), `N' (prefix or number), `s' (string), `S'
     (symbol), `v' (variable)

   * Support prefix keys in bindings (binding an event to a keymap, or
     the name of a keymap, marks that event as a prefix key for the
     associated keymap)

   * New command `call-command-with-output-to-screen', prompts for and
     invokes a command, then displays any output it emitted (bound to
     `A-x' in default keymaps)

   * New variable `multi-click-delay', maximum time in milliseconds
     between button presses to count as `click2' or `click3' events
     (Martin Blais)

   * New option `edge-flip-only-when-moving' (Yaron M. Minsky)

   * New window cycling commands `cycle-prefix', `cycle-class' (Kai
     Großjohann); can now be bound to events with more than one
     modifier (Timo Korvola)

   * New command `uniquify-window-name'; new property `unique-name'.
     Forces the window to have a unique name

   * New commands `size-window-add-column',
     `size-window-subtract-column', `size-window-add-row',
     `size-window-subtract-row'

   * Window edge snapping now has three variants: `magnetism' (the old
     method), `attraction' and `resistance'. (Merlin, me)

   * New commands `grow-window-{left,right,up,down}' and
     `pack-window-{left,right,up,down}' (Kai Großjohann)

   * Support the `WM_COLORMAP_WINDOWS' protocol

   * New functions `synthesize-event', `font-ascent', `font-descent',
     `call-with-keyboard-grabbed'

   * New functions `define-placement-mode' and
     `define-focus-mode'--make defining these things easier. Focus
     modes are now settable for each window individually

   * Made the tree-organised customization groups work better with the
     GNOME control center. Add the sawmill capplet desktop entries to
     the GNOME programs menu (under Settings). Also, beautify the names
     displayed in the bindings widget

   * When applicable, load the GNOME applications menu when the wm is
     first idle, reduces the latency of displaying the first root menu

   * Translation updates: de (Hubert Nachbaur), es (Iñaki García
     Etxebarria), ja (Sato Satoru), sv (Andreas Persenius)

   * Fix bug of not noticing when the keyboard / pointer / modifier
     mappings change

   * Fixed `current-event-string' function

   * Better method of reconfiguring frames when they're resized (helps
     opaque resizing)

   * Added some kludges to try and break the intermittent lockups some
     people have seen

   * Made the auto-gravity option work a lot better (John N S Gill, me)

   * Fixed bug where unmapped windows were being included in the
     snapping calculation

   * Fixed bug when uniconifying windows and merging workspaces

   * Fixed bug of warp-cursor-to-window trying to put the pointer
     outside the screen boundaries (Merlin)

   * Fixed bug of losing keyboard grab when originally focused window
     is deleted during `x-cycle' command

   * Fixed bug of trying to focus unviewable parent windows when
     focused window is unmapped


0.24
====

   * Configure requests events are now passed to the hook
     `configure-request-hook'. The new configure handler respects
     window gravity when resizing

   * New option `configure-auto-gravity'. When enabled the window
     gravity is implied by the position of the center of the window.
     (e.g.  try placing the GNOME control center in the bottom right
     corner of the screen, then click on an item that causes it to
     resize)

   * Worked around the numerous reports of non-existent font errors
     that using `XCreateFontSet' causes--fall back to `XLoadQueryFont'
     if possible

   * There's now a library `custom-defaults' giving default
     customization options (only if the user has no `~/.sawmill/custom')

     Also, remove the need to call `custom-add-required' in
     `.sawmillrc', it's always done now

   * New window properties `focus-when-mapped', and `gravity'
     (overrides the hinted gravity value)

   * New placement modes `under-pointer' and `centered-on-parent'

   * New option `resize-edge-mode', replaces `resize-by-frame-class'
     and `resize-add-edges'>. Also allows twm-style resizing (Mark
     Probst, me)

   * Optionally display command documentation in tooltips; tooltips are
     now aligned into columns (if you use a monospaced font for them)

   * Variables `default-cursor', `synthetic-configure-mutex',
     `frame-draw-mutex', `frame-state-mutex' are now functions

   * New functions `x-keysym-name', `x-lookup-keysym', `decode-event',
     `encode-event'.

   * New option `move-resize-inhibit-configure'

   * Translation updates: es (Iñaki García Etxebarria), fr (Christian
     Gillot), gl (Jesus Bravo Alvarez), nl (Han-Wen Nienhuys), pt_PT
     (Rui Silva), sv (Andreas Persenius)

   * Fixed single-quoting in client readline (Matt Krai), copied
     bouncing parentheses hack

   * Removed `fp->win == 0' assertion, it should be harmless and was
     triggering for some people

   * Fixed bug of sending configure notify events to too many windows

   * Fixed off-by-one error in `ws-insert-workspace' (Kirk Saranathan)

   * Fixed maximization in single directions to work additively

   * Fixed bug of leaving tooltips displayed after the associated
     window has been deleted

   * Fixed bug of not removing `-clientId' option from restart
     parameters

   * Fixed bug of not translating customize group names


0.23
====

   * Customization groups are now organized as a tree structure, with
     groups able to contain subgroups

   * Define the list of features that will be presented to the user in
     `sawmill-defaults.jl', by calling `custom-add-required'. If you
     have a `.sawmillrc' you'll need to do this manually

   * New function `move-resize-window-to' doing a combined move/resize.
     New variable `synthetic-configure-mutex', when set holds off
     sending synthetic `ConfigureNotify' events to windows until it's
     unset (this is held while interactively moving or resizing windows)

   * New hook `after-add-window-hook'. Called with a single parameter,
     the window that's has just been adopted

   * New functions `x-kill-client', `delete-window-safely'.
     `send-client-message' now groks long integers (i.e. cons cells) in
     32-bit data (Timo Korvola)

   * `window-put', `window-get', `image-put', `image-get', `font-put',
     `font-get': use `equal' to compare keys, not `eq'

   * New module `error-handler', implements a simple alternative error
     handler (and allows the much-maligned beep to be turned off),
     requires rep 0.11+

   * Allow the pointer-warp position to be defined relative to the
     window (Kai Großjohann)

   * New module `shade-hover', unshades windows while the pointer is
     over them

   * Don't automatically warp to the new workspace when opening windows
     on a different workspace

   * Include iconified sticky windows in the `window-menu', shorten
     sticky entries as usual (James Antill)

   * Support the `TryExec' field in GNOME desktop files (Ian)

   * New commands: `raise-or-pass-through-click',
     `raise-and-pass-through-click-if-focused'

   * New module `move-cursor', various commands for moving the mouse
     pointer; these commands are bound to the cursor keys when moving
     or resizing windows

   * Translation updates: es (Iñaki García Etxebarria), fr (Fabien
     Ninoles), gl (Jesus Bravo Alvarez), ja (Satoru Sato), nl (Jan
     Nieuwenhuizen), tr (Fâtih Demir)

   * Fix bug of leaving window-name unset when `WM_NAME' is a null text
     property

   * Don't fail catastrophically if unable to open the default font

   * Fixed method of truncating maximized window dimensions

   * Fixed the match-window `skip-winlist' and `skip-tasklist'
     properties I'd stupidly broken

   * Fixed bug of trying to edge-flip sticky windows

   * Fixed the `move-workspace-forwards' and `move-workspace-backwards'
     commands

   * Fixed `uniconify-to-current-viewport' option

   * Fixed infinite-loop bug in `delete-empty-workspaces' command

   * Avoid generating empty sub-menus when reading GNOME menu tree


0.22
====

   * Window frame parts are now first-class lisp data objects, allowing
     a higher level of control by themes

     New or updated functions to access frame parts directly:

     `frame-part-get', `frame-part-put', `frame-part-window',
     `frame-part-x-window', `frame-part-position',
     `frame-part-dimensions', `frame-part-state', `map-frame-parts',
     `refresh-frame-part', `rebuild-frame-part'

     Other new functions: `refresh-window'

   * Updated `sawmill-themer' to emit code to tell the window manager
     that the theme is editable. The wm adds an `Edit Theme...' option
     to the Customize menu when appropriate

   * The `call-after-property-changed' function can now be given a list
     of properties to monitor (James Antill)

   * New function `call-after-state-changed', monitors a list of window
     states (i.e. things like iconified, shaded, ...) and calls a
     function when any of them change. The `window-state-change-hook'
     now has a second argument (apart from the window), the list of
     symbolic states that changed (James Antill)

   * Add support for `skip-winlist' and `skip-tasklist' to the window
     matcher when GNOME support is enabled (Ben Liblit)

   * Integrated patch supporting multi-byte languages from the Kondara
     MNU/Linux distribution (forwarded by Yukihiro Nakai)

   * Translation updates: de (Christoph Rauch), es (Iñaki García
     Etxebarria), gl (Jesus Bravo Alvarez), ja (Satoru Sato), tr (Fâtih
     Demir)

   * Use a combo box in the configurator to display the list of themes
     (it gets given scroll bars when too big for the screen)

   * Changed timestamp handling--attempt to detect and discard
     timestamps that arrive out of order

   * Added option controlling title justification to `mono' theme

   * Filter <Scroll_Lock> modifiers as well as the other lock modifiers
     (Matt Krai)

   * Fixed `display-message' function update background color, and
     gracefully handle invalid color specifiers (Matt Krai)

   * Reverted to grabbing events on the client window, not the frame,
     avoids some awkward-to-fix-correctly problems

   * Load i18n support _before_ other libraries; ensures that some
     static strings get translated

   * Fixed annoying flicker when cycling to an iconified window


0.21.1
======

   * Fixed problem causing spurious double-click events to be reported
     in click-to-focus mode

   * Fixed problem with binding `-Off' events in the `window-keymap'.
     (Matt Krai)

   * Don't try to grab non-existent keys (which actually grabs the
     entire keyboard)

   * Fixed some problems with reading unusually formatted GNOME menu
     entries


0.21
====

   * Frame pattern definitions (foreground, background, font) may now
     take alists as well as the old single object, or list of four
     objects.  Possible states are `inactive', `focused',
     `highlighted', `clicked', `inactive-highlighted',
     `inactive-clicked'. (Last two are new)

   * New program `sawmill-themer'. A GUI for creating simple themes
     (those without any parts defined by functions)

   * New module `gnome-int', loaded by `sawmill-defaults' if GNOME is
     around, sets up some GNOME'ish things

   * New command `toggle-single-window-mode'

   * Translation updates/additions: de (Christoph Rauch), es (Iñaki
     García Etxebarria), nl (Han-Wen Nienhuys)

   * Optional removal of tooltips after time period (Morgan Schweers)

   * `Any-RET' completes interactive move or resize

   * Work around Imlib's annoying image caching, `make-image' now
     _always_ returns a new image

   * Fixed gc bug when building window frames

   * Fixed X property handling on Alpha's (George Lebl)

   * Make `call-command' accept closures

   * Make `(cursor . nil)' work correctly in frame definitions

   * Grab on frame window, not client window (ICCCM compliant)

   * Fixed the "uniconify to current workspace" option

   * Added window-maximization predicates to the gaol


0.20
====

   * Rewrote workspace handling--windows can now appear on multiple
     workspaces, with each instance having different properties
     (position, size, whatever...)

     Create new window instances by using the `copy-to-next-workspace',
     `copy-to-previous-workspace', and `copy-to-workspace:N' commands.
     Merge instances by moving them to the same workspace, or using the
     `delete-window-instance' command

   * Added linear-viewport commands--indexing two-dimensional virtual
     workspace areas by one-dimensional values (adapted from code by
     Eric Kidd)

   * Rewrote tooltips; especially how they're removed (also, don't show
     null keymaps)

   * Added new match-window property `ungrouped'. Means to put the
     window in a group on its own

   * Translation additions/updates: da (Wandy Christiansen), en_GB
     (me), es (Iñaki García Etxebarria), fr (Christian Gillot), gl
     (Jesus Bravo Alvarez)

   * Fixed bug of not refocusing unshaded windows

   * Fixed bug of not notifying windows of their actual position after
     placing them

   * Fixed bug when grabbing Hyper-modified buttons

   * Fixed the focus-flickering when moving windows opaquely

   * Fixed the `commandp' function when applied to autoload stubs

   * Fixed typo in `gnome-logout' command (Jens Finke)

   * Fixed `raise-window-and-pass-through-click' command to pass
     <click2>, etc, events through to frame parts

   * Fixed infinite-regress bug when reading GNOME menu entries
     (`Type=directory', but actually a file)

   * Fixed bug when showing window-move position with snapped movement
     (adapted from merlin@merlin.org)

   * Fixed bug when matching null text properties


0.19
====

   * Added tooltips for window frames (disabled by default)

   * Added `Grab...' button to match-windows dialogue, grabs the value
     of an X property from a window

   * Support for creating cursors from bitmaps, and for changing the
     colors of cursors

   * Internationalized all strings in the configurator

   * New functions: `frame-part-get', `server-grabbed-p',
     `forget-button-press', `resize-window-with-hints',
     `window-in-workspace-p', `windows-share-workspace-p'

   * New window properties: `never-focus', `raise-on-focus'

   * New pseudo-property (for window matching): `size', in terms of the
     window's size hints

   * Message catalogue additions/updates: Galician (Jesus Bravo
     Alvarez); Danish (Birger Langkjer)

   * Don't ignore initial state property of windows

   * Option to control height of drawn bevels (Chris Hanson)

   * More logical method of drawing diagonal gradients (Chris Hanson)

   * Fixed typo when looking for i18n theme README files (Jesus Bravo
     Alvarez)

   * Fixed `popup-apps-menu' command (Gérard Milmeister)

   * Fixed `define-frame-class' when creating keymaps

   * Fixed conversion of old-style `(set ...)' custom types

   * Fixed `raise-window-and-pass-through-click' command to
     pass-through subsequent clicks

   * Fixed problems when grabbing/ungrabbing customized keymaps

   * Fixed screen corruption when doing wireframe moving and
     `move-resize-raise-window' is set

   * Hacked around window-order problem when sticky windows exist


0.18
====

   * General subsystem for matching windows to properties as they're
     created. Allows matching on one or more of the window's X
     properties (e.g. name, class, etc...), and then setting any number
     of window manager properties as a result. See the `Matched Windows'
     customize group

   * Removed all `auto-FOO-alist' and `BAR-windows-re' variables,
     they're obsoleted by the general match-windows mechanism

   * Respect window's size hints when maximizing (both to see if the
     window is maximizable, and to truncate the maximized dimensions to
     an integral number of rows and columns)

   * Show actual colors in the configurator, not just their names

   * Added a new directory to the theme search path:
     `PREFIX/share/sawmill/themes'. Use this for system-wide themes
     (don't use the version specific directory)

   * Included a new theme `mono'

   * Deprecated the `show-message' function, replaced by
     `display-message' with a better calling interface; also displays
     multi-line strings

   * Deprecated the menu "expand variables when first in list"
     behaviour. Instead expand variables when the list is dotted to
     them, as is done for functions

   * Support the `Hyper' modifier, prefix is `H-'

   * In the configurator, look for i18n'd theme README files (Yukihiro
     Nakai)

   * Added option to disable the ability to grab a second edge while
     resizing (`resize-add-edges')

   * Included Danish message catalogue (Kenneth Christiansen)

   * Renamed `fixed-position' property as `sticky-viewport', and
     `focus-proxy-click' as `focus-click-through'

   * When evaluating mouse events, look in the window that the pointer
     was in when the button was pressed, not where the pointer
     currently is

   * Fixed bug where focus gets totally lost after closing a Motif
     application that has grabbed the keyboard

   * Fixed (again) the problems when handling remapped windows; also
     should be more ICCCM-compliant

   * Fixed typos in one-dimensional maximisation (Gérard Milmeister)

   * Fixed the logic deciding when it's necessary to switch workspaces
     after merging an empty one

   * Fixed interactive placement showing the window when edge-flipping
     (but it still doesn't work properly, rubber band traces are left)

   * Removed flicker when focusing already-focused windows


0.17
====

   * First version to use lexically scoped librep. This enables themes
     to run in a "safe" environment, but all existing themes will need
     to be ported; other language changes include the use of a single
     symbol namespace, and scheme-like function call semantics

   * Support for internationalization of messages and run-time
     documentation; an en_GB catalogue is the only translation
     currently, so please send me .po files for your native languages!

     New option `--disable-nls' to disable i18n

   * New functions `call-after-property-changed' and
     `gtkrc-call-after-changed' to allow themes to receive these events
     (hooks are now off-limits to themes)

   * New command `raise-window-and-pass-through-click'; bind it to a
     mouse button in the `window-keymap' to get the "raise window on
     click" behaviour that seems popular

   * New commands to move windows incrementally: `slide-window-X' and
     `slide-group-X' for X one of: `left', `right', `up', `down'

   * New commands to control `ignored' property of windows (Julian
     Missig)

   * New commands to toggle GNOME skip-winlist and skip-tasklist
     properties of windows

   * Respect window gravity with program-specified window placement
     (<merlin@merlin.org>)

   * Fixed a memory leak in the `stacking-order' function

   * Fixed the `bevel-image' function (Scott Sams)

   * Never look in the focused window's keymap by default with mouse
     events

   * Hacked around the "need an X11 connection to compile" misfeature

   * Fixed bug in `gnome-menu' code when GNOME binaries aren't in the
     first $PATH item; also accept non-alphanumeric language codes

   * Fixed interactive window placement (again)

   * Rewrote obscure documentation for some custom options

   * Fixed bug when grabbing events with `AnyModifier' and a specific
     button


0.16
====

   * Support window groups, both as defined by applications, and
     defined by the user (either interactively through the window's
     menu, or via the `auto-group-alist' and `persistent-group-ids'
     variables).

     For most commands working on single windows, there's also one
     operating on the group that the current window is a member of.
     (With the notable exception currently of moving windows.) There's
     also options controlling whether (de)iconification operates on
     windows or groups

   * Improved GNOME menu support--merge duplicate sub-menus, scan PATH
     for `gnome-share-directory', also look in `/etc/X11/applnk' for
     menu entries

   * Option to control whether edge-flipping flips viewports or
     workspaces (`edge-flip-type')

   * New hook `after-framing-hook': called whenever a window's frame is
     changed or recalibrated

   * New window placement mode: `first-fit-or-interactive'

   * Variables specifying common cursor shapes: (`move-cursor-shape',
     `resize-cursor-shape', `select-window-cursor-shape')

   * Fix interactive placement

   * Fix problem of window losing focus when `cycle-windows' only finds
     a single window; also, abort immediately if there's no windows to
     cycle through at all

   * Fix how the `WM_NORMAL_HINTS' property is read after it's been
     updated

   * Fix `maximize-fill' functions to respect the
     `maximize-ignore-when-filling' option

   * Fix interactive move/resize aborting if keyboard is already grabbed

   * Ungrab the keyboard as well as the pointer before popping menus


0.15
====

   * Changed how themes are loaded from tar files--the tar file must
     now contain a directory with the same name as the theme; it's this
     directory that stores the data files

   * Allow viewport edge-flipping to be enabled by the customization
     system, also enable flipping while moving windows

   * Unified the method of marking which windows should be avoided when
     maximizing, and which windows should be avoided when using the
     fitted placement methods. Set the `avoid' property instead of the
     `maximize-avoid' property; new functions `window-avoided-p' and
     `avoided-windows'; new regexp `avoided-windows-re'

   * New command `delete-empty-workspaces'

   * Default theme is now `microGUI'

   * When resizing only one edge of a window, moving the pointer past
     one of the perpendicular edges grabs that edge also

   * Only the first three buttons focus a window in click-to-focus mode

   * Changed behaviour of `window-id' and `window-frame-dimensions'
     functions. Replaced `query-last-pointer' function by
     `query-button-press-pointer'

   * New hooks: `while-moving-hook', `while-resizing-hook'

   * Notice when `WM_TRANSIENT_FOR' property changes

   * More bug fixes to the maximization code, mainly for efficiency;
     also make first-fit placement work from top-left again

   * Fix bug when matching events with `Any' modifier as well as other
     modifiers

   * Fix bug in `window-outside-viewport-p' (Andreas Degert)

   * Fix bug in `sawmill-client --' with long inputs

   * Fix bug when matching windows with session data--`SM_CLIENT_ID' or
     `WM_COMMAND' _has_ to match

   * Fix bugs when passive grabbing non-button-press pointer events


0.14
====

   * Rewrote window-maximization, many new options

   * New option `resize-by-frame-class', when enabled (the default),
     the resized window edges are chosen to match the class of the
     clicked frame part (i.e. matching the cursor shape)

   * Load GNOME support code automatically if it looks like GNOME is
     being used

   * Create unix-domain sockets in `/tmp'

   * New hooks: `window-moved-hook', `window-resized-hook',
     `after-initialization-hook', `shape-notify-hook'.

   * Improved how menus are displayed; the window-ops menu is shown by
     ButtonPress not ButtonRelease events

   * Refocus most-recently-focused window when switching viewport

   * Added `centered' placement style

   * Added symbol-completion to readline-based client

   * Fix bug of not noticing WM_NORMAL_HINTS property changes; follow
     the window's maximum size hints

   * Fix bug of not reframing windows when they change from unshaped to
     shaped, or vice versa


0.13
====

   * New option to only highlight frame parts when their window is
     focused (`highlight-when-unfocused')

   * Typing `ESC' while moving/resizing a window cancels the operation,
     restoring the original geometry

   * New session management hook `sm-after-restore-hook'

   * New function `set-frame-part-value'--makes customizing the
     `frame-part-classes' variables easier

   * Support for loading themes from tar files; needs librep 0.7

   * Fix bug when allocating colors (choosing an incorrect cached color)

   * Fix image tiling in frame part backgrounds

   * Handle shifted keysyms when passive grabbing

   * Fix another race condition when active grabbing

   * Fix `_WIN_CLIENT_LIST' property not being set properly (both
     missing windows immediately after they're adopted, and of
     intentionally skipping ignored windows)

   * Fix some problems with viewports when exiting/restarting

   * Fix broken stacking of windows after they're mapped

   * Prevent smart window placement blowing up when large numbers of
     windows are open/opened (throttle back to random placement when the
     event queue is too large, as well as trying to prune the search
     space)


0.12
====

   * Remember most recently focused windows on each workspace, activate
     that window after changing workspaces; also, try to preserve focus
     when moving windows between workspaces

   * Option to disable auto-raise while cycling through windows
     (`cycle-disable-auto-raise'); option to restrict cycling to the
     current viewport (`cycle-all-viewports')

   * Option `lock-first-workspace' is now enabled by default, and
     prevents both the first and last interesting workspaces being moved
     inwards

   * Added readline support to the client program, pass
     `--with-readline' option to configure (from Christopher P Goller
     <goller@eng.utah.edu>)

   * Added shaped-transient frame to microGUI theme

   * New frame part attribute `below-client'

   * Release passive grabs when unadopting windows

   * When no window has the focus, the `root-window-keymap' is searched
     for key-press events

   * Fix bug when binding to the unix-domain socket

   * Fix focus sometimes being lost when the focused window is destroyed

   * Fix bug when reading GNOME menu entries without `Type' fields

   * Fix bug when removing title or border of `shaped-transient' window
     types (make the window completely unframed)

   * Fix bug when shading a transient window with `decorate-transients'
     enabled

   * Fix some bugs when placing windows that are almost as big or
     bigger than the screen

   * Fix some race-conditions between wm-generated and client-generated
     map/unmap/reparent events

   * Fix infamous "jerky pointer" bug, this will also make overlapping
     shaped frame-parts display correctly

   * Fix bug where `cycle-windows' could leave a window originally
     under the pointer that's unfocused, drawn as though it is focused


0.11
====

   * New option `lock-first-workspace', prevent the first workspace
     from being deleted when it's empty

   * New option `ignore-window-input-hint', to always give windows the
     focus, whether they say they will accept it or not

   * New options when cycling windows: `cycle-warp-pointer' and
     `cycle-focus-windows'

   * Restore the old method of setting the focus, should fix bug of
     losing focus totally when switching to a new workspace


0.10
====

   * Implemented virtual workspaces, bind to the `move-viewport-X' and
     `move-window-X' commands (for X being `left', `right', `up', or
     `down')

   * Added a new theme: `microGUI' by Ryan Lovett
     <ryan@ocf.berkeley.edu>, based on the QNX Photon screenshots

   * Added a `Grab key' button in the bindings widget, replaces the
     current binding with the next pressed key

   * Lisp module to load the GNOME menus and use them to replace the
     applications menu. Add `(require 'gnome-menu)' to your
     `~/.sawmillrc' file to load it

   * Network server is disabled by default (since it can provide a
     security hole if X access control is disabled); re-enabled the old
     unix domain socket code (see the FAQ for more details)

   * Only give the input focus to windows that actually want it

   * New option to keep transient windows above their parents
     (`transients-above-parents')

   * New option to control how the workspace boundary is handled when
     moving windows between workspaces (`workspace-send-boundary-mode')

   * New commands `send-to-workspace:X' for X from 1 to 9

   * While windows are hidden or shaded, unmap the client (for ICCCM
     compliance)

   * Slightly different method of handling destroyed clients, hopefully
     results in fewer annoying error messages

   * Support X installations without X11R6 session management (by not
     doing any session management)

   * Don't ask the session manager to save our environment

   * Fix bug where a window is destroyed/unmapped while it's being
     resized or moved

   * Fix bug where window can still be auto-raised even if it's been
     defocused

   * Fix problems when `--prefix' option has a trailing slash

   * Now handles client windows being reparented by a third party (i.e.
     swallowing apps)


0.9
===

   * The first-fit and best-fit algorithms are now much more
     intelligent, e.g. instead of falling back to random placement when
     a window can't be placed without overlapping an existing window,
     they will attempt to minimize this degree of overlapping

   * The `foreground' property of each frame part may now be an image
     instead of a piece of text

   * New theme `smaker', uses the foreground images capability to do a
     somewhat WindowMaker-like theme (with the absolute-e images). This
     theme is extensively customizable--all images, colors, dimensions,
     etc...

   * Use Imlib's fuzzy color matching for all color allocation; this
     should help on `PseudoColor' visuals

   * Added an `xterm' command to launch an xterm

   * Improved the bindings customization widget layout; added a `Copy'
     button to insert a copy of the current binding

   * Added `next-workspace-row' and `previous-workspace-row' commands.
     Together with the `workspace-columns' variable these mimic a 2d
     desktop

   * Removed the `cycle-through-workspaces' option, there's now
     `workspace-boundary-mode'--one of `stop', `wrap-around' or
     `keep-going'

   * Added option to include ignored windows when edge snapping
     (`move-snap-ignored-windows')

   * Fix race condition between startup of sawmill and gmc; sawmill now
     has earlier priority

   * Fix seg fault when running out of color cells while generating a
     window frame

   * Fix bug where the window-workspace mapping wasn't reloaded from
     saved sessions

   * Fix cancel/revert problems in bindings widget

   * Fix problems binding to shifted keys when using the XKEYBOARD
     extension and XFree86

   * Be ICCCM compliant when a client requests to be moved

   * Fix crash when tiling small images into large images

   * Fix bug where windows could be snapped totally off-screen

   * Fix bug when windows change their `override_redirect' attribute
     while unmapped

   * Fix bug associated with WordPerfect's menu window


0.8
===

   * First attempt at best-fit window placement (doesn't really work
     properly yet...)

   * Added a customization option to focus windows when they're
     un-iconified (`focus-windows-on-uniconify')

   * Fix bug in click-to-focus mode where the click is only passed
     through to the client window, not to any local bindings of the wm

   * Don't leave windows unframed if there's an error in the user's
     startup files

   * Fix bug in `preallocated-workspaces' option

   * Don't place windows off-screen in first-fit mode


0.7
===

   * Added stack-based window cycling, bound to `M-TAB' by default.
     Hold <Meta>, keep pressing <TAB> until the correct window is
     reached, then let go of <Meta>.

   * Added first-fit window placement (a.k.a smart-placement)

   * Completed first stage of workspace rewrite--shouldn't go ballistic
     when windows are removed anymore

   * Added `override-frame-part-classes' variable--allows all frame
     properties to be overridden on a per-class basis

   * Click-to-focus now accepts any button and any modifiers

   * Don't snap to gmc icons or panels

   * Added an `auto-window-type-alist' variable mapping window names to
     border types

   * New variables `eval-modifier-events' and `eval-key-release-events'
     to allow catching these types of keyboard events, disabled by
     default

   * Added functions for actively grabbing the keyboard

   * Removed the long names of the keyboard modifiers, only the single
     character modifiers are left

   * If no alt modifier, set it to the same as meta; new variables
     `alt-keysyms' and `meta-keysyms' describe the virtual modifier
     assignments

   * Fix bug when handling shaped frame parts--it was possible to go
     into a long enter-, leave-notify loop when the old shape was
     cleared

   * Fix bug where opaque resizing with snap-to-edges on moved the
     window as well as resizing it

   * Fix bug when raising the only managed window

   * Fix bug where very small client windows got weirdly shaped frames


0.6
===

   * Define the standard "classes" of frame parts (i.e. things like
     close button, title, left border, etc...) then allow the state of
     members of these classes to be set in one place (the
     `frame-part-classes' variable). This should ensure that different
     themes have the same feel (but a feel that may be customized by the
     user)

   * Allow frame parts to be removed if possible (if they have the
     `removable' property). Nothing makes use of this yet

   * Added window-shading, double-click button1 on the title bar

   * Created a sawmill capplet for the GNOME control center. Use the
     `--enable-capplet' configure option to build it

   * First attempt at a technical manual (very quickly written, so
     probably some inaccuracies)

   * In the `gtk' theme, draw bevels on window decorations

   * Use spin-buttons in the configurator to enter numbers

   * Add option `focus-proxy-click' controlling whether to pass the
     focus-inducing button-press event to the underlying window (in
     click-to-focus mode)

   * Changed the bindings in window borders, it's now the more usual
     button1 to resize, button2 to move

   * When clicking and dragging windows, ensure that the clicked frame
     part stays clicked until the button is released

   * If in click-to-focus mode, and there's no parent window to focus
     when the focused window is closed, focus the topmost window (not
     the window under the pointer as in the other focus modes)

   * Changing window frames is _much_ less ugly, no flicker at all!

   * Try to optimise window restacking some more

   * Sped up opaque window moving when the position display is enabled

   * Preserve iconified state across restarts

   * Optimise updating the shape of an unframed window (this stops gmc
     icons flashing annoyingly)

   * Fix bugs in click-to-focus mode where some windows were
     un-focusable

   * Fix bug where cycling through windows in click-to-focus mode
     didn't focus the activated window

   * Fix bug where comparing sawmill lisp objects caused a crash

   * Fix bug where initiating a resize in the middle of the window
     didn't allow any of the edges to be moved

   * Fix bug where changing the "decorate transients" option didn't
     alter any existing transient windows

   * Fix bug where iconifying a sticky or ignored window gave no way of
     reclaiming it--these windows now appear at the end of the window
     menu


0.5
===

   * Now does session management. The scheme is extensible, arbitrary
     Lisp modules can save and restore window state due to their own
     functionality (using the `sm-window-save-functions' and
     `sm-restore-window-hook' hooks). See `lisp/workspace.jl' for an
     example

   * Displays window position or dimensions whilst interactively moving
     or resizing a window (`move-show-position',
     `resize-show-dimensions')

   * Mechanism for setting frame styles on a per-window basis (this was
     always possible, just not easy). The `auto-frame-style-alist'
     variable associates window name regular expressions with frame
     styles.  Also, the `window-ops-menu' has a new submenu with all
     possible styles

   * New option `preallocated-workspaces', the number of workspaces to
     create at startup

   * Window-workspace mapping is preserved through restart (as long as
     the GNOME hints are enabled)

   * Theme directories may contain a short `README' file that will be
     displayed in the configuration tool

   * Changed the custom file to `~/.sawmill/custom' instead of
     `~/.sawmill-custom'. The old file will be moved to the new
     location if it exists

   * Install `sawmill-menu' under `libexec' since it shouldn't be run
     manually

   * Option in `gradient' theme to create full-sized gradient images,
     trading memory for quality

   * Workaround the flicker when raising windows

   * Changed most of the `menus' and `custom' customize options into
     normal variables (they're not particularly intuitive)


0.4
===

   * Frame parts can now be highlighted when the mouse is over them,
     also they "un-click" and "re-click" as the pointer leaves and
     re-enters their window. ButtonRelease bindings are only activated
     when the mouse is in the window at the time

   * Frame part backgrounds can now be rendered on-the-fly using the
     new `renderer' property in frame definitions. This property is a
     function called with args `(IMAGE STATE)'; it should draw a
     background into IMAGE for the specified state (`nil', `focused',
     `highlighted' or `clicked')

   * New theme `gtk'. This reads the default GTK style and uses the
     associated colors and pixmaps to decorate windows. It doesn't try
     to handle engine-based themes. It should automatically detect when
     the default style changes (if changed by the GNOME control
     center). Do `sawmill-client -c gtk-reload-style' in the shell to
     reload the style manually

   * Functions for drawing color gradients and bevels into images. The
     new `gradient' theme uses these and on-the-fly rendering to do
     `afterstep'-like window titles

   * Configurator changes: use a paned widget to separate the list of
     groups from the settings (stops their relative sizes changing),
     allow each group to be customized separately, either through a new
     set of root-submenus or the commands `customize:GROUP' for each
     GROUP.

   * Changed the way that "themes" are organised, each theme now gets
     its own directory, which must include a `theme.jl' or `theme.jlc'
     script to initialise a frame-style of the same name as the
     directory. While this script is being evaluated the image path is
     set so that the theme can load any images stored in its directory.

     Also created the variable `theme-load-path' containing the list of
     directories searched when trying to load a theme. By default it
     contains two directories: `~/.sawmill/themes/' and
     `PREFIX/share/sawmill/VERSION/themes'.

   * Resizing now chooses the direction to resize the window in by the
     initial position of the pointer in relation to the window. The
     window is divided into a 3x3 grid, the pointer must be in one of
     the outer rectangles to resize in that direction

   * New commands `select-workspace:X' for X between 1 and 9

   * Support multiple depths, or layers, of windows

   * It's now possible to move the current workspace up or down the
     list of all workspaces

   * New option `-c COMMAND' to `sawmill-client'; invokes the named
     interactive function

   * When an app asks for no title and no border, give it what it
     wants--use the new `unframed' window type

   * The maximize button works

   * Option to control placement of transient windows
     (`place-transient-mode')

   * Changing the frame style preserves the original window stacking
     order

   * Added documentation strings for most built-in functions

   * Fix bug of evaluating both KeyPress _and_ KeyRelease events

   * Fix bug of making the shape mask of unshaped client windows too big

   * Fix bug where already-handled BadWindow errors were being reported

   * Fix bug where the `window-ops-menu' could be displayed from one
     window but then affect a different window

   * Fix bug where click-to-focus doesn't work for new windows

   * Fix bug where deleting the last workspace selected the first, not
     the new last workspace

   * Fix bug where changing a colormap when no window is focused causes
     a segfault

   * Fix bug where iconifying a window may leave it in the clicked
     state after it's uniconified

   * Fix Caps_Lock and Num_Lock modifiers interfering with bindings

   * Fix accessing X properties on 64-bit architectures

   * Fix bug where pointer may be left grabbed after moving a window


0.3a
====

   * Support the maximized GNOME window states

   * Where available, show documentation strings of commands in the
     configurator

   * Improve the method of handling clicks in frame-parts

   * Fix asynchronous client-server protocol

   * Fix interactive window moving/resizing (don't leave traces of the
     rubber-band, stop the window initially "jumping" to the pointer)


0.3
===

   * Implemented window maximization

   * Added support for snapping to window edges when interactively
     moving windows (`move-snap-edges' and `move-snap-epsilon')

   * First attempt at handling a subset of the Motif and OpenLook
     window hints

   * Removed the `sloppy-focus' variable, it's replaced by
     `focus-mode'. This can currently be one of `enter-exit' (normal
     focus follows pointer), `enter-only' ("sloppy" focus) or `click'
     (click to focus)

   * When resolving pointer events, scan the `keymap' property of the
     window under the pointer, not the focused window (as with keypress
     events)

   * The `sawmill-client' program can now communicate inter-host, since
     it uses X properties not raw sockets

   * New hook `before-exit-hook', called immediately before shutting
     down

   * Rewrote the GNOME support as a Lisp module

   * Placing windows interactively now works

   * Fixed the bug on Solaris where deleting windows could cause a
     segmentation fault


0.2
===

   * Added a user-customization system, inspired by Emacs' customize
     facility. Invoke this through the `sawmill-ui' program, or from
     the `Customize...' entry in the main menu. All changes are stored
     in the Lisp script `~/.sawmill-custom'

   * Selected windows may now be raised (`raise-selected-windows')

   * It's possible to prevent the mouse pointer being warped to
     selected windows (`warp-to-selected-windows')

   * The `brushed-metal' and `simple' themes now define all four
     standard frame types

   * Frame themes are now stored in a separate directory
     (`PREFIX/share/sawmill/VERSION/lisp/themes') so that the list of
     all available themes can be made automatically

   * The frame colors of the `simple' frame style can now be customized
     (`simple-normal-color' and `simple-active-color')

   * The `sawmill-defaults.jl' script enables GNOME compliance
     unconditionally (since it has no ill-effects even if GNOME isn't
     being used)

   * Transient windows can be given the same frames as normal windows
     (`decorate-transients')

   * Newly-displayed transient windows can be automatically given the
     focus if their parent window is focused (`transients-get-focus')

   * Any newly-displayed windows can be automatically given the input
     focus (`focus-windows-when-mapped')

   * The `foreground', `background' and `font' attributes of each frame
     part may now refer to a function

   * Fixed the window-move bug whereby the first motion event was
     discarded

   * Fixed the bug where windows may be placed partially off the root
     window, even if they needn't be

   * Fixed the shaped frame parts bug (they didn't work)

   * Miscellaneous other bug-fixes


0.1
===

First proper release

