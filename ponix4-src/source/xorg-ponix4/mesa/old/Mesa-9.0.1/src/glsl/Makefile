# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/glsl/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright Â© 2012 Jon TURNEY
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# builtin_compiler is built before libglsl to generate builtin_function.cpp for libglsl.
# For this to work, a dummy version of builtin_function.cpp, builtin_stubs.cpp, is used.

# shared source lists for Makefile, SConscript, and Android.mk



pkgdatadir = $(datadir)/mesa
pkgincludedir = $(includedir)/mesa
pkglibdir = $(libdir)/mesa
pkglibexecdir = $(libexecdir)/mesa
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.sources TODO glsl_lexer.cc
noinst_PROGRAMS = glsl_compiler$(EXEEXT) glsl_test$(EXEEXT) \
	builtin_compiler$(EXEEXT)
subdir = src/glsl
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libglsl_la_DEPENDENCIES = libglslcommon.la
am_libglsl_la_OBJECTS = builtin_function.lo
libglsl_la_OBJECTS = $(am_libglsl_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libglsl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libglsl_la_LDFLAGS) $(LDFLAGS) -o $@
libglslcommon_la_DEPENDENCIES = glcpp/libglcpp.la
am__objects_1 = strtod.lo ralloc.lo
am__objects_2 = ast_expr.lo ast_function.lo ast_to_hir.lo ast_type.lo \
	builtin_variables.lo glsl_parser_extras.lo glsl_types.lo \
	glsl_symbol_table.lo hir_field_selection.lo ir_basic_block.lo \
	ir_builder.lo ir_clone.lo ir_constant_expression.lo ir.lo \
	ir_expression_flattening.lo ir_function_can_inline.lo \
	ir_function_detect_recursion.lo ir_function.lo \
	ir_hierarchical_visitor.lo ir_hv_accept.lo \
	ir_import_prototypes.lo ir_print_visitor.lo ir_reader.lo \
	ir_rvalue_visitor.lo ir_set_program_inouts.lo ir_validate.lo \
	ir_variable_refcount.lo linker.lo link_functions.lo \
	link_uniforms.lo link_uniform_initializers.lo loop_analysis.lo \
	loop_controls.lo loop_unroll.lo lower_clip_distance.lo \
	lower_discard.lo lower_discard_flow.lo \
	lower_if_to_cond_assign.lo lower_instructions.lo \
	lower_jumps.lo lower_mat_op_to_vec.lo lower_noise.lo \
	lower_texture_projection.lo \
	lower_variable_index_to_cond_assign.lo \
	lower_vec_index_to_cond_assign.lo \
	lower_vec_index_to_swizzle.lo lower_vector.lo \
	lower_output_reads.lo lower_ubo_reference.lo opt_algebraic.lo \
	opt_array_splitting.lo opt_constant_folding.lo \
	opt_constant_propagation.lo opt_constant_variable.lo \
	opt_copy_propagation.lo opt_copy_propagation_elements.lo \
	opt_dead_code.lo opt_dead_code_local.lo opt_dead_functions.lo \
	opt_function_inlining.lo opt_if_simplification.lo \
	opt_noop_swizzle.lo opt_redundant_jumps.lo \
	opt_structure_splitting.lo opt_swizzle_swizzle.lo \
	opt_tree_grafting.lo s_expression.lo
am_libglslcommon_la_OBJECTS = glsl_lexer.lo glsl_parser.lo \
	$(am__objects_1) $(am__objects_2)
libglslcommon_la_OBJECTS = $(am_libglslcommon_la_OBJECTS)
PROGRAMS = $(noinst_PROGRAMS)
am__objects_3 = standalone_scaffolding.$(OBJEXT) main.$(OBJEXT)
am__objects_4 = hash_table.$(OBJEXT) symbol_table.$(OBJEXT) \
	$(am__objects_3)
am_builtin_compiler_OBJECTS = $(am__objects_4) builtin_stubs.$(OBJEXT)
builtin_compiler_OBJECTS = $(am_builtin_compiler_OBJECTS)
builtin_compiler_DEPENDENCIES = libglslcommon.la
am_glsl_compiler_OBJECTS = $(am__objects_4)
glsl_compiler_OBJECTS = $(am_glsl_compiler_OBJECTS)
glsl_compiler_DEPENDENCIES = libglsl.la
am_glsl_test_OBJECTS = hash_table.$(OBJEXT) symbol_table.$(OBJEXT) \
	standalone_scaffolding.$(OBJEXT) test.$(OBJEXT) \
	test_optpass.$(OBJEXT)
glsl_test_OBJECTS = $(am_glsl_test_OBJECTS)
glsl_test_DEPENDENCIES = libglsl.la
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/bin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(LFLAGS) $(AM_LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX   " $@;
YLWRAP = $(top_srcdir)/bin/ylwrap
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libglsl_la_SOURCES) $(libglslcommon_la_SOURCES) \
	$(builtin_compiler_SOURCES) $(glsl_compiler_SOURCES) \
	$(glsl_test_SOURCES)
DIST_SOURCES = $(libglsl_la_SOURCES) $(libglslcommon_la_SOURCES) \
	$(builtin_compiler_SOURCES) $(glsl_compiler_SOURCES) \
	$(glsl_test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = aclocal -I /usr/xorg/share/aclocal
AMTAR = ${SHELL} /source/xorg-ponix4/mesa/Mesa-9.0.1/bin/missing --run tar
AM_DEFAULT_VERBOSITY = 0
API_DEFINES =  -DFEATURE_GL=1
AR = ar
AUTOCONF = ${SHELL} /source/xorg-ponix4/mesa/Mesa-9.0.1/bin/missing --run autoconf
AUTOHEADER = ${SHELL} /source/xorg-ponix4/mesa/Mesa-9.0.1/bin/missing --run autoheader
AUTOMAKE = ${SHELL} /source/xorg-ponix4/mesa/Mesa-9.0.1/bin/missing --run automake-1.11
AWK = gawk
CC = i486-TSOL-linux-gnu-gcc
CCAS = i486-TSOL-linux-gnu-gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -Os
CCDEPMODE = depmode=gcc3
CFLAGS = -Os -Wall -std=c99 -Werror=implicit-function-declaration -Werror=missing-prototypes -fno-strict-aliasing -fno-builtin-memcmp 
CLANG_RESOURCE_DIR = 
CPP = i486-TSOL-linux-gnu-gcc -E
CPPFLAGS = 
CXX = i486-TSOL-linux-gnu-g++
CXXCPP = i486-TSOL-linux-gnu-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Os -Wall -fno-strict-aliasing -fno-builtin-memcmp 
CYGPATH_W = echo
DEFINES =  -D_GNU_SOURCE -DHAVE_PTHREAD -DUSE_X86_ASM -DUSE_MMX_ASM -DUSE_3DNOW_ASM -DUSE_SSE_ASM -DHAVE_DLOPEN -DHAVE_POSIX_MEMALIGN -DIN_DRI_DRIVER -DUSE_XCB -DGLX_INDIRECT_RENDERING -DGLX_DIRECT_RENDERING -DUSE_EXTERNAL_DXTN_LIB=1 -DIN_DRI_DRIVER -DHAVE_ALIAS
DEFS = -DPACKAGE_NAME=\"Mesa\" -DPACKAGE_TARNAME=\"mesa\" -DPACKAGE_VERSION=\"9.0.1\" -DPACKAGE_STRING=\"Mesa\ 9.0.1\" -DPACKAGE_BUGREPORT=\"https://bugs.freedesktop.org/enter_bug.cgi\?product=Mesa\" -DPACKAGE_URL=\"\" -DPACKAGE=\"mesa\" -DVERSION=\"9.0.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DYYTEXT_POINTER=1 -DHAVE_PTHREAD=1 -DHAVE_LIBEXPAT=1
DEPDIR = .deps
DLOPEN_LIBS = -ldl
DRI2PROTO_CFLAGS = -I/usr/xorg/include  
DRI2PROTO_LIBS =  
DRIGL_CFLAGS = -I/usr/xorg/include  
DRIGL_LIBS = -L/usr/xorg/lib -lXext -lXdamage -lXfixes -lX11-xcb -lX11 -lxcb-glx -lxcb -lXxf86vm  
DRIVER_DIRS =  dri
DRI_DIRS = i915 i965 nouveau r200 radeon swrast
DRI_DRIVER_INSTALL_DIR = ${libdir}/dri
DRI_DRIVER_SEARCH_DIR = ${DRI_DRIVER_INSTALL_DIR}
DRI_LIB_DEPS = $(top_builddir)/src/mesa/libdricore/libdricore9.0.1.la  -L/usr/xorg/lib -ldrm   -lexpat -lm -lpthread -ldl
DRI_PC_REQ_PRIV = libdrm >= 2.4.24
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_CLIENT_APIS =  $(GL_LIB)
EGL_DRIVER_INSTALL_DIR = ${libdir}/egl
EGL_LIB_DEPS = 
EGL_LIB_GLOB = lib$(EGL_LIB).*so*
EGL_LIB_NAME = lib$(EGL_LIB).so
EGL_NATIVE_PLATFORM = _EGL_INVALID_PLATFORM
EGL_PLATFORMS = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXPAT_INCLUDES = 
FGREP = /usr/bin/grep -F
GALLIUM_DIRS = auxiliary drivers state_trackers
GALLIUM_DRIVERS_DIRS = galahad identity noop rbug trace 
GALLIUM_DRI_LIB_DEPS =   -L/usr/xorg/lib -ldrm   -lexpat -lm -lpthread -ldl
GALLIUM_MAKE_DIRS = rbug trace 
GALLIUM_PIPE_LOADER_DEFINES = 
GALLIUM_PIPE_LOADER_LIBS = 
GALLIUM_PIPE_LOADER_XCB_CFLAGS = 
GALLIUM_PIPE_LOADER_XCB_LIBS = 
GALLIUM_STATE_TRACKERS_DIRS = dri 
GALLIUM_TARGET_DIRS =  
GALLIUM_WINSYS_DIRS = sw sw/dri 
GBM_PC_LIB_PRIV = -ldl
GBM_PC_REQ_PRIV = libudev
GLAPI_LIB_GLOB = lib$(GLAPI_LIB).*so*
GLAPI_LIB_NAME = lib$(GLAPI_LIB).so
GLESv1_CM_LIB_DEPS = -L/usr/xorg/lib -ldrm   -lm -lpthread -ldl
GLESv1_CM_LIB_GLOB = lib$(GLESv1_CM_LIB).*so*
GLESv1_CM_LIB_NAME = lib$(GLESv1_CM_LIB).so
GLESv1_CM_PC_LIB_PRIV = -lm -lpthread -ldl
GLESv2_LIB_DEPS = -L/usr/xorg/lib -ldrm   -lm -lpthread -ldl
GLESv2_LIB_GLOB = lib$(GLESv2_LIB).*so*
GLESv2_LIB_NAME = lib$(GLESv2_LIB).so
GLESv2_PC_LIB_PRIV = -lm -lpthread -ldl
GLPROTO_CFLAGS = -I/usr/xorg/include  
GLPROTO_LIBS =  
GLX_TLS = no
GL_LIB = GL
GL_LIB_DEPS = -L/usr/xorg/lib -lXext -lXdamage -lXfixes -lX11-xcb -lX11 -lxcb-glx -lxcb -lXxf86vm   -L/usr/xorg/lib -ldrm   -lm -lpthread -ldl
GL_LIB_GLOB = lib$(GL_LIB).*so*
GL_LIB_NAME = lib$(GL_LIB).so
GL_PC_CFLAGS = 
GL_PC_LIB_PRIV = -lm -lpthread -ldl
GL_PC_REQ_PRIV =  libdrm >= 2.4.24 x11 xext xdamage xfixes x11-xcb xcb-glx >= 1.8.1 xxf86vm
GREP = /usr/bin/grep
HAVE_XF86VIDMODE = yes
INDENT = cat
INDENT_FLAGS = 
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTEL_CFLAGS = -I/usr/xorg/include -I/usr/xorg/include/libdrm  
INTEL_LIBS = -L/usr/xorg/lib -ldrm_intel -ldrm  
LD = i486-TSOL-linux-gnu-ld
LDFLAGS = -static-libgcc
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBCLC_PATH = 
LIBDRM_CFLAGS = -I/usr/xorg/include -I/usr/xorg/include/libdrm  
LIBDRM_LIBS = -L/usr/xorg/lib -ldrm  
LIBDRM_XORG_CFLAGS = 
LIBDRM_XORG_LIBS = 
LIBKMS_XORG_CFLAGS = 
LIBKMS_XORG_LIBS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUDEV_CFLAGS = 
LIBUDEV_LIBS = 
LIBVA_CFLAGS = 
LIBVA_LIBS = 
LIB_DIR = lib
LIPO = 
LLVM_BINDIR = 
LLVM_CFLAGS = 
LLVM_CONFIG = 
LLVM_CPPFLAGS = 
LLVM_CXXFLAGS = 
LLVM_INCLUDEDIR = 
LLVM_LDFLAGS = 
LLVM_LIBDIR = 
LLVM_LIBS = 
LLVM_VERSION = 
LN_S = ln -s
LTLIBOBJS = 
MAKE = make
MAKEINFO = ${SHELL} /source/xorg-ponix4/mesa/Mesa-9.0.1/bin/missing --run makeinfo
MESA_ASM_FILES = $(X86_FILES)
MESA_LLVM = 0
MKDEP = /usr/xorg/bin/makedepend
MKDEP_OPTIONS = -fdepend -I/toolchain/lib/gcc/i486-TSOL-linux-gnu/4.6.3/include -I/toolchain/lib/gcc/i486-TSOL-linux-gnu/4.6.3/include-fixed
MKDIR_P = /bin/mkdir -p
MKLIB_OPTIONS = 
NM = /toolchain/i486-TSOL-linux-gnu/bin//nm -B
NMEDIT = 
NOUVEAU_CFLAGS = -I/usr/xorg/include -I/usr/xorg/include/libdrm  
NOUVEAU_LIBS = -L/usr/xorg/lib -ldrm_nouveau  
OBJDUMP = objdump
OBJEXT = o
OPENCL_LIB_INSTALL_DIR = ${libdir}/opencl
OSMESA_LIB = OSMesa
OSMESA_LIB_DEPS = 
OSMESA_LIB_NAME = lib$(OSMESA_LIB).so
OSMESA_MESA_DEPS = 
OSMESA_PC_LIB_PRIV = 
OSMESA_PC_REQ = 
OSMESA_VERSION = 8
OTOOL = 
OTOOL64 = 
PACKAGE = mesa
PACKAGE_BUGREPORT = https://bugs.freedesktop.org/enter_bug.cgi?product=Mesa
PACKAGE_NAME = Mesa
PACKAGE_STRING = Mesa 9.0.1
PACKAGE_TARNAME = mesa
PACKAGE_URL = 
PACKAGE_VERSION = 9.0.1
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
POSIX_SHELL = 
PTHREAD_CC = i486-TSOL-linux-gnu-gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = -lpthread
PYTHON2 = python
RADEON_CFLAGS = -I/usr/xorg/include -I/usr/xorg/include/libdrm  
RADEON_LIBS = -L/usr/xorg/lib -ldrm_radeon  
RANLIB = ranlib
SED = /usr/bin/sed
SELINUX_LIBS = 
SET_MAKE = 
SHARED_GLAPI = 1
SHELL = /bin/sh
SRC_DIRS = mapi/glapi/gen mapi/shared-glapi mapi/glapi glsl mesa gtest glx
STRIP = strip
VA_LIB_INSTALL_DIR = ${libdir}/va
VDPAU_CFLAGS = 
VDPAU_LIBS = 
VDPAU_LIB_INSTALL_DIR = ${libdir}/vdpau
VERSION = 9.0.1
VG_LIB_DEPS = 
VG_LIB_GLOB = lib$(VG_LIB).*so*
VG_LIB_NAME = lib$(VG_LIB).so
VG_PC_LIB_PRIV = 
VISIBILITY_CFLAGS = -fvisibility=hidden
VISIBILITY_CXXFLAGS = -fvisibility=hidden
WAYLAND_CFLAGS = 
WAYLAND_LIBS = 
WAYLAND_SCANNER = 
X11_CFLAGS = -I/usr/xorg/include  
X11_LIBS = -L/usr/xorg/lib -lX11  
XCB_DRI2_CFLAGS = 
XCB_DRI2_LIBS = 
XEXT_CFLAGS = 
XEXT_LIBS = 
XF86VIDMODE_CFLAGS = -I/usr/xorg/include  
XF86VIDMODE_LIBS = -L/usr/xorg/lib -lXxf86vm  
XLIBGL_CFLAGS = 
XLIBGL_LIBS = 
XORG_CFLAGS = 
XORG_DRIVER_INSTALL_DIR = ${exec_prefix}/lib/xorg/modules/drivers
XORG_LIBS = 
XVMC_CFLAGS = 
XVMC_LIBS = 
XVMC_LIB_INSTALL_DIR = ${libdir}
YACC = bison -y
YACC_INST = /usr/bin/bison
YFLAGS = 
abs_builddir = /source/xorg-ponix4/mesa/Mesa-9.0.1/src/glsl
abs_srcdir = /source/xorg-ponix4/mesa/Mesa-9.0.1/src/glsl
abs_top_builddir = /source/xorg-ponix4/mesa/Mesa-9.0.1
abs_top_srcdir = /source/xorg-ponix4/mesa/Mesa-9.0.1
ac_ct_CC = i486-TSOL-linux-gnu-gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /source/xorg-ponix4/mesa/Mesa-9.0.1/bin/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/xorg
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS = \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/src/mapi \
	-I$(top_srcdir)/src/mesa/ \
	$(LIBRARY_INCLUDES) \
	$(DEFINES) \
	$(LIBRARY_DEFINES) \
	$(API_DEFINES)

AM_CFLAGS = $(VISIBILITY_CFLAGS)
AM_CXXFLAGS = $(VISIBILITY_CXXFLAGS)
AM_LFLAGS = --nounistd -o$(LEX_OUTPUT_ROOT).c
GLSL_SRCDIR = $(top_srcdir)/src/glsl
GLSL_BUILDDIR = $(top_builddir)/src/glsl

# libglcpp
LIBGLCPP_FILES = \
	$(GLSL_SRCDIR)/glcpp/pp.c

LIBGLCPP_GENERATED_FILES = \
	$(GLSL_BUILDDIR)/glcpp/glcpp-lex.c \
	$(GLSL_BUILDDIR)/glcpp/glcpp-parse.c


# libglsl
LIBGLSL_FILES = \
	$(GLSL_SRCDIR)/strtod.c \
	$(GLSL_SRCDIR)/ralloc.c

LIBGLSL_CXX_FILES = \
	$(GLSL_SRCDIR)/ast_expr.cpp \
	$(GLSL_SRCDIR)/ast_function.cpp \
	$(GLSL_SRCDIR)/ast_to_hir.cpp \
	$(GLSL_SRCDIR)/ast_type.cpp \
	$(GLSL_SRCDIR)/builtin_variables.cpp \
	$(GLSL_SRCDIR)/glsl_parser_extras.cpp \
	$(GLSL_SRCDIR)/glsl_types.cpp \
	$(GLSL_SRCDIR)/glsl_symbol_table.cpp \
	$(GLSL_SRCDIR)/hir_field_selection.cpp \
	$(GLSL_SRCDIR)/ir_basic_block.cpp \
	$(GLSL_SRCDIR)/ir_builder.cpp \
	$(GLSL_SRCDIR)/ir_clone.cpp \
	$(GLSL_SRCDIR)/ir_constant_expression.cpp \
	$(GLSL_SRCDIR)/ir.cpp \
	$(GLSL_SRCDIR)/ir_expression_flattening.cpp \
	$(GLSL_SRCDIR)/ir_function_can_inline.cpp \
	$(GLSL_SRCDIR)/ir_function_detect_recursion.cpp \
	$(GLSL_SRCDIR)/ir_function.cpp \
	$(GLSL_SRCDIR)/ir_hierarchical_visitor.cpp \
	$(GLSL_SRCDIR)/ir_hv_accept.cpp \
	$(GLSL_SRCDIR)/ir_import_prototypes.cpp \
	$(GLSL_SRCDIR)/ir_print_visitor.cpp \
	$(GLSL_SRCDIR)/ir_reader.cpp \
	$(GLSL_SRCDIR)/ir_rvalue_visitor.cpp \
	$(GLSL_SRCDIR)/ir_set_program_inouts.cpp \
	$(GLSL_SRCDIR)/ir_validate.cpp \
	$(GLSL_SRCDIR)/ir_variable_refcount.cpp \
	$(GLSL_SRCDIR)/linker.cpp \
	$(GLSL_SRCDIR)/link_functions.cpp \
	$(GLSL_SRCDIR)/link_uniforms.cpp \
	$(GLSL_SRCDIR)/link_uniform_initializers.cpp \
	$(GLSL_SRCDIR)/loop_analysis.cpp \
	$(GLSL_SRCDIR)/loop_controls.cpp \
	$(GLSL_SRCDIR)/loop_unroll.cpp \
	$(GLSL_SRCDIR)/lower_clip_distance.cpp \
	$(GLSL_SRCDIR)/lower_discard.cpp \
	$(GLSL_SRCDIR)/lower_discard_flow.cpp \
	$(GLSL_SRCDIR)/lower_if_to_cond_assign.cpp \
	$(GLSL_SRCDIR)/lower_instructions.cpp \
	$(GLSL_SRCDIR)/lower_jumps.cpp \
	$(GLSL_SRCDIR)/lower_mat_op_to_vec.cpp \
	$(GLSL_SRCDIR)/lower_noise.cpp \
	$(GLSL_SRCDIR)/lower_texture_projection.cpp \
	$(GLSL_SRCDIR)/lower_variable_index_to_cond_assign.cpp \
	$(GLSL_SRCDIR)/lower_vec_index_to_cond_assign.cpp \
	$(GLSL_SRCDIR)/lower_vec_index_to_swizzle.cpp \
	$(GLSL_SRCDIR)/lower_vector.cpp \
	$(GLSL_SRCDIR)/lower_output_reads.cpp \
	$(GLSL_SRCDIR)/lower_ubo_reference.cpp \
	$(GLSL_SRCDIR)/opt_algebraic.cpp \
	$(GLSL_SRCDIR)/opt_array_splitting.cpp \
	$(GLSL_SRCDIR)/opt_constant_folding.cpp \
	$(GLSL_SRCDIR)/opt_constant_propagation.cpp \
	$(GLSL_SRCDIR)/opt_constant_variable.cpp \
	$(GLSL_SRCDIR)/opt_copy_propagation.cpp \
	$(GLSL_SRCDIR)/opt_copy_propagation_elements.cpp \
	$(GLSL_SRCDIR)/opt_dead_code.cpp \
	$(GLSL_SRCDIR)/opt_dead_code_local.cpp \
	$(GLSL_SRCDIR)/opt_dead_functions.cpp \
	$(GLSL_SRCDIR)/opt_function_inlining.cpp \
	$(GLSL_SRCDIR)/opt_if_simplification.cpp \
	$(GLSL_SRCDIR)/opt_noop_swizzle.cpp \
	$(GLSL_SRCDIR)/opt_redundant_jumps.cpp \
	$(GLSL_SRCDIR)/opt_structure_splitting.cpp \
	$(GLSL_SRCDIR)/opt_swizzle_swizzle.cpp \
	$(GLSL_SRCDIR)/opt_tree_grafting.cpp \
	$(GLSL_SRCDIR)/s_expression.cpp


# glsl_compiler
GLSL_COMPILER_CXX_FILES = \
	$(GLSL_SRCDIR)/standalone_scaffolding.cpp \
	$(GLSL_SRCDIR)/main.cpp


# builtin_compiler
#
# This is built before libglsl to generate builtin_funciton.cpp for libglsl.
# For this to work, a dummy version of builtin_function.cpp,
# builtin_stubs.cpp, is used.
BUILTIN_COMPILER_CXX_FILES = \
	$(GLSL_SRCDIR)/builtin_stubs.cpp

BUILTIN_COMPILER_GENERATED_CXX_FILES = \
	$(GLSL_BUILDDIR)/glsl_lexer.cc \
	$(GLSL_BUILDDIR)/glsl_parser.cc


# libglsl generated sources
LIBGLSL_GENERATED_CXX_FILES = \
	$(BUILTIN_COMPILER_GENERATED_CXX_FILES) \
	$(GLSL_BUILDDIR)/builtin_function.cpp

noinst_LTLIBRARIES = libglslcommon.la libglsl.la

# common sources for builtin_compiler and libglsl
libglslcommon_la_SOURCES = \
	glsl_lexer.ll \
	glsl_parser.cc \
	$(LIBGLSL_FILES) \
	$(LIBGLSL_CXX_FILES)

libglslcommon_la_LIBADD = glcpp/libglcpp.la

# common sources for builtin_compiler and glsl_compiler
GLSL2_SOURCES = \
	$(top_srcdir)/src/mesa/program/hash_table.c \
	$(top_srcdir)/src/mesa/program/symbol_table.c \
	$(GLSL_COMPILER_CXX_FILES)

libglsl_la_SOURCES = \
	builtin_function.cpp

libglsl_la_LIBADD = libglslcommon.la
libglsl_la_LDFLAGS = 
glsl_compiler_SOURCES = \
	$(GLSL2_SOURCES)

glsl_compiler_LDADD = libglsl.la
glsl_test_SOURCES = \
	$(top_srcdir)/src/mesa/program/hash_table.c \
	$(top_srcdir)/src/mesa/program/symbol_table.c \
	$(GLSL_SRCDIR)/standalone_scaffolding.cpp \
	test.cpp \
	test_optpass.cpp

glsl_test_LDADD = libglsl.la
builtin_compiler_SOURCES = \
	$(GLSL2_SOURCES) \
	builtin_stubs.cpp

builtin_compiler_LDADD = libglslcommon.la
BUILT_SOURCES = glsl_parser.h builtin_function.cpp
CLEANFILES = glsl_lexer.cc glsl_parser.cc $(BUILT_SOURCES) libglsl.a
SUBDIRS = glcpp
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .ll .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.sources $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/glsl/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/glsl/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libglsl.la: $(libglsl_la_OBJECTS) $(libglsl_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libglsl_la_LINK)  $(libglsl_la_OBJECTS) $(libglsl_la_LIBADD) $(LIBS)
libglslcommon.la: $(libglslcommon_la_OBJECTS) $(libglslcommon_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libglslcommon_la_OBJECTS) $(libglslcommon_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
builtin_compiler$(EXEEXT): $(builtin_compiler_OBJECTS) $(builtin_compiler_DEPENDENCIES) 
	@rm -f builtin_compiler$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(builtin_compiler_OBJECTS) $(builtin_compiler_LDADD) $(LIBS)
glsl_compiler$(EXEEXT): $(glsl_compiler_OBJECTS) $(glsl_compiler_DEPENDENCIES) 
	@rm -f glsl_compiler$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glsl_compiler_OBJECTS) $(glsl_compiler_LDADD) $(LIBS)
glsl_test$(EXEEXT): $(glsl_test_OBJECTS) $(glsl_test_DEPENDENCIES) 
	@rm -f glsl_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glsl_test_OBJECTS) $(glsl_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ast_expr.Plo
include ./$(DEPDIR)/ast_function.Plo
include ./$(DEPDIR)/ast_to_hir.Plo
include ./$(DEPDIR)/ast_type.Plo
include ./$(DEPDIR)/builtin_function.Plo
include ./$(DEPDIR)/builtin_stubs.Po
include ./$(DEPDIR)/builtin_variables.Plo
include ./$(DEPDIR)/glsl_lexer.Plo
include ./$(DEPDIR)/glsl_parser.Plo
include ./$(DEPDIR)/glsl_parser_extras.Plo
include ./$(DEPDIR)/glsl_symbol_table.Plo
include ./$(DEPDIR)/glsl_types.Plo
include ./$(DEPDIR)/hash_table.Po
include ./$(DEPDIR)/hir_field_selection.Plo
include ./$(DEPDIR)/ir.Plo
include ./$(DEPDIR)/ir_basic_block.Plo
include ./$(DEPDIR)/ir_builder.Plo
include ./$(DEPDIR)/ir_clone.Plo
include ./$(DEPDIR)/ir_constant_expression.Plo
include ./$(DEPDIR)/ir_expression_flattening.Plo
include ./$(DEPDIR)/ir_function.Plo
include ./$(DEPDIR)/ir_function_can_inline.Plo
include ./$(DEPDIR)/ir_function_detect_recursion.Plo
include ./$(DEPDIR)/ir_hierarchical_visitor.Plo
include ./$(DEPDIR)/ir_hv_accept.Plo
include ./$(DEPDIR)/ir_import_prototypes.Plo
include ./$(DEPDIR)/ir_print_visitor.Plo
include ./$(DEPDIR)/ir_reader.Plo
include ./$(DEPDIR)/ir_rvalue_visitor.Plo
include ./$(DEPDIR)/ir_set_program_inouts.Plo
include ./$(DEPDIR)/ir_validate.Plo
include ./$(DEPDIR)/ir_variable_refcount.Plo
include ./$(DEPDIR)/link_functions.Plo
include ./$(DEPDIR)/link_uniform_initializers.Plo
include ./$(DEPDIR)/link_uniforms.Plo
include ./$(DEPDIR)/linker.Plo
include ./$(DEPDIR)/loop_analysis.Plo
include ./$(DEPDIR)/loop_controls.Plo
include ./$(DEPDIR)/loop_unroll.Plo
include ./$(DEPDIR)/lower_clip_distance.Plo
include ./$(DEPDIR)/lower_discard.Plo
include ./$(DEPDIR)/lower_discard_flow.Plo
include ./$(DEPDIR)/lower_if_to_cond_assign.Plo
include ./$(DEPDIR)/lower_instructions.Plo
include ./$(DEPDIR)/lower_jumps.Plo
include ./$(DEPDIR)/lower_mat_op_to_vec.Plo
include ./$(DEPDIR)/lower_noise.Plo
include ./$(DEPDIR)/lower_output_reads.Plo
include ./$(DEPDIR)/lower_texture_projection.Plo
include ./$(DEPDIR)/lower_ubo_reference.Plo
include ./$(DEPDIR)/lower_variable_index_to_cond_assign.Plo
include ./$(DEPDIR)/lower_vec_index_to_cond_assign.Plo
include ./$(DEPDIR)/lower_vec_index_to_swizzle.Plo
include ./$(DEPDIR)/lower_vector.Plo
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/opt_algebraic.Plo
include ./$(DEPDIR)/opt_array_splitting.Plo
include ./$(DEPDIR)/opt_constant_folding.Plo
include ./$(DEPDIR)/opt_constant_propagation.Plo
include ./$(DEPDIR)/opt_constant_variable.Plo
include ./$(DEPDIR)/opt_copy_propagation.Plo
include ./$(DEPDIR)/opt_copy_propagation_elements.Plo
include ./$(DEPDIR)/opt_dead_code.Plo
include ./$(DEPDIR)/opt_dead_code_local.Plo
include ./$(DEPDIR)/opt_dead_functions.Plo
include ./$(DEPDIR)/opt_function_inlining.Plo
include ./$(DEPDIR)/opt_if_simplification.Plo
include ./$(DEPDIR)/opt_noop_swizzle.Plo
include ./$(DEPDIR)/opt_redundant_jumps.Plo
include ./$(DEPDIR)/opt_structure_splitting.Plo
include ./$(DEPDIR)/opt_swizzle_swizzle.Plo
include ./$(DEPDIR)/opt_tree_grafting.Plo
include ./$(DEPDIR)/ralloc.Plo
include ./$(DEPDIR)/s_expression.Plo
include ./$(DEPDIR)/standalone_scaffolding.Po
include ./$(DEPDIR)/strtod.Plo
include ./$(DEPDIR)/symbol_table.Po
include ./$(DEPDIR)/test.Po
include ./$(DEPDIR)/test_optpass.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

strtod.lo: $(GLSL_SRCDIR)/strtod.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT strtod.lo -MD -MP -MF $(DEPDIR)/strtod.Tpo -c -o strtod.lo `test -f '$(GLSL_SRCDIR)/strtod.c' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/strtod.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/strtod.Tpo $(DEPDIR)/strtod.Plo
#	$(AM_V_CC) \
#	source='$(GLSL_SRCDIR)/strtod.c' object='strtod.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o strtod.lo `test -f '$(GLSL_SRCDIR)/strtod.c' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/strtod.c

ralloc.lo: $(GLSL_SRCDIR)/ralloc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ralloc.lo -MD -MP -MF $(DEPDIR)/ralloc.Tpo -c -o ralloc.lo `test -f '$(GLSL_SRCDIR)/ralloc.c' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ralloc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ralloc.Tpo $(DEPDIR)/ralloc.Plo
#	$(AM_V_CC) \
#	source='$(GLSL_SRCDIR)/ralloc.c' object='ralloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ralloc.lo `test -f '$(GLSL_SRCDIR)/ralloc.c' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ralloc.c

hash_table.o: $(top_srcdir)/src/mesa/program/hash_table.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hash_table.o -MD -MP -MF $(DEPDIR)/hash_table.Tpo -c -o hash_table.o `test -f '$(top_srcdir)/src/mesa/program/hash_table.c' || echo '$(srcdir)/'`$(top_srcdir)/src/mesa/program/hash_table.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hash_table.Tpo $(DEPDIR)/hash_table.Po
#	$(AM_V_CC) \
#	source='$(top_srcdir)/src/mesa/program/hash_table.c' object='hash_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hash_table.o `test -f '$(top_srcdir)/src/mesa/program/hash_table.c' || echo '$(srcdir)/'`$(top_srcdir)/src/mesa/program/hash_table.c

hash_table.obj: $(top_srcdir)/src/mesa/program/hash_table.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hash_table.obj -MD -MP -MF $(DEPDIR)/hash_table.Tpo -c -o hash_table.obj `if test -f '$(top_srcdir)/src/mesa/program/hash_table.c'; then $(CYGPATH_W) '$(top_srcdir)/src/mesa/program/hash_table.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/mesa/program/hash_table.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hash_table.Tpo $(DEPDIR)/hash_table.Po
#	$(AM_V_CC) \
#	source='$(top_srcdir)/src/mesa/program/hash_table.c' object='hash_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hash_table.obj `if test -f '$(top_srcdir)/src/mesa/program/hash_table.c'; then $(CYGPATH_W) '$(top_srcdir)/src/mesa/program/hash_table.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/mesa/program/hash_table.c'; fi`

symbol_table.o: $(top_srcdir)/src/mesa/program/symbol_table.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT symbol_table.o -MD -MP -MF $(DEPDIR)/symbol_table.Tpo -c -o symbol_table.o `test -f '$(top_srcdir)/src/mesa/program/symbol_table.c' || echo '$(srcdir)/'`$(top_srcdir)/src/mesa/program/symbol_table.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/symbol_table.Tpo $(DEPDIR)/symbol_table.Po
#	$(AM_V_CC) \
#	source='$(top_srcdir)/src/mesa/program/symbol_table.c' object='symbol_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o symbol_table.o `test -f '$(top_srcdir)/src/mesa/program/symbol_table.c' || echo '$(srcdir)/'`$(top_srcdir)/src/mesa/program/symbol_table.c

symbol_table.obj: $(top_srcdir)/src/mesa/program/symbol_table.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT symbol_table.obj -MD -MP -MF $(DEPDIR)/symbol_table.Tpo -c -o symbol_table.obj `if test -f '$(top_srcdir)/src/mesa/program/symbol_table.c'; then $(CYGPATH_W) '$(top_srcdir)/src/mesa/program/symbol_table.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/mesa/program/symbol_table.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/symbol_table.Tpo $(DEPDIR)/symbol_table.Po
#	$(AM_V_CC) \
#	source='$(top_srcdir)/src/mesa/program/symbol_table.c' object='symbol_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o symbol_table.obj `if test -f '$(top_srcdir)/src/mesa/program/symbol_table.c'; then $(CYGPATH_W) '$(top_srcdir)/src/mesa/program/symbol_table.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/mesa/program/symbol_table.c'; fi`

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

ast_expr.lo: $(GLSL_SRCDIR)/ast_expr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ast_expr.lo -MD -MP -MF $(DEPDIR)/ast_expr.Tpo -c -o ast_expr.lo `test -f '$(GLSL_SRCDIR)/ast_expr.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ast_expr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ast_expr.Tpo $(DEPDIR)/ast_expr.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ast_expr.cpp' object='ast_expr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ast_expr.lo `test -f '$(GLSL_SRCDIR)/ast_expr.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ast_expr.cpp

ast_function.lo: $(GLSL_SRCDIR)/ast_function.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ast_function.lo -MD -MP -MF $(DEPDIR)/ast_function.Tpo -c -o ast_function.lo `test -f '$(GLSL_SRCDIR)/ast_function.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ast_function.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ast_function.Tpo $(DEPDIR)/ast_function.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ast_function.cpp' object='ast_function.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ast_function.lo `test -f '$(GLSL_SRCDIR)/ast_function.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ast_function.cpp

ast_to_hir.lo: $(GLSL_SRCDIR)/ast_to_hir.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ast_to_hir.lo -MD -MP -MF $(DEPDIR)/ast_to_hir.Tpo -c -o ast_to_hir.lo `test -f '$(GLSL_SRCDIR)/ast_to_hir.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ast_to_hir.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ast_to_hir.Tpo $(DEPDIR)/ast_to_hir.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ast_to_hir.cpp' object='ast_to_hir.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ast_to_hir.lo `test -f '$(GLSL_SRCDIR)/ast_to_hir.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ast_to_hir.cpp

ast_type.lo: $(GLSL_SRCDIR)/ast_type.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ast_type.lo -MD -MP -MF $(DEPDIR)/ast_type.Tpo -c -o ast_type.lo `test -f '$(GLSL_SRCDIR)/ast_type.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ast_type.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ast_type.Tpo $(DEPDIR)/ast_type.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ast_type.cpp' object='ast_type.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ast_type.lo `test -f '$(GLSL_SRCDIR)/ast_type.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ast_type.cpp

builtin_variables.lo: $(GLSL_SRCDIR)/builtin_variables.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT builtin_variables.lo -MD -MP -MF $(DEPDIR)/builtin_variables.Tpo -c -o builtin_variables.lo `test -f '$(GLSL_SRCDIR)/builtin_variables.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/builtin_variables.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/builtin_variables.Tpo $(DEPDIR)/builtin_variables.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/builtin_variables.cpp' object='builtin_variables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o builtin_variables.lo `test -f '$(GLSL_SRCDIR)/builtin_variables.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/builtin_variables.cpp

glsl_parser_extras.lo: $(GLSL_SRCDIR)/glsl_parser_extras.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT glsl_parser_extras.lo -MD -MP -MF $(DEPDIR)/glsl_parser_extras.Tpo -c -o glsl_parser_extras.lo `test -f '$(GLSL_SRCDIR)/glsl_parser_extras.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/glsl_parser_extras.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/glsl_parser_extras.Tpo $(DEPDIR)/glsl_parser_extras.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/glsl_parser_extras.cpp' object='glsl_parser_extras.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o glsl_parser_extras.lo `test -f '$(GLSL_SRCDIR)/glsl_parser_extras.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/glsl_parser_extras.cpp

glsl_types.lo: $(GLSL_SRCDIR)/glsl_types.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT glsl_types.lo -MD -MP -MF $(DEPDIR)/glsl_types.Tpo -c -o glsl_types.lo `test -f '$(GLSL_SRCDIR)/glsl_types.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/glsl_types.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/glsl_types.Tpo $(DEPDIR)/glsl_types.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/glsl_types.cpp' object='glsl_types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o glsl_types.lo `test -f '$(GLSL_SRCDIR)/glsl_types.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/glsl_types.cpp

glsl_symbol_table.lo: $(GLSL_SRCDIR)/glsl_symbol_table.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT glsl_symbol_table.lo -MD -MP -MF $(DEPDIR)/glsl_symbol_table.Tpo -c -o glsl_symbol_table.lo `test -f '$(GLSL_SRCDIR)/glsl_symbol_table.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/glsl_symbol_table.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/glsl_symbol_table.Tpo $(DEPDIR)/glsl_symbol_table.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/glsl_symbol_table.cpp' object='glsl_symbol_table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o glsl_symbol_table.lo `test -f '$(GLSL_SRCDIR)/glsl_symbol_table.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/glsl_symbol_table.cpp

hir_field_selection.lo: $(GLSL_SRCDIR)/hir_field_selection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hir_field_selection.lo -MD -MP -MF $(DEPDIR)/hir_field_selection.Tpo -c -o hir_field_selection.lo `test -f '$(GLSL_SRCDIR)/hir_field_selection.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/hir_field_selection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/hir_field_selection.Tpo $(DEPDIR)/hir_field_selection.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/hir_field_selection.cpp' object='hir_field_selection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hir_field_selection.lo `test -f '$(GLSL_SRCDIR)/hir_field_selection.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/hir_field_selection.cpp

ir_basic_block.lo: $(GLSL_SRCDIR)/ir_basic_block.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_basic_block.lo -MD -MP -MF $(DEPDIR)/ir_basic_block.Tpo -c -o ir_basic_block.lo `test -f '$(GLSL_SRCDIR)/ir_basic_block.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_basic_block.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_basic_block.Tpo $(DEPDIR)/ir_basic_block.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_basic_block.cpp' object='ir_basic_block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_basic_block.lo `test -f '$(GLSL_SRCDIR)/ir_basic_block.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_basic_block.cpp

ir_builder.lo: $(GLSL_SRCDIR)/ir_builder.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_builder.lo -MD -MP -MF $(DEPDIR)/ir_builder.Tpo -c -o ir_builder.lo `test -f '$(GLSL_SRCDIR)/ir_builder.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_builder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_builder.Tpo $(DEPDIR)/ir_builder.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_builder.cpp' object='ir_builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_builder.lo `test -f '$(GLSL_SRCDIR)/ir_builder.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_builder.cpp

ir_clone.lo: $(GLSL_SRCDIR)/ir_clone.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_clone.lo -MD -MP -MF $(DEPDIR)/ir_clone.Tpo -c -o ir_clone.lo `test -f '$(GLSL_SRCDIR)/ir_clone.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_clone.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_clone.Tpo $(DEPDIR)/ir_clone.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_clone.cpp' object='ir_clone.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_clone.lo `test -f '$(GLSL_SRCDIR)/ir_clone.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_clone.cpp

ir_constant_expression.lo: $(GLSL_SRCDIR)/ir_constant_expression.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_constant_expression.lo -MD -MP -MF $(DEPDIR)/ir_constant_expression.Tpo -c -o ir_constant_expression.lo `test -f '$(GLSL_SRCDIR)/ir_constant_expression.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_constant_expression.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_constant_expression.Tpo $(DEPDIR)/ir_constant_expression.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_constant_expression.cpp' object='ir_constant_expression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_constant_expression.lo `test -f '$(GLSL_SRCDIR)/ir_constant_expression.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_constant_expression.cpp

ir.lo: $(GLSL_SRCDIR)/ir.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir.lo -MD -MP -MF $(DEPDIR)/ir.Tpo -c -o ir.lo `test -f '$(GLSL_SRCDIR)/ir.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir.Tpo $(DEPDIR)/ir.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir.cpp' object='ir.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir.lo `test -f '$(GLSL_SRCDIR)/ir.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir.cpp

ir_expression_flattening.lo: $(GLSL_SRCDIR)/ir_expression_flattening.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_expression_flattening.lo -MD -MP -MF $(DEPDIR)/ir_expression_flattening.Tpo -c -o ir_expression_flattening.lo `test -f '$(GLSL_SRCDIR)/ir_expression_flattening.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_expression_flattening.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_expression_flattening.Tpo $(DEPDIR)/ir_expression_flattening.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_expression_flattening.cpp' object='ir_expression_flattening.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_expression_flattening.lo `test -f '$(GLSL_SRCDIR)/ir_expression_flattening.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_expression_flattening.cpp

ir_function_can_inline.lo: $(GLSL_SRCDIR)/ir_function_can_inline.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_function_can_inline.lo -MD -MP -MF $(DEPDIR)/ir_function_can_inline.Tpo -c -o ir_function_can_inline.lo `test -f '$(GLSL_SRCDIR)/ir_function_can_inline.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_function_can_inline.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_function_can_inline.Tpo $(DEPDIR)/ir_function_can_inline.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_function_can_inline.cpp' object='ir_function_can_inline.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_function_can_inline.lo `test -f '$(GLSL_SRCDIR)/ir_function_can_inline.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_function_can_inline.cpp

ir_function_detect_recursion.lo: $(GLSL_SRCDIR)/ir_function_detect_recursion.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_function_detect_recursion.lo -MD -MP -MF $(DEPDIR)/ir_function_detect_recursion.Tpo -c -o ir_function_detect_recursion.lo `test -f '$(GLSL_SRCDIR)/ir_function_detect_recursion.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_function_detect_recursion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_function_detect_recursion.Tpo $(DEPDIR)/ir_function_detect_recursion.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_function_detect_recursion.cpp' object='ir_function_detect_recursion.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_function_detect_recursion.lo `test -f '$(GLSL_SRCDIR)/ir_function_detect_recursion.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_function_detect_recursion.cpp

ir_function.lo: $(GLSL_SRCDIR)/ir_function.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_function.lo -MD -MP -MF $(DEPDIR)/ir_function.Tpo -c -o ir_function.lo `test -f '$(GLSL_SRCDIR)/ir_function.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_function.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_function.Tpo $(DEPDIR)/ir_function.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_function.cpp' object='ir_function.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_function.lo `test -f '$(GLSL_SRCDIR)/ir_function.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_function.cpp

ir_hierarchical_visitor.lo: $(GLSL_SRCDIR)/ir_hierarchical_visitor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_hierarchical_visitor.lo -MD -MP -MF $(DEPDIR)/ir_hierarchical_visitor.Tpo -c -o ir_hierarchical_visitor.lo `test -f '$(GLSL_SRCDIR)/ir_hierarchical_visitor.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_hierarchical_visitor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_hierarchical_visitor.Tpo $(DEPDIR)/ir_hierarchical_visitor.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_hierarchical_visitor.cpp' object='ir_hierarchical_visitor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_hierarchical_visitor.lo `test -f '$(GLSL_SRCDIR)/ir_hierarchical_visitor.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_hierarchical_visitor.cpp

ir_hv_accept.lo: $(GLSL_SRCDIR)/ir_hv_accept.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_hv_accept.lo -MD -MP -MF $(DEPDIR)/ir_hv_accept.Tpo -c -o ir_hv_accept.lo `test -f '$(GLSL_SRCDIR)/ir_hv_accept.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_hv_accept.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_hv_accept.Tpo $(DEPDIR)/ir_hv_accept.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_hv_accept.cpp' object='ir_hv_accept.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_hv_accept.lo `test -f '$(GLSL_SRCDIR)/ir_hv_accept.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_hv_accept.cpp

ir_import_prototypes.lo: $(GLSL_SRCDIR)/ir_import_prototypes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_import_prototypes.lo -MD -MP -MF $(DEPDIR)/ir_import_prototypes.Tpo -c -o ir_import_prototypes.lo `test -f '$(GLSL_SRCDIR)/ir_import_prototypes.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_import_prototypes.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_import_prototypes.Tpo $(DEPDIR)/ir_import_prototypes.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_import_prototypes.cpp' object='ir_import_prototypes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_import_prototypes.lo `test -f '$(GLSL_SRCDIR)/ir_import_prototypes.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_import_prototypes.cpp

ir_print_visitor.lo: $(GLSL_SRCDIR)/ir_print_visitor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_print_visitor.lo -MD -MP -MF $(DEPDIR)/ir_print_visitor.Tpo -c -o ir_print_visitor.lo `test -f '$(GLSL_SRCDIR)/ir_print_visitor.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_print_visitor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_print_visitor.Tpo $(DEPDIR)/ir_print_visitor.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_print_visitor.cpp' object='ir_print_visitor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_print_visitor.lo `test -f '$(GLSL_SRCDIR)/ir_print_visitor.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_print_visitor.cpp

ir_reader.lo: $(GLSL_SRCDIR)/ir_reader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_reader.lo -MD -MP -MF $(DEPDIR)/ir_reader.Tpo -c -o ir_reader.lo `test -f '$(GLSL_SRCDIR)/ir_reader.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_reader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_reader.Tpo $(DEPDIR)/ir_reader.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_reader.cpp' object='ir_reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_reader.lo `test -f '$(GLSL_SRCDIR)/ir_reader.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_reader.cpp

ir_rvalue_visitor.lo: $(GLSL_SRCDIR)/ir_rvalue_visitor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_rvalue_visitor.lo -MD -MP -MF $(DEPDIR)/ir_rvalue_visitor.Tpo -c -o ir_rvalue_visitor.lo `test -f '$(GLSL_SRCDIR)/ir_rvalue_visitor.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_rvalue_visitor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_rvalue_visitor.Tpo $(DEPDIR)/ir_rvalue_visitor.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_rvalue_visitor.cpp' object='ir_rvalue_visitor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_rvalue_visitor.lo `test -f '$(GLSL_SRCDIR)/ir_rvalue_visitor.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_rvalue_visitor.cpp

ir_set_program_inouts.lo: $(GLSL_SRCDIR)/ir_set_program_inouts.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_set_program_inouts.lo -MD -MP -MF $(DEPDIR)/ir_set_program_inouts.Tpo -c -o ir_set_program_inouts.lo `test -f '$(GLSL_SRCDIR)/ir_set_program_inouts.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_set_program_inouts.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_set_program_inouts.Tpo $(DEPDIR)/ir_set_program_inouts.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_set_program_inouts.cpp' object='ir_set_program_inouts.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_set_program_inouts.lo `test -f '$(GLSL_SRCDIR)/ir_set_program_inouts.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_set_program_inouts.cpp

ir_validate.lo: $(GLSL_SRCDIR)/ir_validate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_validate.lo -MD -MP -MF $(DEPDIR)/ir_validate.Tpo -c -o ir_validate.lo `test -f '$(GLSL_SRCDIR)/ir_validate.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_validate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_validate.Tpo $(DEPDIR)/ir_validate.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_validate.cpp' object='ir_validate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_validate.lo `test -f '$(GLSL_SRCDIR)/ir_validate.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_validate.cpp

ir_variable_refcount.lo: $(GLSL_SRCDIR)/ir_variable_refcount.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ir_variable_refcount.lo -MD -MP -MF $(DEPDIR)/ir_variable_refcount.Tpo -c -o ir_variable_refcount.lo `test -f '$(GLSL_SRCDIR)/ir_variable_refcount.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_variable_refcount.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ir_variable_refcount.Tpo $(DEPDIR)/ir_variable_refcount.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/ir_variable_refcount.cpp' object='ir_variable_refcount.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ir_variable_refcount.lo `test -f '$(GLSL_SRCDIR)/ir_variable_refcount.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/ir_variable_refcount.cpp

linker.lo: $(GLSL_SRCDIR)/linker.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linker.lo -MD -MP -MF $(DEPDIR)/linker.Tpo -c -o linker.lo `test -f '$(GLSL_SRCDIR)/linker.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/linker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/linker.Tpo $(DEPDIR)/linker.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/linker.cpp' object='linker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linker.lo `test -f '$(GLSL_SRCDIR)/linker.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/linker.cpp

link_functions.lo: $(GLSL_SRCDIR)/link_functions.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT link_functions.lo -MD -MP -MF $(DEPDIR)/link_functions.Tpo -c -o link_functions.lo `test -f '$(GLSL_SRCDIR)/link_functions.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/link_functions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/link_functions.Tpo $(DEPDIR)/link_functions.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/link_functions.cpp' object='link_functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o link_functions.lo `test -f '$(GLSL_SRCDIR)/link_functions.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/link_functions.cpp

link_uniforms.lo: $(GLSL_SRCDIR)/link_uniforms.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT link_uniforms.lo -MD -MP -MF $(DEPDIR)/link_uniforms.Tpo -c -o link_uniforms.lo `test -f '$(GLSL_SRCDIR)/link_uniforms.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/link_uniforms.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/link_uniforms.Tpo $(DEPDIR)/link_uniforms.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/link_uniforms.cpp' object='link_uniforms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o link_uniforms.lo `test -f '$(GLSL_SRCDIR)/link_uniforms.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/link_uniforms.cpp

link_uniform_initializers.lo: $(GLSL_SRCDIR)/link_uniform_initializers.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT link_uniform_initializers.lo -MD -MP -MF $(DEPDIR)/link_uniform_initializers.Tpo -c -o link_uniform_initializers.lo `test -f '$(GLSL_SRCDIR)/link_uniform_initializers.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/link_uniform_initializers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/link_uniform_initializers.Tpo $(DEPDIR)/link_uniform_initializers.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/link_uniform_initializers.cpp' object='link_uniform_initializers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o link_uniform_initializers.lo `test -f '$(GLSL_SRCDIR)/link_uniform_initializers.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/link_uniform_initializers.cpp

loop_analysis.lo: $(GLSL_SRCDIR)/loop_analysis.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT loop_analysis.lo -MD -MP -MF $(DEPDIR)/loop_analysis.Tpo -c -o loop_analysis.lo `test -f '$(GLSL_SRCDIR)/loop_analysis.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/loop_analysis.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/loop_analysis.Tpo $(DEPDIR)/loop_analysis.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/loop_analysis.cpp' object='loop_analysis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o loop_analysis.lo `test -f '$(GLSL_SRCDIR)/loop_analysis.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/loop_analysis.cpp

loop_controls.lo: $(GLSL_SRCDIR)/loop_controls.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT loop_controls.lo -MD -MP -MF $(DEPDIR)/loop_controls.Tpo -c -o loop_controls.lo `test -f '$(GLSL_SRCDIR)/loop_controls.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/loop_controls.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/loop_controls.Tpo $(DEPDIR)/loop_controls.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/loop_controls.cpp' object='loop_controls.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o loop_controls.lo `test -f '$(GLSL_SRCDIR)/loop_controls.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/loop_controls.cpp

loop_unroll.lo: $(GLSL_SRCDIR)/loop_unroll.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT loop_unroll.lo -MD -MP -MF $(DEPDIR)/loop_unroll.Tpo -c -o loop_unroll.lo `test -f '$(GLSL_SRCDIR)/loop_unroll.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/loop_unroll.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/loop_unroll.Tpo $(DEPDIR)/loop_unroll.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/loop_unroll.cpp' object='loop_unroll.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o loop_unroll.lo `test -f '$(GLSL_SRCDIR)/loop_unroll.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/loop_unroll.cpp

lower_clip_distance.lo: $(GLSL_SRCDIR)/lower_clip_distance.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_clip_distance.lo -MD -MP -MF $(DEPDIR)/lower_clip_distance.Tpo -c -o lower_clip_distance.lo `test -f '$(GLSL_SRCDIR)/lower_clip_distance.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_clip_distance.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_clip_distance.Tpo $(DEPDIR)/lower_clip_distance.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_clip_distance.cpp' object='lower_clip_distance.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_clip_distance.lo `test -f '$(GLSL_SRCDIR)/lower_clip_distance.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_clip_distance.cpp

lower_discard.lo: $(GLSL_SRCDIR)/lower_discard.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_discard.lo -MD -MP -MF $(DEPDIR)/lower_discard.Tpo -c -o lower_discard.lo `test -f '$(GLSL_SRCDIR)/lower_discard.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_discard.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_discard.Tpo $(DEPDIR)/lower_discard.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_discard.cpp' object='lower_discard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_discard.lo `test -f '$(GLSL_SRCDIR)/lower_discard.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_discard.cpp

lower_discard_flow.lo: $(GLSL_SRCDIR)/lower_discard_flow.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_discard_flow.lo -MD -MP -MF $(DEPDIR)/lower_discard_flow.Tpo -c -o lower_discard_flow.lo `test -f '$(GLSL_SRCDIR)/lower_discard_flow.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_discard_flow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_discard_flow.Tpo $(DEPDIR)/lower_discard_flow.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_discard_flow.cpp' object='lower_discard_flow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_discard_flow.lo `test -f '$(GLSL_SRCDIR)/lower_discard_flow.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_discard_flow.cpp

lower_if_to_cond_assign.lo: $(GLSL_SRCDIR)/lower_if_to_cond_assign.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_if_to_cond_assign.lo -MD -MP -MF $(DEPDIR)/lower_if_to_cond_assign.Tpo -c -o lower_if_to_cond_assign.lo `test -f '$(GLSL_SRCDIR)/lower_if_to_cond_assign.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_if_to_cond_assign.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_if_to_cond_assign.Tpo $(DEPDIR)/lower_if_to_cond_assign.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_if_to_cond_assign.cpp' object='lower_if_to_cond_assign.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_if_to_cond_assign.lo `test -f '$(GLSL_SRCDIR)/lower_if_to_cond_assign.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_if_to_cond_assign.cpp

lower_instructions.lo: $(GLSL_SRCDIR)/lower_instructions.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_instructions.lo -MD -MP -MF $(DEPDIR)/lower_instructions.Tpo -c -o lower_instructions.lo `test -f '$(GLSL_SRCDIR)/lower_instructions.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_instructions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_instructions.Tpo $(DEPDIR)/lower_instructions.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_instructions.cpp' object='lower_instructions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_instructions.lo `test -f '$(GLSL_SRCDIR)/lower_instructions.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_instructions.cpp

lower_jumps.lo: $(GLSL_SRCDIR)/lower_jumps.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_jumps.lo -MD -MP -MF $(DEPDIR)/lower_jumps.Tpo -c -o lower_jumps.lo `test -f '$(GLSL_SRCDIR)/lower_jumps.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_jumps.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_jumps.Tpo $(DEPDIR)/lower_jumps.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_jumps.cpp' object='lower_jumps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_jumps.lo `test -f '$(GLSL_SRCDIR)/lower_jumps.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_jumps.cpp

lower_mat_op_to_vec.lo: $(GLSL_SRCDIR)/lower_mat_op_to_vec.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_mat_op_to_vec.lo -MD -MP -MF $(DEPDIR)/lower_mat_op_to_vec.Tpo -c -o lower_mat_op_to_vec.lo `test -f '$(GLSL_SRCDIR)/lower_mat_op_to_vec.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_mat_op_to_vec.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_mat_op_to_vec.Tpo $(DEPDIR)/lower_mat_op_to_vec.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_mat_op_to_vec.cpp' object='lower_mat_op_to_vec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_mat_op_to_vec.lo `test -f '$(GLSL_SRCDIR)/lower_mat_op_to_vec.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_mat_op_to_vec.cpp

lower_noise.lo: $(GLSL_SRCDIR)/lower_noise.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_noise.lo -MD -MP -MF $(DEPDIR)/lower_noise.Tpo -c -o lower_noise.lo `test -f '$(GLSL_SRCDIR)/lower_noise.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_noise.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_noise.Tpo $(DEPDIR)/lower_noise.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_noise.cpp' object='lower_noise.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_noise.lo `test -f '$(GLSL_SRCDIR)/lower_noise.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_noise.cpp

lower_texture_projection.lo: $(GLSL_SRCDIR)/lower_texture_projection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_texture_projection.lo -MD -MP -MF $(DEPDIR)/lower_texture_projection.Tpo -c -o lower_texture_projection.lo `test -f '$(GLSL_SRCDIR)/lower_texture_projection.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_texture_projection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_texture_projection.Tpo $(DEPDIR)/lower_texture_projection.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_texture_projection.cpp' object='lower_texture_projection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_texture_projection.lo `test -f '$(GLSL_SRCDIR)/lower_texture_projection.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_texture_projection.cpp

lower_variable_index_to_cond_assign.lo: $(GLSL_SRCDIR)/lower_variable_index_to_cond_assign.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_variable_index_to_cond_assign.lo -MD -MP -MF $(DEPDIR)/lower_variable_index_to_cond_assign.Tpo -c -o lower_variable_index_to_cond_assign.lo `test -f '$(GLSL_SRCDIR)/lower_variable_index_to_cond_assign.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_variable_index_to_cond_assign.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_variable_index_to_cond_assign.Tpo $(DEPDIR)/lower_variable_index_to_cond_assign.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_variable_index_to_cond_assign.cpp' object='lower_variable_index_to_cond_assign.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_variable_index_to_cond_assign.lo `test -f '$(GLSL_SRCDIR)/lower_variable_index_to_cond_assign.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_variable_index_to_cond_assign.cpp

lower_vec_index_to_cond_assign.lo: $(GLSL_SRCDIR)/lower_vec_index_to_cond_assign.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_vec_index_to_cond_assign.lo -MD -MP -MF $(DEPDIR)/lower_vec_index_to_cond_assign.Tpo -c -o lower_vec_index_to_cond_assign.lo `test -f '$(GLSL_SRCDIR)/lower_vec_index_to_cond_assign.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_vec_index_to_cond_assign.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_vec_index_to_cond_assign.Tpo $(DEPDIR)/lower_vec_index_to_cond_assign.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_vec_index_to_cond_assign.cpp' object='lower_vec_index_to_cond_assign.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_vec_index_to_cond_assign.lo `test -f '$(GLSL_SRCDIR)/lower_vec_index_to_cond_assign.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_vec_index_to_cond_assign.cpp

lower_vec_index_to_swizzle.lo: $(GLSL_SRCDIR)/lower_vec_index_to_swizzle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_vec_index_to_swizzle.lo -MD -MP -MF $(DEPDIR)/lower_vec_index_to_swizzle.Tpo -c -o lower_vec_index_to_swizzle.lo `test -f '$(GLSL_SRCDIR)/lower_vec_index_to_swizzle.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_vec_index_to_swizzle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_vec_index_to_swizzle.Tpo $(DEPDIR)/lower_vec_index_to_swizzle.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_vec_index_to_swizzle.cpp' object='lower_vec_index_to_swizzle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_vec_index_to_swizzle.lo `test -f '$(GLSL_SRCDIR)/lower_vec_index_to_swizzle.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_vec_index_to_swizzle.cpp

lower_vector.lo: $(GLSL_SRCDIR)/lower_vector.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_vector.lo -MD -MP -MF $(DEPDIR)/lower_vector.Tpo -c -o lower_vector.lo `test -f '$(GLSL_SRCDIR)/lower_vector.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_vector.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_vector.Tpo $(DEPDIR)/lower_vector.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_vector.cpp' object='lower_vector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_vector.lo `test -f '$(GLSL_SRCDIR)/lower_vector.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_vector.cpp

lower_output_reads.lo: $(GLSL_SRCDIR)/lower_output_reads.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_output_reads.lo -MD -MP -MF $(DEPDIR)/lower_output_reads.Tpo -c -o lower_output_reads.lo `test -f '$(GLSL_SRCDIR)/lower_output_reads.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_output_reads.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_output_reads.Tpo $(DEPDIR)/lower_output_reads.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_output_reads.cpp' object='lower_output_reads.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_output_reads.lo `test -f '$(GLSL_SRCDIR)/lower_output_reads.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_output_reads.cpp

lower_ubo_reference.lo: $(GLSL_SRCDIR)/lower_ubo_reference.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lower_ubo_reference.lo -MD -MP -MF $(DEPDIR)/lower_ubo_reference.Tpo -c -o lower_ubo_reference.lo `test -f '$(GLSL_SRCDIR)/lower_ubo_reference.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_ubo_reference.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lower_ubo_reference.Tpo $(DEPDIR)/lower_ubo_reference.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/lower_ubo_reference.cpp' object='lower_ubo_reference.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lower_ubo_reference.lo `test -f '$(GLSL_SRCDIR)/lower_ubo_reference.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/lower_ubo_reference.cpp

opt_algebraic.lo: $(GLSL_SRCDIR)/opt_algebraic.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_algebraic.lo -MD -MP -MF $(DEPDIR)/opt_algebraic.Tpo -c -o opt_algebraic.lo `test -f '$(GLSL_SRCDIR)/opt_algebraic.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_algebraic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_algebraic.Tpo $(DEPDIR)/opt_algebraic.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_algebraic.cpp' object='opt_algebraic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_algebraic.lo `test -f '$(GLSL_SRCDIR)/opt_algebraic.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_algebraic.cpp

opt_array_splitting.lo: $(GLSL_SRCDIR)/opt_array_splitting.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_array_splitting.lo -MD -MP -MF $(DEPDIR)/opt_array_splitting.Tpo -c -o opt_array_splitting.lo `test -f '$(GLSL_SRCDIR)/opt_array_splitting.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_array_splitting.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_array_splitting.Tpo $(DEPDIR)/opt_array_splitting.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_array_splitting.cpp' object='opt_array_splitting.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_array_splitting.lo `test -f '$(GLSL_SRCDIR)/opt_array_splitting.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_array_splitting.cpp

opt_constant_folding.lo: $(GLSL_SRCDIR)/opt_constant_folding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_constant_folding.lo -MD -MP -MF $(DEPDIR)/opt_constant_folding.Tpo -c -o opt_constant_folding.lo `test -f '$(GLSL_SRCDIR)/opt_constant_folding.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_constant_folding.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_constant_folding.Tpo $(DEPDIR)/opt_constant_folding.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_constant_folding.cpp' object='opt_constant_folding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_constant_folding.lo `test -f '$(GLSL_SRCDIR)/opt_constant_folding.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_constant_folding.cpp

opt_constant_propagation.lo: $(GLSL_SRCDIR)/opt_constant_propagation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_constant_propagation.lo -MD -MP -MF $(DEPDIR)/opt_constant_propagation.Tpo -c -o opt_constant_propagation.lo `test -f '$(GLSL_SRCDIR)/opt_constant_propagation.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_constant_propagation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_constant_propagation.Tpo $(DEPDIR)/opt_constant_propagation.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_constant_propagation.cpp' object='opt_constant_propagation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_constant_propagation.lo `test -f '$(GLSL_SRCDIR)/opt_constant_propagation.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_constant_propagation.cpp

opt_constant_variable.lo: $(GLSL_SRCDIR)/opt_constant_variable.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_constant_variable.lo -MD -MP -MF $(DEPDIR)/opt_constant_variable.Tpo -c -o opt_constant_variable.lo `test -f '$(GLSL_SRCDIR)/opt_constant_variable.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_constant_variable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_constant_variable.Tpo $(DEPDIR)/opt_constant_variable.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_constant_variable.cpp' object='opt_constant_variable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_constant_variable.lo `test -f '$(GLSL_SRCDIR)/opt_constant_variable.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_constant_variable.cpp

opt_copy_propagation.lo: $(GLSL_SRCDIR)/opt_copy_propagation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_copy_propagation.lo -MD -MP -MF $(DEPDIR)/opt_copy_propagation.Tpo -c -o opt_copy_propagation.lo `test -f '$(GLSL_SRCDIR)/opt_copy_propagation.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_copy_propagation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_copy_propagation.Tpo $(DEPDIR)/opt_copy_propagation.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_copy_propagation.cpp' object='opt_copy_propagation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_copy_propagation.lo `test -f '$(GLSL_SRCDIR)/opt_copy_propagation.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_copy_propagation.cpp

opt_copy_propagation_elements.lo: $(GLSL_SRCDIR)/opt_copy_propagation_elements.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_copy_propagation_elements.lo -MD -MP -MF $(DEPDIR)/opt_copy_propagation_elements.Tpo -c -o opt_copy_propagation_elements.lo `test -f '$(GLSL_SRCDIR)/opt_copy_propagation_elements.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_copy_propagation_elements.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_copy_propagation_elements.Tpo $(DEPDIR)/opt_copy_propagation_elements.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_copy_propagation_elements.cpp' object='opt_copy_propagation_elements.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_copy_propagation_elements.lo `test -f '$(GLSL_SRCDIR)/opt_copy_propagation_elements.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_copy_propagation_elements.cpp

opt_dead_code.lo: $(GLSL_SRCDIR)/opt_dead_code.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_dead_code.lo -MD -MP -MF $(DEPDIR)/opt_dead_code.Tpo -c -o opt_dead_code.lo `test -f '$(GLSL_SRCDIR)/opt_dead_code.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_dead_code.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_dead_code.Tpo $(DEPDIR)/opt_dead_code.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_dead_code.cpp' object='opt_dead_code.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_dead_code.lo `test -f '$(GLSL_SRCDIR)/opt_dead_code.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_dead_code.cpp

opt_dead_code_local.lo: $(GLSL_SRCDIR)/opt_dead_code_local.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_dead_code_local.lo -MD -MP -MF $(DEPDIR)/opt_dead_code_local.Tpo -c -o opt_dead_code_local.lo `test -f '$(GLSL_SRCDIR)/opt_dead_code_local.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_dead_code_local.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_dead_code_local.Tpo $(DEPDIR)/opt_dead_code_local.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_dead_code_local.cpp' object='opt_dead_code_local.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_dead_code_local.lo `test -f '$(GLSL_SRCDIR)/opt_dead_code_local.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_dead_code_local.cpp

opt_dead_functions.lo: $(GLSL_SRCDIR)/opt_dead_functions.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_dead_functions.lo -MD -MP -MF $(DEPDIR)/opt_dead_functions.Tpo -c -o opt_dead_functions.lo `test -f '$(GLSL_SRCDIR)/opt_dead_functions.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_dead_functions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_dead_functions.Tpo $(DEPDIR)/opt_dead_functions.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_dead_functions.cpp' object='opt_dead_functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_dead_functions.lo `test -f '$(GLSL_SRCDIR)/opt_dead_functions.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_dead_functions.cpp

opt_function_inlining.lo: $(GLSL_SRCDIR)/opt_function_inlining.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_function_inlining.lo -MD -MP -MF $(DEPDIR)/opt_function_inlining.Tpo -c -o opt_function_inlining.lo `test -f '$(GLSL_SRCDIR)/opt_function_inlining.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_function_inlining.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_function_inlining.Tpo $(DEPDIR)/opt_function_inlining.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_function_inlining.cpp' object='opt_function_inlining.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_function_inlining.lo `test -f '$(GLSL_SRCDIR)/opt_function_inlining.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_function_inlining.cpp

opt_if_simplification.lo: $(GLSL_SRCDIR)/opt_if_simplification.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_if_simplification.lo -MD -MP -MF $(DEPDIR)/opt_if_simplification.Tpo -c -o opt_if_simplification.lo `test -f '$(GLSL_SRCDIR)/opt_if_simplification.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_if_simplification.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_if_simplification.Tpo $(DEPDIR)/opt_if_simplification.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_if_simplification.cpp' object='opt_if_simplification.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_if_simplification.lo `test -f '$(GLSL_SRCDIR)/opt_if_simplification.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_if_simplification.cpp

opt_noop_swizzle.lo: $(GLSL_SRCDIR)/opt_noop_swizzle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_noop_swizzle.lo -MD -MP -MF $(DEPDIR)/opt_noop_swizzle.Tpo -c -o opt_noop_swizzle.lo `test -f '$(GLSL_SRCDIR)/opt_noop_swizzle.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_noop_swizzle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_noop_swizzle.Tpo $(DEPDIR)/opt_noop_swizzle.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_noop_swizzle.cpp' object='opt_noop_swizzle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_noop_swizzle.lo `test -f '$(GLSL_SRCDIR)/opt_noop_swizzle.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_noop_swizzle.cpp

opt_redundant_jumps.lo: $(GLSL_SRCDIR)/opt_redundant_jumps.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_redundant_jumps.lo -MD -MP -MF $(DEPDIR)/opt_redundant_jumps.Tpo -c -o opt_redundant_jumps.lo `test -f '$(GLSL_SRCDIR)/opt_redundant_jumps.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_redundant_jumps.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_redundant_jumps.Tpo $(DEPDIR)/opt_redundant_jumps.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_redundant_jumps.cpp' object='opt_redundant_jumps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_redundant_jumps.lo `test -f '$(GLSL_SRCDIR)/opt_redundant_jumps.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_redundant_jumps.cpp

opt_structure_splitting.lo: $(GLSL_SRCDIR)/opt_structure_splitting.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_structure_splitting.lo -MD -MP -MF $(DEPDIR)/opt_structure_splitting.Tpo -c -o opt_structure_splitting.lo `test -f '$(GLSL_SRCDIR)/opt_structure_splitting.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_structure_splitting.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_structure_splitting.Tpo $(DEPDIR)/opt_structure_splitting.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_structure_splitting.cpp' object='opt_structure_splitting.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_structure_splitting.lo `test -f '$(GLSL_SRCDIR)/opt_structure_splitting.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_structure_splitting.cpp

opt_swizzle_swizzle.lo: $(GLSL_SRCDIR)/opt_swizzle_swizzle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_swizzle_swizzle.lo -MD -MP -MF $(DEPDIR)/opt_swizzle_swizzle.Tpo -c -o opt_swizzle_swizzle.lo `test -f '$(GLSL_SRCDIR)/opt_swizzle_swizzle.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_swizzle_swizzle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_swizzle_swizzle.Tpo $(DEPDIR)/opt_swizzle_swizzle.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_swizzle_swizzle.cpp' object='opt_swizzle_swizzle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_swizzle_swizzle.lo `test -f '$(GLSL_SRCDIR)/opt_swizzle_swizzle.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_swizzle_swizzle.cpp

opt_tree_grafting.lo: $(GLSL_SRCDIR)/opt_tree_grafting.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT opt_tree_grafting.lo -MD -MP -MF $(DEPDIR)/opt_tree_grafting.Tpo -c -o opt_tree_grafting.lo `test -f '$(GLSL_SRCDIR)/opt_tree_grafting.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_tree_grafting.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_tree_grafting.Tpo $(DEPDIR)/opt_tree_grafting.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/opt_tree_grafting.cpp' object='opt_tree_grafting.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o opt_tree_grafting.lo `test -f '$(GLSL_SRCDIR)/opt_tree_grafting.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/opt_tree_grafting.cpp

s_expression.lo: $(GLSL_SRCDIR)/s_expression.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT s_expression.lo -MD -MP -MF $(DEPDIR)/s_expression.Tpo -c -o s_expression.lo `test -f '$(GLSL_SRCDIR)/s_expression.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/s_expression.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/s_expression.Tpo $(DEPDIR)/s_expression.Plo
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/s_expression.cpp' object='s_expression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o s_expression.lo `test -f '$(GLSL_SRCDIR)/s_expression.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/s_expression.cpp

standalone_scaffolding.o: $(GLSL_SRCDIR)/standalone_scaffolding.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT standalone_scaffolding.o -MD -MP -MF $(DEPDIR)/standalone_scaffolding.Tpo -c -o standalone_scaffolding.o `test -f '$(GLSL_SRCDIR)/standalone_scaffolding.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/standalone_scaffolding.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/standalone_scaffolding.Tpo $(DEPDIR)/standalone_scaffolding.Po
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/standalone_scaffolding.cpp' object='standalone_scaffolding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o standalone_scaffolding.o `test -f '$(GLSL_SRCDIR)/standalone_scaffolding.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/standalone_scaffolding.cpp

standalone_scaffolding.obj: $(GLSL_SRCDIR)/standalone_scaffolding.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT standalone_scaffolding.obj -MD -MP -MF $(DEPDIR)/standalone_scaffolding.Tpo -c -o standalone_scaffolding.obj `if test -f '$(GLSL_SRCDIR)/standalone_scaffolding.cpp'; then $(CYGPATH_W) '$(GLSL_SRCDIR)/standalone_scaffolding.cpp'; else $(CYGPATH_W) '$(srcdir)/$(GLSL_SRCDIR)/standalone_scaffolding.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/standalone_scaffolding.Tpo $(DEPDIR)/standalone_scaffolding.Po
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/standalone_scaffolding.cpp' object='standalone_scaffolding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o standalone_scaffolding.obj `if test -f '$(GLSL_SRCDIR)/standalone_scaffolding.cpp'; then $(CYGPATH_W) '$(GLSL_SRCDIR)/standalone_scaffolding.cpp'; else $(CYGPATH_W) '$(srcdir)/$(GLSL_SRCDIR)/standalone_scaffolding.cpp'; fi`

main.o: $(GLSL_SRCDIR)/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT main.o -MD -MP -MF $(DEPDIR)/main.Tpo -c -o main.o `test -f '$(GLSL_SRCDIR)/main.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/main.Tpo $(DEPDIR)/main.Po
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/main.cpp' object='main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o main.o `test -f '$(GLSL_SRCDIR)/main.cpp' || echo '$(srcdir)/'`$(GLSL_SRCDIR)/main.cpp

main.obj: $(GLSL_SRCDIR)/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT main.obj -MD -MP -MF $(DEPDIR)/main.Tpo -c -o main.obj `if test -f '$(GLSL_SRCDIR)/main.cpp'; then $(CYGPATH_W) '$(GLSL_SRCDIR)/main.cpp'; else $(CYGPATH_W) '$(srcdir)/$(GLSL_SRCDIR)/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/main.Tpo $(DEPDIR)/main.Po
#	$(AM_V_CXX) \
#	source='$(GLSL_SRCDIR)/main.cpp' object='main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o main.obj `if test -f '$(GLSL_SRCDIR)/main.cpp'; then $(CYGPATH_W) '$(GLSL_SRCDIR)/main.cpp'; else $(CYGPATH_W) '$(srcdir)/$(GLSL_SRCDIR)/main.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

.ll.cc:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) all-local
installdirs: installdirs-recursive
installdirs-am:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f glsl_lexer.cc
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	ctags-recursive install install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	ctags ctags-recursive distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am


# automake <=1.11 and automake >=1.12 have different conventions for naming C++ header files
# made by yacc.  To work with both, we write our own rule rather than using automake's.
# When (if) we require automake >=1.12 in configure.ac, this can be removed, and we can use
# the automake rule.
glsl_parser.cc glsl_parser.h: glsl_parser.yy
	$(AM_V_GEN) $(YACC) -v -o glsl_parser.cc -p "_mesa_glsl_" --defines=glsl_parser.h $<

builtin_function.cpp: $(srcdir)/builtins/profiles/* $(srcdir)/builtins/ir/* $(srcdir)/builtins/glsl/* $(srcdir)/builtins/tools/generate_builtins.py $(srcdir)/builtins/tools/texture_builtins.py builtin_compiler$(EXEEXT)
	$(AM_V_GEN) $(PYTHON2) $(PYTHON_FLAGS) $(srcdir)/builtins/tools/generate_builtins.py ./builtin_compiler > builtin_function.cpp || rm -f builtin_function.cpp

glcpp/libglcpp.la:
	cd glcpp ; $(MAKE) $(AM_MAKEFLAGS)

# Provide compatibility with scripts for the old Mesa build system for
# a while by putting a link to the library in the current directory.
all-local: libglsl.la
	ln -f .libs/libglsl.a .

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
