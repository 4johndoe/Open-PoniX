# Makefile.in generated by automake 1.10.1 from Makefile.am.
# perf/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/cairo
pkglibdir = $(libdir)/cairo
pkgincludedir = $(includedir)/cairo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
EXTRA_PROGRAMS = cairo-perf$(EXEEXT) cairo-perf-diff-files$(EXEEXT)
#am__append_1 = cairo-perf-win32.c
#am__append_2 = cairo-perf-os2.c
am__append_3 = cairo-perf-posix.c
subdir = perf
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__cairo_perf_SOURCES_DIST = cairo-perf.c cairo-perf.h \
	cairo-perf-cover.c cairo-stats.c cairo-stats.h box-outline.c \
	fill.c long-lines.c mosaic.c mosaic.h paint.c \
	paint-with-alpha.c pattern_create_radial.c rectangles.c \
	stroke.c subimage_copy.c tessellate.c unaligned-clip.c text.c \
	world-map.c world-map.h zrusin.c zrusin-another.h \
	long-dashed-lines.c cairo-perf-win32.c cairo-perf-os2.c \
	cairo-perf-posix.c
#am__objects_1 =  \
#	cairo-perf-win32.$(OBJEXT)
#am__objects_2 = cairo-perf-os2.$(OBJEXT)
am__objects_3 = cairo-perf-posix.$(OBJEXT)
am_cairo_perf_OBJECTS = cairo-perf.$(OBJEXT) \
	cairo-perf-cover.$(OBJEXT) cairo-stats.$(OBJEXT) \
	box-outline.$(OBJEXT) fill.$(OBJEXT) long-lines.$(OBJEXT) \
	mosaic.$(OBJEXT) paint.$(OBJEXT) paint-with-alpha.$(OBJEXT) \
	pattern_create_radial.$(OBJEXT) rectangles.$(OBJEXT) \
	stroke.$(OBJEXT) subimage_copy.$(OBJEXT) tessellate.$(OBJEXT) \
	unaligned-clip.$(OBJEXT) text.$(OBJEXT) world-map.$(OBJEXT) \
	zrusin.$(OBJEXT) long-dashed-lines.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3)
cairo_perf_OBJECTS = $(am_cairo_perf_OBJECTS)
cairo_perf_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
cairo_perf_DEPENDENCIES =  \
	$(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_1)
am_cairo_perf_diff_files_OBJECTS = cairo-perf-diff-files.$(OBJEXT) \
	cairo-stats.$(OBJEXT)
cairo_perf_diff_files_OBJECTS = $(am_cairo_perf_diff_files_OBJECTS)
cairo_perf_diff_files_LDADD = $(LDADD)
cairo_perf_diff_files_DEPENDENCIES =  \
	$(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(cairo_perf_SOURCES) $(cairo_perf_diff_files_SOURCES)
DIST_SOURCES = $(am__cairo_perf_SOURCES_DIST) \
	$(cairo_perf_diff_files_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal -I/usr/xorg/share/aclocal
AMTAR = ${SHELL} /source/gtk/cairo-1.6.4/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /source/gtk/cairo-1.6.4/missing --run autoconf
AUTOHEADER = ${SHELL} /source/gtk/cairo-1.6.4/missing --run autoheader
AUTOMAKE = ${SHELL} /source/gtk/cairo-1.6.4/missing --run automake-1.10
AWK = gawk
CAIROPERF_LIBS = -lrt
CAIRO_CFLAGS = -I/usr/include/freetype2     -I/usr/include/libpng12   -I/usr/xorg/include   -I/usr/xorg/include   -I/usr/xorg/include/pixman-1     -Wall -Wextra -Wsign-compare -Werror-implicit-function-declaration -Wpointer-arith -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wstrict-aliasing=2 -Winit-self -Wunsafe-loop-optimizations -Wdeclaration-after-statement -Wold-style-definition -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline -fno-strict-aliasing
CAIRO_LDADD = 
CAIRO_LIBS = -lz -lz -lfreetype   -lfontconfig   -lpng12   -L/usr/xorg/lib -lXrender -lX11   -L/usr/xorg/lib -lX11   -L/usr/xorg/lib -lpixman-1   -lm
CAIRO_NONPKGCONFIG_CFLAGS = 
CAIRO_NONPKGCONFIG_LIBS = -lz -lz -lm
CAIRO_REQUIRES = freetype2 >= 9.7.3 fontconfig libpng12 xrender >= 0.6 x11 pixman-1 >= 0.10.0 
CAIRO_VERSION_MAJOR = 1
CAIRO_VERSION_MICRO = 4
CAIRO_VERSION_MINOR = 6
CC = i486-TSOL-linux-gnu-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O2
CPP = i486-TSOL-linux-gnu-gcc -E
CPPFLAGS =  -I/usr/xorg/include
CXX = i486-TSOL-linux-gnu-g++
CXXCPP = i486-TSOL-linux-gnu-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
FIND = /usr/bin/find
FONTCONFIG_CFLAGS =  
FONTCONFIG_LIBS = -lfontconfig  
FREETYPE_CFLAGS = -I/usr/include/freetype2  
FREETYPE_CONFIG = 
FREETYPE_LIBS = -lfreetype  
GLITZ_AGL_CFLAGS = 
GLITZ_AGL_LIBS = 
GLITZ_EGL_CFLAGS = 
GLITZ_EGL_LIBS = 
GLITZ_GLX_CFLAGS = 
GLITZ_GLX_LIBS = 
GLITZ_WGL_CFLAGS = 
GLITZ_WGL_LIBS = 
GREP = /usr/bin/grep
GS = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -static-libgcc
LIBOBJS = 
LIBRSVG_CFLAGS = 
LIBRSVG_LIBS = 
LIBS =  -lm
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
LT_CURRENT_MINUS_AGE = 2
MAKEINFO = ${SHELL} /source/gtk/cairo-1.6.4/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJDUMP = objdump
OBJEXT = o
PACKAGE = cairo
PACKAGE_BUGREPORT = http://bugs.freedesktop.org/enter_bug.cgi?product=cairo
PACKAGE_NAME = cairo
PACKAGE_STRING = cairo 1.6.4
PACKAGE_TARNAME = cairo
PACKAGE_VERSION = 1.6.4
PATH_SEPARATOR = :
PKGCONFIG_REQUIRES = Requires.private
PKG_CONFIG = /usr/bin/pkg-config
POPPLER_CFLAGS = 
POPPLER_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHTOOL = 
STRIP = strip
VERSION = 1.6.4
VERSION_INFO = 19:5:17
XARGS = /usr/bin/xargs
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /source/gtk/cairo-1.6.4/perf
abs_srcdir = /source/gtk/cairo-1.6.4/perf
abs_top_builddir = /source/gtk/cairo-1.6.4
abs_top_srcdir = /source/gtk/cairo-1.6.4
ac_ct_CC = i486-TSOL-linux-gnu-gcc
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
directfb_CFLAGS = 
directfb_LIBS = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
glitz_CFLAGS = 
glitz_LIBS = 
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /source/gtk/cairo-1.6.4/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pixman_CFLAGS = -I/usr/xorg/include/pixman-1  
pixman_LIBS = -L/usr/xorg/lib -lpixman-1  
png_CFLAGS = -I/usr/include/libpng12   
png_LIBS = -lpng12   
png_REQUIRES = libpng12 
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
xcb_CFLAGS = 
xcb_LIBS = 
xlib_CFLAGS = -I/usr/xorg/include   
xlib_LIBS = -L/usr/xorg/lib -lX11   
xlib_xrender_CFLAGS = -I/usr/xorg/include   
xlib_xrender_LIBS = -L/usr/xorg/lib -lXrender -lX11   

# We're using _GNU_SOURCE to get the prototype for asprintf. This may
# not be the most portable approach, but it is pragmatic and I'm
# willing to do something cleaner as soon as it causes someone a
# problem.
INCLUDES = \
	-D_GNU_SOURCE				\
	-I$(srcdir)				\
	-I$(top_srcdir)/boilerplate		\
	-I$(top_srcdir)/src			\
	-I$(top_builddir)/src			\
	$(CAIRO_CFLAGS)

EXTRA_DIST = cairo-perf-diff Makefile.win32
cairo_perf_SOURCES = cairo-perf.c cairo-perf.h cairo-perf-cover.c \
	cairo-stats.c cairo-stats.h box-outline.c fill.c long-lines.c \
	mosaic.c mosaic.h paint.c paint-with-alpha.c \
	pattern_create_radial.c rectangles.c stroke.c subimage_copy.c \
	tessellate.c unaligned-clip.c text.c world-map.c world-map.h \
	zrusin.c zrusin-another.h long-dashed-lines.c $(am__append_1) \
	$(am__append_2) $(am__append_3)
cairo_perf_diff_files_SOURCES = \
	cairo-perf-diff-files.c \
	cairo-stats.c		\
	cairo-stats.h

LDADD = $(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la \
	$(CAIROPERF_LIBS)


# Do a funny transition of CAIRO_TEST_TARGET through TARGETS such that
# one can limit tested targets both through CAIRO_TEST_TARGET env var
# and TARGETS make var on the command line.  Same for the rest.
TARGETS = $(CAIRO_TEST_TARGET)
TARGETS_EXCLUDE = $(CAIRO_TEST_TARGET_EXCLUDE)
ITERS = $(CAIRO_PERF_ITERATIONS)
CAIRO_PERF_ENVIRONMENT = CAIRO_PERF_ITERATIONS="$(ITERS)" CAIRO_TEST_TARGET="$(TARGETS)" CAIRO_TEST_TARGET_EXCLUDE="$(TARGETS_EXCLUDE)"

# Cap the maximum number of iterations during 'make check'
TESTS_ENVIRONMENT = CAIRO_TEST_TARGET="$(TARGETS)" CAIRO_PERF_ITERATIONS="10"
TESTS = cairo-perf$(EXEEXT)
EXTRA_VALGRIND_FLAGS = $(CAIRO_EXTRA_VALGRIND_FLAGS)
VALGRIND_MEMCHECK_FLAGS = \
	--tool=memcheck \
	--suppressions=$(top_srcdir)/test/.valgrind-suppressions \
	--leak-check=yes --show-reachable=yes

VALGRIND_CALLGRIND_FLAGS = \
	--tool=callgrind

CLEANFILES = \
	$(EXTRA_PROGRAMS) \
	valgrind-log \
	callgrind.out.* \
	index.html

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  perf/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  perf/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
cairo-perf$(EXEEXT): $(cairo_perf_OBJECTS) $(cairo_perf_DEPENDENCIES) 
	@rm -f cairo-perf$(EXEEXT)
	$(LINK) $(cairo_perf_OBJECTS) $(cairo_perf_LDADD) $(LIBS)
cairo-perf-diff-files$(EXEEXT): $(cairo_perf_diff_files_OBJECTS) $(cairo_perf_diff_files_DEPENDENCIES) 
	@rm -f cairo-perf-diff-files$(EXEEXT)
	$(LINK) $(cairo_perf_diff_files_OBJECTS) $(cairo_perf_diff_files_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/box-outline.Po
include ./$(DEPDIR)/cairo-perf-cover.Po
include ./$(DEPDIR)/cairo-perf-diff-files.Po
include ./$(DEPDIR)/cairo-perf-os2.Po
include ./$(DEPDIR)/cairo-perf-posix.Po
include ./$(DEPDIR)/cairo-perf-win32.Po
include ./$(DEPDIR)/cairo-perf.Po
include ./$(DEPDIR)/cairo-stats.Po
include ./$(DEPDIR)/fill.Po
include ./$(DEPDIR)/long-dashed-lines.Po
include ./$(DEPDIR)/long-lines.Po
include ./$(DEPDIR)/mosaic.Po
include ./$(DEPDIR)/paint-with-alpha.Po
include ./$(DEPDIR)/paint.Po
include ./$(DEPDIR)/pattern_create_radial.Po
include ./$(DEPDIR)/rectangles.Po
include ./$(DEPDIR)/stroke.Po
include ./$(DEPDIR)/subimage_copy.Po
include ./$(DEPDIR)/tessellate.Po
include ./$(DEPDIR)/text.Po
include ./$(DEPDIR)/unaligned-clip.Po
include ./$(DEPDIR)/world-map.Po
include ./$(DEPDIR)/zrusin.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


$(top_builddir)/boilerplate/libcairoboilerplate.la: $(top_builddir)/src/libcairo.la
	cd $(top_builddir)/boilerplate && $(MAKE) $(AM_MAKEFLAGS) libcairoboilerplate.la

$(top_builddir)/src/libcairo.la:
	cd $(top_builddir)/src && $(MAKE) $(AM_MAKEFLAGS) libcairo.la

perf: cairo-perf$(EXEEXT)
	$(CAIRO_PERF_ENVIRONMENT) ./cairo-perf$(EXEEXT)

html: index.html

index.html: cairo-perf$(EXEEXT)
	$(CAIRO_PERF_ENVIRONMENT) ./cairo-perf-diff -h HEAD > $@

check-valgrind perf-valgrind:
	$(MAKE) $(AM_MAKEFLAGS) check \
	    TESTS_ENVIRONMENT='$(TESTS_ENVIRONMENT) \
	    $(top_builddir)/libtool --mode=execute \
	    valgrind $(VALGRIND_MEMCHECK_FLAGS) $(EXTRA_VALGRIND_FLAGS)' \
	    | tee valgrind-log

perf-callgrind:
	$(MAKE) $(AM_MAKEFLAGS) check \
	    TESTS_ENVIRONMENT='$(TESTS_ENVIRONMENT) \
	    $(top_builddir)/libtool --mode=execute \
	    valgrind $(VALGRIND_CALLGRIND_FLAGS) $(EXTRA_VALGRIND_FLAGS)'

.PHONY: perf html check-valgrind perf-valgrind perf-callgrind
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
