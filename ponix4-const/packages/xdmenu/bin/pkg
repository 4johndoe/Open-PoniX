#! /bin/sh

. $TS_GLOBAL

INITLIST=/tmp/initlist
PKGDIR=/tmp/pkg

CMD=$1
NAME=$2
EXT=$3
PREFIX=$4

if [ -z "$EXT" ] ; then EXT=px ; fi
if [ -z "$PREFIX" ] ; then PREFIX=$PKG_PREFIX ; fi

help_and_exit ()
{
	echo "Usage: pkg <load/require> <pkg_name> [ext] [prefix]"
	echo ""
	echo "  load    - should be used only from /init.d/pkg script on system boot."
	echo "  require - use when system allready booted. load pkg if not loaded, and run init."
	echo ""
	echo "  NOTE1: [ext] is depracted and ignored, we try .px and then .pkg"
	echo "  NOTE2: if [prefix] not defined, PKG_PREFIX used for default."
	echo ""
	exit 1
}

if [ -z "$NAME" ] ; then
	help_and_exit
fi

if [ -n "$DEBUG_NETWORK" ] ; then
	debug="-d"
fi

# Takes one param as argument. If set to INITNOW, then init package's
# init.d scripts immediately after loading package.
#
# otherwise just append INITLIST, so that /etc/ponix.init script will run
# them later on system startup
load_pkg ()
{
	local INITNOW
	local ZBIN
	local PKGFILE

	INITNOW=$1
	ZBIN=xzcat
	PKGFILE=/$NAME.px

	if [ "$INITNOW" = "INITNOW" ] ; then
		CURRENTRC=5	
	fi

	# This first checks for pkgs loaded on local storage
	# If it doesn't find them it tries to download from tftp

	if [ -e ${STORAGE_PKG_PATH}/$NAME.px ]; then
	    echo_log "Loading package $NAME (storage)..." -n $debug
	    ln -s ${STORAGE_PKG_PATH}/$NAME.px /$NAME.px
	elif [ -e ${STORAGE_PKG_PATH}/$NAME.pkg ]; then
	    echo_log "Loading package $NAME (storage)..." -n $debug
	    ln -s ${STORAGE_PKG_PATH}/$NAME.pkg /$NAME.pkg
	    ZBIN=zcat
	    PKGFILE=/$NAME.pkg
	else
		if [ -z "$SERVER_IP" ]; then
	    	 	echo_log "No tftp server availibale. Can't load package!" $debug
		 	return 1
		fi
	    
		echo_log "Trying to load package from $SERVER_IP:" $debug
                echo_log "$NAME.px..." -n $debug
                
	    	tftp -g -r ${BASEPATH}/$PREFIX/$NAME.$EXT -l /$NAME.$EXT $SERVER_IP 2>/dev/null 

		if [ ! -e /$NAME.$EXT ]; then 
			echo_log "Not found" $debug
			echo_log "$NAME.pkg..." -n $debug
			tftp -g -r ${BASEPATH}/$PREFIX/$NAME.pkg -l /$NAME.pkg $SERVER_IP 2>/dev/null
			if [ ! -e /$NAME.pkg ]; then 
				echo_log "Not found" $debug
				return 1
			fi
			ZBIN=zcat
			PKGFILE=/$NAME.pkg
		fi

	fi

	# pkg downloaded or symlinked to /pkgname.ext, extract

	if [ ! -s $PKGFILE ] ; then
		if [ -e /$NAME.px ] || [ -e /$NAME.pkg ]; then
			rm /$NAME.px 2>/dev/null
			rm /$NAME.pkg 2>/dev/null
		fi
		if [ -e /dependencies ] ; then
			rm /dependencies
		fi
		echo_log "Not found" $debug
		return 1
	fi

	touch /var/packages/${NAME}.loaded
	
	# extract and remember init.d scripts

	$ZBIN $PKGFILE | tar -C $PKGDIR -xf - etc/rc$CURRENTRC.d 2>/dev/null
	if [ -e $PKGDIR/etc/rc$CURRENTRC.d ] ; then
		ls $PKGDIR/etc/rc$CURRENTRC.d >> $INITLIST
	fi
	rm -Rf $PKGDIR/* 2>/dev/null

	# exract package

	$ZBIN $PKGFILE | tar -C / -xf -
	rm $PKGFILE
	if [ -e /dependencies ] ; then
		rm /dependencies
	fi

	echo_log "Ok" $debug

	# not sure if we need this in ponix
	if [ -e /lib/modules/$NAME.ko ] ; then
		cat /etc/$NAME.modules >> /etc/modules.mpx
		rm /etc/$NAME.modules
        	touch /var/packages/$NAME
	fi

	if [ "$INITNOW" = "INITNOW" ] && [ -s $INITLIST ] ; then
		(cat $INITLIST | sort) |
		while read package
		do
			echo_log " - pkg require init.d $package" $debug
		        /etc/rc${CURRENTRC}.d/$package init >> $LOGFILE 2>>$LOGFILE
		done	
		rm $INITLIST
	fi

	return 0
}


case $CMD in

load)
	if pkg_is_loaded $NAME ; then
		exit 0    
	fi

	if [ -z "$CURRENTRC" ] ; then
		echo "Use 'pkg load' only on system boot! Use 'pkg require' for runtime dependencies."
		exit 1
	fi

	load_pkg SYSTEMBOOT
	exit $?
		
	;;
	
require)
	INITLIST="${INITLIST}.$$"
	if pkg_is_loaded $NAME ; then
		echo "Required package ($NAME) was allready loaded!"
		exit 0	
	fi

	if load_pkg INITNOW ; then
		echo "Required package ($NAME) was loaded ok!"
		exit 0	
	else
		echo "Required package ($NAME) was not loaded!"
		exit 1	
	fi
	
	;;

*)
	help_and_exit
    ;;
	
esac

exit 1
